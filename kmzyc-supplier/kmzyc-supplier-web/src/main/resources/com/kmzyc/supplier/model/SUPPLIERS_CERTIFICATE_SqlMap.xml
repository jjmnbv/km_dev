<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SUPPLIERS_CERTIFICATE">
	<resultMap id="BaseResultMap" class="com.kmzyc.supplier.model.SuppliersCertificate">
		<result column="SC_ID" property="scId" jdbcType="DECIMAL" />
		<result column="SUPPLIER_ID" property="supplierId" jdbcType="DECIMAL" />
		<result column="DOC_TYPE" property="docType" jdbcType="VARCHAR" />
		<result column="DOC_CODE" property="docCode" jdbcType="VARCHAR" />
		<result column="FILE_PATH" property="filePath" jdbcType="VARCHAR" />
		<result column="FILE_NAME" property="fileName" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="fileResultMap" class="com.kmzyc.supplier.model.SuppliersCertificate">
		
		<result column="SUPPLIER_ID" property="supplierId" jdbcType="DECIMAL" />
		
		<result column="FILE_PATH" property="filePath" jdbcType="VARCHAR" />
		<result column="FILE_NAME" property="fileName" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Example_Where_Clause">
		<iterate property="oredCriteria" conjunction="or" prepend="where"
			removeFirstPrepend="iterate">
			<isEqual property="oredCriteria[].valid" compareValue="true">
				(
				<iterate prepend="and" property="oredCriteria[].criteriaWithoutValue"
					conjunction="and">
					$oredCriteria[].criteriaWithoutValue[]$
				</iterate>
				<iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue"
					conjunction="and">
					$oredCriteria[].criteriaWithSingleValue[].condition$
					#oredCriteria[].criteriaWithSingleValue[].value#
				</iterate>
				<iterate prepend="and" property="oredCriteria[].criteriaWithListValue"
					conjunction="and">
					$oredCriteria[].criteriaWithListValue[].condition$
					<iterate property="oredCriteria[].criteriaWithListValue[].values"
						open="(" close=")" conjunction=",">
						#oredCriteria[].criteriaWithListValue[].values[]#
					</iterate>
				</iterate>
				<iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue"
					conjunction="and">
					$oredCriteria[].criteriaWithBetweenValue[].condition$
					#oredCriteria[].criteriaWithBetweenValue[].values[0]# and
					#oredCriteria[].criteriaWithBetweenValue[].values[1]#
				</iterate>
				)
			</isEqual>
		</iterate>
	</sql>
	<sql id="Base_Column_List">
		SC_ID, SUPPLIER_ID, DOC_TYPE, DOC_CODE, FILE_PATH,
		FILE_NAME
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterClass="com.kmzyc.supplier.model.example.SuppliersCertificateExample">
		select
		<isParameterPresent>
			<isEqual property="distinct" compareValue="true">
				distinct
			</isEqual>
		</isParameterPresent>
		<include refid="SUPPLIERS_CERTIFICATE.Base_Column_List" />
		from SUPPLIERS_CERTIFICATE
		<isParameterPresent>
			<include refid="SUPPLIERS_CERTIFICATE.Example_Where_Clause" />
			<isNotNull property="orderByClause">
				order by $orderByClause$
			</isNotNull>
		</isParameterPresent>
	</select>

	<select id="selectCertificateInfoList" resultMap="fileResultMap"
		parameterClass="com.kmzyc.supplier.model.SuppliersCertificate">


		select sci.SUPPLIER_ID,
		scf.FILE_PATH,
	
		decode(sci.CERTIFICATE_TYPE,
		1,
		'三证合一',
		2,
		'营业执照电子版',
		3,
		'组织机构代码证电子版',
		4,
		'税务登记证电子版',
		5,
		'法人身份证电子版',
		6,
		'食品经营许可证电子版',
		7,
		'食品安全管理人员相关证件电子版',
		8,
		'食品流通许可证电子版',
		9,
		'卫生许可证',
		10,
		'食品生产许可证或GMP资质认证') as FILE_NAME
		from SUPPLIERS_CERTIFICATE_FILE scf,
		SUPPLIERS_CERTIFICATE_INFO sci,
		suppliers_recheck sr
		where sci.info_id = scf.info_id
		and sr.supplier_id = sci.SUPPLIER_ID
		and scf.is_valid =1
		and (sci.CERTIFICATE_TYPE = 5
		or (sr.THREE_ID_TYPE = 2 and sci.CERTIFICATE_TYPE = 1)
		or (sr.SUPPLIER_TYPE = 1 and sr.BUSINESS_TYPE = 2 and
		sci.CERTIFICATE_TYPE = 9)
		or (sr.THREE_ID_TYPE = 1 and sci.CERTIFICATE_TYPE in (2, 3, 4))
		or (sr.SUPPLIER_TYPE = 1 and BUSINESS_TYPE = 1 and
		sci.CERTIFICATE_TYPE in (6, 7))
		or (sr.SUPPLIER_TYPE = 1 and BUSINESS_TYPE = 2 and
		sci.CERTIFICATE_TYPE in (7, 8, 9)))
		and sci.status=1 and sr.STATUS=2 
		and sci.supplier_id = #supplierId:NUMBER#

<!-- 1三证合一 2非三证合一3 食品经营者  新证 4食品经营者  老证 5食品生产者 -->

	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterClass="com.kmzyc.supplier.model.SuppliersCertificate">
		select
		<include refid="SUPPLIERS_CERTIFICATE.Base_Column_List" />
		from SUPPLIERS_CERTIFICATE
		where SC_ID = #scId:DECIMAL#
	</select>
	<delete id="deleteByPrimaryKey" parameterClass="com.kmzyc.supplier.model.SuppliersCertificate">
		delete from
		SUPPLIERS_CERTIFICATE
		where SC_ID = #scId:DECIMAL#
	</delete>
	<delete id="deleteByExample"
		parameterClass="com.kmzyc.supplier.model.example.SuppliersCertificateExample">
		delete from SUPPLIERS_CERTIFICATE
		<include refid="SUPPLIERS_CERTIFICATE.Example_Where_Clause" />
	</delete>
	<insert id="insert" parameterClass="com.kmzyc.supplier.model.SuppliersCertificate">
		insert into
		SUPPLIERS_CERTIFICATE (SC_ID, SUPPLIER_ID, DOC_TYPE,
		DOC_CODE,
		FILE_PATH, FILE_NAME)
		values (#scId:Long#, #supplierId:Long#,
		#docType:VARCHAR#,
		#docCode:VARCHAR#,
		#filePath:VARCHAR#,
		#fileName:VARCHAR#)
	</insert>
	<insert id="insertSelective" parameterClass="com.kmzyc.supplier.model.SuppliersCertificate">
		<selectKey keyProperty="scId" resultClass="java.lang.Long">
			SELECT
			SEQ_SUPPLIER_CERTIFICATE.NEXTVAL FROM DUAL
		</selectKey>
		insert into SUPPLIERS_CERTIFICATE
		<dynamic prepend="(">
			<isNotNull prepend="," property="scId">
				SC_ID
			</isNotNull>
			<isNotNull prepend="," property="supplierId">
				SUPPLIER_ID
			</isNotNull>
			<isNotNull prepend="," property="docType">
				DOC_TYPE
			</isNotNull>
			<isNotNull prepend="," property="docCode">
				DOC_CODE
			</isNotNull>
			<isNotNull prepend="," property="filePath">
				FILE_PATH
			</isNotNull>
			<isNotNull prepend="," property="fileName">
				FILE_NAME
			</isNotNull>
			)
		</dynamic>
		values
		<dynamic prepend="(">
			<isNotNull prepend="," property="scId">
				#scId:LONG#
			</isNotNull>
			<isNotNull prepend="," property="supplierId">
				#supplierId:LONG#
			</isNotNull>
			<isNotNull prepend="," property="docType">
				#docType:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="docCode">
				#docCode:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="filePath">
				#filePath:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="fileName">
				#fileName:VARCHAR#
			</isNotNull>
			)
		</dynamic>
	</insert>
	<select id="countByExample"
		parameterClass="com.kmzyc.supplier.model.example.SuppliersCertificateExample"
		resultClass="java.lang.Integer">
		select count(*) from SUPPLIERS_CERTIFICATE
		<include refid="SUPPLIERS_CERTIFICATE.Example_Where_Clause" />
	</select>
	<update id="updateByExampleSelective">
		update SUPPLIERS_CERTIFICATE
		<dynamic prepend="set">
			<isNotNull prepend="," property="record.scId">
				SC_ID =
				#record.scId:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="record.supplierId">
				SUPPLIER_ID =
				#record.supplierId:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="record.docType">
				DOC_TYPE =
				#record.docType:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="record.docCode">
				DOC_CODE =
				#record.docCode:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="record.filePath">
				FILE_PATH =
				#record.filePath:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="record.fileName">
				FILE_NAME =
				#record.fileName:VARCHAR#
			</isNotNull>
		</dynamic>
		<isParameterPresent>
			<include refid="SUPPLIERS_CERTIFICATE.Example_Where_Clause" />
		</isParameterPresent>
	</update>
	<update id="updateByExample">
		update SUPPLIERS_CERTIFICATE
		set SC_ID = #record.scId:Long#,
		SUPPLIER_ID = #record.supplierId:Long#,
		DOC_TYPE =
		#record.docType:VARCHAR#,
		DOC_CODE = #record.docCode:VARCHAR#,
		FILE_PATH = #record.filePath:VARCHAR#,
		FILE_NAME =
		#record.fileName:VARCHAR#
		<isParameterPresent>
			<include refid="SUPPLIERS_CERTIFICATE.Example_Where_Clause" />
		</isParameterPresent>
	</update>
	<update id="updateByPrimaryKeySelective" parameterClass="com.kmzyc.supplier.model.SuppliersCertificate">
		update SUPPLIERS_CERTIFICATE
		<dynamic prepend="set">
			<isNotNull prepend="," property="supplierId">
				SUPPLIER_ID =
				#supplierId:Long#
			</isNotNull>
			<isNotNull prepend="," property="docType">
				DOC_TYPE =
				#docType:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="docCode">
				DOC_CODE =
				#docCode:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="filePath">
				FILE_PATH =
				#filePath:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="fileName">
				FILE_NAME =
				#fileName:VARCHAR#
			</isNotNull>
		</dynamic>
		where SC_ID = #scId:Long#
	</update>
	<update id="updateByPrimaryKey" parameterClass="com.kmzyc.supplier.model.SuppliersCertificate">
		update
		SUPPLIERS_CERTIFICATE
		set SUPPLIER_ID = #supplierId:Long#,
		DOC_TYPE =
		#docType:VARCHAR#,
		DOC_CODE = #docCode:VARCHAR#,
		FILE_PATH =
		#filePath:VARCHAR#,
		FILE_NAME = #fileName:VARCHAR#
		where SC_ID =
		#scId:Long#
	</update>
	<select id="countCertificate" parameterClass="com.kmzyc.supplier.model.SuppliersCertificate"
		resultClass="java.lang.Integer">
		select count(*) from SUPPLIERS_CERTIFICATE s where
		s.supplier_id=#supplierId:NUMBER#
	</select>
</sqlMap>