package com.pltfm.app.entities;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class InvoiceItemExample implements Serializable {
  private static final long serialVersionUID = 1L;
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.INVOICE_ITEM
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.INVOICE_ITEM
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.INVOICE_ITEM
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public InvoiceItemExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.INVOICE_ITEM
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  protected InvoiceItemExample(InvoiceItemExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.INVOICE_ITEM
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.INVOICE_ITEM
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.INVOICE_ITEM
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.INVOICE_ITEM
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.INVOICE_ITEM
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.INVOICE_ITEM
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.INVOICE_ITEM
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * KMORDER.INVOICE_ITEM
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    public Criteria andInvoiceItemIdIsNull() {
      addCriterion("INVOICE_ITEM_ID is null");
      return this;
    }

    public Criteria andInvoiceItemIdIsNotNull() {
      addCriterion("INVOICE_ITEM_ID is not null");
      return this;
    }

    public Criteria andInvoiceItemIdEqualTo(Long value) {
      addCriterion("INVOICE_ITEM_ID =", value, "invoiceItemId");
      return this;
    }

    public Criteria andInvoiceItemIdNotEqualTo(Long value) {
      addCriterion("INVOICE_ITEM_ID <>", value, "invoiceItemId");
      return this;
    }

    public Criteria andInvoiceItemIdGreaterThan(Long value) {
      addCriterion("INVOICE_ITEM_ID >", value, "invoiceItemId");
      return this;
    }

    public Criteria andInvoiceItemIdGreaterThanOrEqualTo(Long value) {
      addCriterion("INVOICE_ITEM_ID >=", value, "invoiceItemId");
      return this;
    }

    public Criteria andInvoiceItemIdLessThan(Long value) {
      addCriterion("INVOICE_ITEM_ID <", value, "invoiceItemId");
      return this;
    }

    public Criteria andInvoiceItemIdLessThanOrEqualTo(Long value) {
      addCriterion("INVOICE_ITEM_ID <=", value, "invoiceItemId");
      return this;
    }

    public Criteria andInvoiceItemIdIn(List values) {
      addCriterion("INVOICE_ITEM_ID in", values, "invoiceItemId");
      return this;
    }

    public Criteria andInvoiceItemIdNotIn(List values) {
      addCriterion("INVOICE_ITEM_ID not in", values, "invoiceItemId");
      return this;
    }

    public Criteria andInvoiceItemIdBetween(Long value1, Long value2) {
      addCriterion("INVOICE_ITEM_ID between", value1, value2, "invoiceItemId");
      return this;
    }

    public Criteria andInvoiceItemIdNotBetween(Long value1, Long value2) {
      addCriterion("INVOICE_ITEM_ID not between", value1, value2, "invoiceItemId");
      return this;
    }

    public Criteria andInvoiceIdIsNull() {
      addCriterion("INVOICE_ID is null");
      return this;
    }

    public Criteria andInvoiceIdIsNotNull() {
      addCriterion("INVOICE_ID is not null");
      return this;
    }

    public Criteria andInvoiceIdEqualTo(Long value) {
      addCriterion("INVOICE_ID =", value, "invoiceId");
      return this;
    }

    public Criteria andInvoiceIdNotEqualTo(Long value) {
      addCriterion("INVOICE_ID <>", value, "invoiceId");
      return this;
    }

    public Criteria andInvoiceIdGreaterThan(Long value) {
      addCriterion("INVOICE_ID >", value, "invoiceId");
      return this;
    }

    public Criteria andInvoiceIdGreaterThanOrEqualTo(Long value) {
      addCriterion("INVOICE_ID >=", value, "invoiceId");
      return this;
    }

    public Criteria andInvoiceIdLessThan(Long value) {
      addCriterion("INVOICE_ID <", value, "invoiceId");
      return this;
    }

    public Criteria andInvoiceIdLessThanOrEqualTo(Long value) {
      addCriterion("INVOICE_ID <=", value, "invoiceId");
      return this;
    }

    public Criteria andInvoiceIdIn(List values) {
      addCriterion("INVOICE_ID in", values, "invoiceId");
      return this;
    }

    public Criteria andInvoiceIdNotIn(List values) {
      addCriterion("INVOICE_ID not in", values, "invoiceId");
      return this;
    }

    public Criteria andInvoiceIdBetween(Long value1, Long value2) {
      addCriterion("INVOICE_ID between", value1, value2, "invoiceId");
      return this;
    }

    public Criteria andInvoiceIdNotBetween(Long value1, Long value2) {
      addCriterion("INVOICE_ID not between", value1, value2, "invoiceId");
      return this;
    }

    public Criteria andInvoiceItemCodeIsNull() {
      addCriterion("INVOICE_ITEM_CODE is null");
      return this;
    }

    public Criteria andInvoiceItemCodeIsNotNull() {
      addCriterion("INVOICE_ITEM_CODE is not null");
      return this;
    }

    public Criteria andInvoiceItemCodeEqualTo(String value) {
      addCriterion("INVOICE_ITEM_CODE =", value, "invoiceItemCode");
      return this;
    }

    public Criteria andInvoiceItemCodeNotEqualTo(String value) {
      addCriterion("INVOICE_ITEM_CODE <>", value, "invoiceItemCode");
      return this;
    }

    public Criteria andInvoiceItemCodeGreaterThan(String value) {
      addCriterion("INVOICE_ITEM_CODE >", value, "invoiceItemCode");
      return this;
    }

    public Criteria andInvoiceItemCodeGreaterThanOrEqualTo(String value) {
      addCriterion("INVOICE_ITEM_CODE >=", value, "invoiceItemCode");
      return this;
    }

    public Criteria andInvoiceItemCodeLessThan(String value) {
      addCriterion("INVOICE_ITEM_CODE <", value, "invoiceItemCode");
      return this;
    }

    public Criteria andInvoiceItemCodeLessThanOrEqualTo(String value) {
      addCriterion("INVOICE_ITEM_CODE <=", value, "invoiceItemCode");
      return this;
    }

    public Criteria andInvoiceItemCodeLike(String value) {
      addCriterion("INVOICE_ITEM_CODE like", value, "invoiceItemCode");
      return this;
    }

    public Criteria andInvoiceItemCodeNotLike(String value) {
      addCriterion("INVOICE_ITEM_CODE not like", value, "invoiceItemCode");
      return this;
    }

    public Criteria andInvoiceItemCodeIn(List values) {
      addCriterion("INVOICE_ITEM_CODE in", values, "invoiceItemCode");
      return this;
    }

    public Criteria andInvoiceItemCodeNotIn(List values) {
      addCriterion("INVOICE_ITEM_CODE not in", values, "invoiceItemCode");
      return this;
    }

    public Criteria andInvoiceItemCodeBetween(String value1, String value2) {
      addCriterion("INVOICE_ITEM_CODE between", value1, value2, "invoiceItemCode");
      return this;
    }

    public Criteria andInvoiceItemCodeNotBetween(String value1, String value2) {
      addCriterion("INVOICE_ITEM_CODE not between", value1, value2, "invoiceItemCode");
      return this;
    }

    public Criteria andInvoiceItemNameIsNull() {
      addCriterion("INVOICE_ITEM_NAME is null");
      return this;
    }

    public Criteria andInvoiceItemNameIsNotNull() {
      addCriterion("INVOICE_ITEM_NAME is not null");
      return this;
    }

    public Criteria andInvoiceItemNameEqualTo(String value) {
      addCriterion("INVOICE_ITEM_NAME =", value, "invoiceItemName");
      return this;
    }

    public Criteria andInvoiceItemNameNotEqualTo(String value) {
      addCriterion("INVOICE_ITEM_NAME <>", value, "invoiceItemName");
      return this;
    }

    public Criteria andInvoiceItemNameGreaterThan(String value) {
      addCriterion("INVOICE_ITEM_NAME >", value, "invoiceItemName");
      return this;
    }

    public Criteria andInvoiceItemNameGreaterThanOrEqualTo(String value) {
      addCriterion("INVOICE_ITEM_NAME >=", value, "invoiceItemName");
      return this;
    }

    public Criteria andInvoiceItemNameLessThan(String value) {
      addCriterion("INVOICE_ITEM_NAME <", value, "invoiceItemName");
      return this;
    }

    public Criteria andInvoiceItemNameLessThanOrEqualTo(String value) {
      addCriterion("INVOICE_ITEM_NAME <=", value, "invoiceItemName");
      return this;
    }

    public Criteria andInvoiceItemNameLike(String value) {
      addCriterion("INVOICE_ITEM_NAME like", value, "invoiceItemName");
      return this;
    }

    public Criteria andInvoiceItemNameNotLike(String value) {
      addCriterion("INVOICE_ITEM_NAME not like", value, "invoiceItemName");
      return this;
    }

    public Criteria andInvoiceItemNameIn(List values) {
      addCriterion("INVOICE_ITEM_NAME in", values, "invoiceItemName");
      return this;
    }

    public Criteria andInvoiceItemNameNotIn(List values) {
      addCriterion("INVOICE_ITEM_NAME not in", values, "invoiceItemName");
      return this;
    }

    public Criteria andInvoiceItemNameBetween(String value1, String value2) {
      addCriterion("INVOICE_ITEM_NAME between", value1, value2, "invoiceItemName");
      return this;
    }

    public Criteria andInvoiceItemNameNotBetween(String value1, String value2) {
      addCriterion("INVOICE_ITEM_NAME not between", value1, value2, "invoiceItemName");
      return this;
    }

    public Criteria andUnitPriceIsNull() {
      addCriterion("UNIT_PRICE is null");
      return this;
    }

    public Criteria andUnitPriceIsNotNull() {
      addCriterion("UNIT_PRICE is not null");
      return this;
    }

    public Criteria andUnitPriceEqualTo(BigDecimal value) {
      addCriterion("UNIT_PRICE =", value, "unitPrice");
      return this;
    }

    public Criteria andUnitPriceNotEqualTo(BigDecimal value) {
      addCriterion("UNIT_PRICE <>", value, "unitPrice");
      return this;
    }

    public Criteria andUnitPriceGreaterThan(BigDecimal value) {
      addCriterion("UNIT_PRICE >", value, "unitPrice");
      return this;
    }

    public Criteria andUnitPriceGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("UNIT_PRICE >=", value, "unitPrice");
      return this;
    }

    public Criteria andUnitPriceLessThan(BigDecimal value) {
      addCriterion("UNIT_PRICE <", value, "unitPrice");
      return this;
    }

    public Criteria andUnitPriceLessThanOrEqualTo(BigDecimal value) {
      addCriterion("UNIT_PRICE <=", value, "unitPrice");
      return this;
    }

    public Criteria andUnitPriceIn(List values) {
      addCriterion("UNIT_PRICE in", values, "unitPrice");
      return this;
    }

    public Criteria andUnitPriceNotIn(List values) {
      addCriterion("UNIT_PRICE not in", values, "unitPrice");
      return this;
    }

    public Criteria andUnitPriceBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("UNIT_PRICE between", value1, value2, "unitPrice");
      return this;
    }

    public Criteria andUnitPriceNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("UNIT_PRICE not between", value1, value2, "unitPrice");
      return this;
    }

    public Criteria andInvoiceItemNumberIsNull() {
      addCriterion("INVOICE_ITEM_NUMBER is null");
      return this;
    }

    public Criteria andInvoiceItemNumberIsNotNull() {
      addCriterion("INVOICE_ITEM_NUMBER is not null");
      return this;
    }

    public Criteria andInvoiceItemNumberEqualTo(Long value) {
      addCriterion("INVOICE_ITEM_NUMBER =", value, "invoiceItemNumber");
      return this;
    }

    public Criteria andInvoiceItemNumberNotEqualTo(Long value) {
      addCriterion("INVOICE_ITEM_NUMBER <>", value, "invoiceItemNumber");
      return this;
    }

    public Criteria andInvoiceItemNumberGreaterThan(Long value) {
      addCriterion("INVOICE_ITEM_NUMBER >", value, "invoiceItemNumber");
      return this;
    }

    public Criteria andInvoiceItemNumberGreaterThanOrEqualTo(Long value) {
      addCriterion("INVOICE_ITEM_NUMBER >=", value, "invoiceItemNumber");
      return this;
    }

    public Criteria andInvoiceItemNumberLessThan(Long value) {
      addCriterion("INVOICE_ITEM_NUMBER <", value, "invoiceItemNumber");
      return this;
    }

    public Criteria andInvoiceItemNumberLessThanOrEqualTo(Long value) {
      addCriterion("INVOICE_ITEM_NUMBER <=", value, "invoiceItemNumber");
      return this;
    }

    public Criteria andInvoiceItemNumberIn(List values) {
      addCriterion("INVOICE_ITEM_NUMBER in", values, "invoiceItemNumber");
      return this;
    }

    public Criteria andInvoiceItemNumberNotIn(List values) {
      addCriterion("INVOICE_ITEM_NUMBER not in", values, "invoiceItemNumber");
      return this;
    }

    public Criteria andInvoiceItemNumberBetween(Long value1, Long value2) {
      addCriterion("INVOICE_ITEM_NUMBER between", value1, value2, "invoiceItemNumber");
      return this;
    }

    public Criteria andInvoiceItemNumberNotBetween(Long value1, Long value2) {
      addCriterion("INVOICE_ITEM_NUMBER not between", value1, value2, "invoiceItemNumber");
      return this;
    }

    public Criteria andDiscountAmountIsNull() {
      addCriterion("DISCOUNT_AMOUNT is null");
      return this;
    }

    public Criteria andDiscountAmountIsNotNull() {
      addCriterion("DISCOUNT_AMOUNT is not null");
      return this;
    }

    public Criteria andDiscountAmountEqualTo(BigDecimal value) {
      addCriterion("DISCOUNT_AMOUNT =", value, "discountAmount");
      return this;
    }

    public Criteria andDiscountAmountNotEqualTo(BigDecimal value) {
      addCriterion("DISCOUNT_AMOUNT <>", value, "discountAmount");
      return this;
    }

    public Criteria andDiscountAmountGreaterThan(BigDecimal value) {
      addCriterion("DISCOUNT_AMOUNT >", value, "discountAmount");
      return this;
    }

    public Criteria andDiscountAmountGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("DISCOUNT_AMOUNT >=", value, "discountAmount");
      return this;
    }

    public Criteria andDiscountAmountLessThan(BigDecimal value) {
      addCriterion("DISCOUNT_AMOUNT <", value, "discountAmount");
      return this;
    }

    public Criteria andDiscountAmountLessThanOrEqualTo(BigDecimal value) {
      addCriterion("DISCOUNT_AMOUNT <=", value, "discountAmount");
      return this;
    }

    public Criteria andDiscountAmountIn(List values) {
      addCriterion("DISCOUNT_AMOUNT in", values, "discountAmount");
      return this;
    }

    public Criteria andDiscountAmountNotIn(List values) {
      addCriterion("DISCOUNT_AMOUNT not in", values, "discountAmount");
      return this;
    }

    public Criteria andDiscountAmountBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("DISCOUNT_AMOUNT between", value1, value2, "discountAmount");
      return this;
    }

    public Criteria andDiscountAmountNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("DISCOUNT_AMOUNT not between", value1, value2, "discountAmount");
      return this;
    }

    public Criteria andLineSumIsNull() {
      addCriterion("LINE_SUM is null");
      return this;
    }

    public Criteria andLineSumIsNotNull() {
      addCriterion("LINE_SUM is not null");
      return this;
    }

    public Criteria andLineSumEqualTo(BigDecimal value) {
      addCriterion("LINE_SUM =", value, "lineSum");
      return this;
    }

    public Criteria andLineSumNotEqualTo(BigDecimal value) {
      addCriterion("LINE_SUM <>", value, "lineSum");
      return this;
    }

    public Criteria andLineSumGreaterThan(BigDecimal value) {
      addCriterion("LINE_SUM >", value, "lineSum");
      return this;
    }

    public Criteria andLineSumGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("LINE_SUM >=", value, "lineSum");
      return this;
    }

    public Criteria andLineSumLessThan(BigDecimal value) {
      addCriterion("LINE_SUM <", value, "lineSum");
      return this;
    }

    public Criteria andLineSumLessThanOrEqualTo(BigDecimal value) {
      addCriterion("LINE_SUM <=", value, "lineSum");
      return this;
    }

    public Criteria andLineSumIn(List values) {
      addCriterion("LINE_SUM in", values, "lineSum");
      return this;
    }

    public Criteria andLineSumNotIn(List values) {
      addCriterion("LINE_SUM not in", values, "lineSum");
      return this;
    }

    public Criteria andLineSumBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("LINE_SUM between", value1, value2, "lineSum");
      return this;
    }

    public Criteria andLineSumNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("LINE_SUM not between", value1, value2, "lineSum");
      return this;
    }

    public Criteria andNoteIsNull() {
      addCriterion("NOTE is null");
      return this;
    }

    public Criteria andNoteIsNotNull() {
      addCriterion("NOTE is not null");
      return this;
    }

    public Criteria andNoteEqualTo(String value) {
      addCriterion("NOTE =", value, "note");
      return this;
    }

    public Criteria andNoteNotEqualTo(String value) {
      addCriterion("NOTE <>", value, "note");
      return this;
    }

    public Criteria andNoteGreaterThan(String value) {
      addCriterion("NOTE >", value, "note");
      return this;
    }

    public Criteria andNoteGreaterThanOrEqualTo(String value) {
      addCriterion("NOTE >=", value, "note");
      return this;
    }

    public Criteria andNoteLessThan(String value) {
      addCriterion("NOTE <", value, "note");
      return this;
    }

    public Criteria andNoteLessThanOrEqualTo(String value) {
      addCriterion("NOTE <=", value, "note");
      return this;
    }

    public Criteria andNoteLike(String value) {
      addCriterion("NOTE like", value, "note");
      return this;
    }

    public Criteria andNoteNotLike(String value) {
      addCriterion("NOTE not like", value, "note");
      return this;
    }

    public Criteria andNoteIn(List values) {
      addCriterion("NOTE in", values, "note");
      return this;
    }

    public Criteria andNoteNotIn(List values) {
      addCriterion("NOTE not in", values, "note");
      return this;
    }

    public Criteria andNoteBetween(String value1, String value2) {
      addCriterion("NOTE between", value1, value2, "note");
      return this;
    }

    public Criteria andNoteNotBetween(String value1, String value2) {
      addCriterion("NOTE not between", value1, value2, "note");
      return this;
    }

    public Criteria andDeductionFlagIsNull() {
      addCriterion("DEDUCTION_FLAG is null");
      return this;
    }

    public Criteria andDeductionFlagIsNotNull() {
      addCriterion("DEDUCTION_FLAG is not null");
      return this;
    }

    public Criteria andDeductionFlagEqualTo(Short value) {
      addCriterion("DEDUCTION_FLAG =", value, "deductionFlag");
      return this;
    }

    public Criteria andDeductionFlagNotEqualTo(Short value) {
      addCriterion("DEDUCTION_FLAG <>", value, "deductionFlag");
      return this;
    }

    public Criteria andDeductionFlagGreaterThan(Short value) {
      addCriterion("DEDUCTION_FLAG >", value, "deductionFlag");
      return this;
    }

    public Criteria andDeductionFlagGreaterThanOrEqualTo(Short value) {
      addCriterion("DEDUCTION_FLAG >=", value, "deductionFlag");
      return this;
    }

    public Criteria andDeductionFlagLessThan(Short value) {
      addCriterion("DEDUCTION_FLAG <", value, "deductionFlag");
      return this;
    }

    public Criteria andDeductionFlagLessThanOrEqualTo(Short value) {
      addCriterion("DEDUCTION_FLAG <=", value, "deductionFlag");
      return this;
    }

    public Criteria andDeductionFlagIn(List values) {
      addCriterion("DEDUCTION_FLAG in", values, "deductionFlag");
      return this;
    }

    public Criteria andDeductionFlagNotIn(List values) {
      addCriterion("DEDUCTION_FLAG not in", values, "deductionFlag");
      return this;
    }

    public Criteria andDeductionFlagBetween(Short value1, Short value2) {
      addCriterion("DEDUCTION_FLAG between", value1, value2, "deductionFlag");
      return this;
    }

    public Criteria andDeductionFlagNotBetween(Short value1, Short value2) {
      addCriterion("DEDUCTION_FLAG not between", value1, value2, "deductionFlag");
      return this;
    }
  }
}
