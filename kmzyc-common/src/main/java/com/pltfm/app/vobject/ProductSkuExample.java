package com.pltfm.app.vobject;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProductSkuExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table PRODUCT_SKU
     *
     * @ibatorgenerated Tue Aug 13 11:29:28 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table PRODUCT_SKU
     *
     * @ibatorgenerated Tue Aug 13 11:29:28 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU
     *
     * @ibatorgenerated Tue Aug 13 11:29:28 CST 2013
     */
    public ProductSkuExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU
     *
     * @ibatorgenerated Tue Aug 13 11:29:28 CST 2013
     */
    protected ProductSkuExample(ProductSkuExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU
     *
     * @ibatorgenerated Tue Aug 13 11:29:28 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU
     *
     * @ibatorgenerated Tue Aug 13 11:29:28 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU
     *
     * @ibatorgenerated Tue Aug 13 11:29:28 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU
     *
     * @ibatorgenerated Tue Aug 13 11:29:28 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU
     *
     * @ibatorgenerated Tue Aug 13 11:29:28 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU
     *
     * @ibatorgenerated Tue Aug 13 11:29:28 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU
     *
     * @ibatorgenerated Tue Aug 13 11:29:28 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table PRODUCT_SKU
     *
     * @ibatorgenerated Tue Aug 13 11:29:28 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andProductSkuIdIsNull() {
            addCriterion("PRODUCT_SKU_ID is null");
            return this;
        }

        public Criteria andProductSkuIdIsNotNull() {
            addCriterion("PRODUCT_SKU_ID is not null");
            return this;
        }

        public Criteria andProductSkuIdEqualTo(Integer value) {
            addCriterion("PRODUCT_SKU_ID =", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdNotEqualTo(Integer value) {
            addCriterion("PRODUCT_SKU_ID <>", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdGreaterThan(Integer value) {
            addCriterion("PRODUCT_SKU_ID >", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PRODUCT_SKU_ID >=", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdLessThan(Integer value) {
            addCriterion("PRODUCT_SKU_ID <", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdLessThanOrEqualTo(Integer value) {
            addCriterion("PRODUCT_SKU_ID <=", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdIn(List values) {
            addCriterion("PRODUCT_SKU_ID in", values, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdNotIn(List values) {
            addCriterion("PRODUCT_SKU_ID not in", values, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdBetween(Integer value1, Integer value2) {
            addCriterion("PRODUCT_SKU_ID between", value1, value2, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PRODUCT_SKU_ID not between", value1, value2, "productSkuId");
            return this;
        }

        public Criteria andProductIdIsNull() {
            addCriterion("PRODUCT_ID is null");
            return this;
        }

        public Criteria andProductIdIsNotNull() {
            addCriterion("PRODUCT_ID is not null");
            return this;
        }

        public Criteria andProductIdEqualTo(Long value) {
            addCriterion("PRODUCT_ID =", value, "productId");
            return this;
        }

        public Criteria andProductIdNotEqualTo(Integer value) {
            addCriterion("PRODUCT_ID <>", value, "productId");
            return this;
        }

        public Criteria andProductIdGreaterThan(Integer value) {
            addCriterion("PRODUCT_ID >", value, "productId");
            return this;
        }

        public Criteria andProductIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PRODUCT_ID >=", value, "productId");
            return this;
        }

        public Criteria andProductIdLessThan(Integer value) {
            addCriterion("PRODUCT_ID <", value, "productId");
            return this;
        }

        public Criteria andProductIdLessThanOrEqualTo(Integer value) {
            addCriterion("PRODUCT_ID <=", value, "productId");
            return this;
        }

        public Criteria andProductIdIn(List values) {
            addCriterion("PRODUCT_ID in", values, "productId");
            return this;
        }

        public Criteria andProductIdNotIn(List values) {
            addCriterion("PRODUCT_ID not in", values, "productId");
            return this;
        }

        public Criteria andProductIdBetween(Integer value1, Integer value2) {
            addCriterion("PRODUCT_ID between", value1, value2, "productId");
            return this;
        }

        public Criteria andProductIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PRODUCT_ID not between", value1, value2, "productId");
            return this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("PRICE is null");
            return this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("PRICE is not null");
            return this;
        }

        public Criteria andPriceEqualTo(Double value) {
            addCriterion("PRICE =", value, "price");
            return this;
        }

        public Criteria andPriceNotEqualTo(Double value) {
            addCriterion("PRICE <>", value, "price");
            return this;
        }

        public Criteria andPriceGreaterThan(Double value) {
            addCriterion("PRICE >", value, "price");
            return this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE >=", value, "price");
            return this;
        }

        public Criteria andPriceLessThan(Double value) {
            addCriterion("PRICE <", value, "price");
            return this;
        }

        public Criteria andPriceLessThanOrEqualTo(Double value) {
            addCriterion("PRICE <=", value, "price");
            return this;
        }

        public Criteria andPriceIn(List values) {
            addCriterion("PRICE in", values, "price");
            return this;
        }

        public Criteria andPriceNotIn(List values) {
            addCriterion("PRICE not in", values, "price");
            return this;
        }

        public Criteria andPriceBetween(Double value1, Double value2) {
            addCriterion("PRICE between", value1, value2, "price");
            return this;
        }

        public Criteria andPriceNotBetween(Double value1, Double value2) {
            addCriterion("PRICE not between", value1, value2, "price");
            return this;
        }

        public Criteria andProductSkuCodeIsNull() {
            addCriterion("PRODUCT_SKU_CODE is null");
            return this;
        }

        public Criteria andProductSkuCodeIsNotNull() {
            addCriterion("PRODUCT_SKU_CODE is not null");
            return this;
        }

        public Criteria andProductSkuCodeEqualTo(String value) {
            addCriterion("PRODUCT_SKU_CODE =", value, "productSkuCode");
            return this;
        }

        public Criteria andProductSkuCodeNotEqualTo(String value) {
            addCriterion("PRODUCT_SKU_CODE <>", value, "productSkuCode");
            return this;
        }

        public Criteria andProductSkuCodeGreaterThan(String value) {
            addCriterion("PRODUCT_SKU_CODE >", value, "productSkuCode");
            return this;
        }

        public Criteria andProductSkuCodeGreaterThanOrEqualTo(String value) {
            addCriterion("PRODUCT_SKU_CODE >=", value, "productSkuCode");
            return this;
        }

        public Criteria andProductSkuCodeLessThan(String value) {
            addCriterion("PRODUCT_SKU_CODE <", value, "productSkuCode");
            return this;
        }

        public Criteria andProductSkuCodeLessThanOrEqualTo(String value) {
            addCriterion("PRODUCT_SKU_CODE <=", value, "productSkuCode");
            return this;
        }

        public Criteria andProductSkuCodeLike(String value) {
            addCriterion("PRODUCT_SKU_CODE like", value, "productSkuCode");
            return this;
        }

        public Criteria andProductSkuCodeNotLike(String value) {
            addCriterion("PRODUCT_SKU_CODE not like", value, "productSkuCode");
            return this;
        }

        public Criteria andProductSkuCodeIn(List values) {
            addCriterion("PRODUCT_SKU_CODE in", values, "productSkuCode");
            return this;
        }

        public Criteria andProductSkuCodeNotIn(List values) {
            addCriterion("PRODUCT_SKU_CODE not in", values, "productSkuCode");
            return this;
        }

        public Criteria andProductSkuCodeBetween(String value1, String value2) {
            addCriterion("PRODUCT_SKU_CODE between", value1, value2, "productSkuCode");
            return this;
        }

        public Criteria andProductSkuCodeNotBetween(String value1, String value2) {
            addCriterion("PRODUCT_SKU_CODE not between", value1, value2, "productSkuCode");
            return this;
        }
        
        public Criteria andStatusIsNull() {
            addCriterion("STATUS is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS is not null");
            return this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("STATUS =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("STATUS <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("STATUS >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("STATUS >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("STATUS <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("STATUS <=", value, "status");
            return this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("STATUS like", value, "status");
            return this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("STATUS not like", value, "status");
            return this;
        }

        public Criteria andStatusIn(List values) {
            addCriterion("STATUS in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List values) {
            addCriterion("STATUS not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("STATUS between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("STATUS not between", value1, value2, "status");
            return this;
        }
        
        public Criteria andUnitWeightIsNull() {
			addCriterion("UNIT_WEIGHT is null");
			return this;
		}

		public Criteria andUnitWeightIsNotNull() {
			addCriterion("UNIT_WEIGHT is not null");
			return this;
		}

		public Criteria andUnitWeightEqualTo(Double value) {
			addCriterion("UNIT_WEIGHT =", value, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightNotEqualTo(Double value) {
			addCriterion("UNIT_WEIGHT <>", value, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightGreaterThan(Double value) {
			addCriterion("UNIT_WEIGHT >", value, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightGreaterThanOrEqualTo(Double value) {
			addCriterion("UNIT_WEIGHT >=", value, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightLessThan(Double value) {
			addCriterion("UNIT_WEIGHT <", value, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightLessThanOrEqualTo(Double value) {
			addCriterion("UNIT_WEIGHT <=", value, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightIn(List values) {
			addCriterion("UNIT_WEIGHT in", values, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightNotIn(List values) {
			addCriterion("UNIT_WEIGHT not in", values, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightBetween(Double value1,
				Double value2) {
			addCriterion("UNIT_WEIGHT between", value1, value2, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightNotBetween(Double value1,
				Double value2) {
			addCriterion("UNIT_WEIGHT not between", value1, value2,
					"unitWeight");
			return this;
		}
		
		public Criteria andMarkPriceIsNull() {
            addCriterion("MARK_PRICE is null");
            return this;
        }

        public Criteria andMarkPriceIsNotNull() {
            addCriterion("MARK_PRICE is not null");
            return this;
        }

        public Criteria andMarkPriceEqualTo(Double value) {
            addCriterion("MARK_PRICE =", value, "markPrice");
            return this;
        }

        public Criteria andMarkPriceNotEqualTo(Double value) {
            addCriterion("MARK_PRICE <>", value, "markPrice");
            return this;
        }

        public Criteria andMarkPriceGreaterThan(Double value) {
            addCriterion("MARK_PRICE >", value, "markPrice");
            return this;
        }

        public Criteria andMarkPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("MARK_PRICE >=", value, "markPrice");
            return this;
        }

        public Criteria andMarkPriceLessThan(Double value) {
            addCriterion("MARK_PRICE <", value, "markPrice");
            return this;
        }

        public Criteria andMarkPriceLessThanOrEqualTo(Double value) {
            addCriterion("MARK_PRICE <=", value, "markPrice");
            return this;
        }

        public Criteria andMarkPriceIn(List values) {
            addCriterion("MARK_PRICE in", values, "markPrice");
            return this;
        }

        public Criteria andMarkPriceNotIn(List values) {
            addCriterion("MARK_PRICE not in", values, "markPrice");
            return this;
        }

        public Criteria andMarkPriceBetween(Double value1, Double value2) {
            addCriterion("MARK_PRICE between", value1, value2, "markPrice");
            return this;
        }

        public Criteria andMarkPriceNotBetween(Double value1, Double value2) {
            addCriterion("MARK_PRICE not between", value1, value2, "markPrice");
            return this;
        }
    }
}