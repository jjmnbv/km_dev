package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ActivityPaymentDetailExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACTIVITY_PAYMENT_DETAIL
     *
     * @ibatorgenerated Thu Mar 17 16:05:38 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACTIVITY_PAYMENT_DETAIL
     *
     * @ibatorgenerated Thu Mar 17 16:05:38 CST 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_DETAIL
     *
     * @ibatorgenerated Thu Mar 17 16:05:38 CST 2016
     */
    public ActivityPaymentDetailExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_DETAIL
     *
     * @ibatorgenerated Thu Mar 17 16:05:38 CST 2016
     */
    protected ActivityPaymentDetailExample(ActivityPaymentDetailExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_DETAIL
     *
     * @ibatorgenerated Thu Mar 17 16:05:38 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_DETAIL
     *
     * @ibatorgenerated Thu Mar 17 16:05:38 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_DETAIL
     *
     * @ibatorgenerated Thu Mar 17 16:05:38 CST 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_DETAIL
     *
     * @ibatorgenerated Thu Mar 17 16:05:38 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_DETAIL
     *
     * @ibatorgenerated Thu Mar 17 16:05:38 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_DETAIL
     *
     * @ibatorgenerated Thu Mar 17 16:05:38 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_DETAIL
     *
     * @ibatorgenerated Thu Mar 17 16:05:38 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table ACTIVITY_PAYMENT_DETAIL
     *
     * @ibatorgenerated Thu Mar 17 16:05:38 CST 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andActivityPaymentDetailIdIsNull() {
            addCriterion("ACTIVITY_PAYMENT_DETAIL_ID is null");
            return this;
        }

        public Criteria andActivityPaymentDetailIdIsNotNull() {
            addCriterion("ACTIVITY_PAYMENT_DETAIL_ID is not null");
            return this;
        }

        public Criteria andActivityPaymentDetailIdEqualTo(Long value) {
            addCriterion("ACTIVITY_PAYMENT_DETAIL_ID =", value, "activityPaymentDetailId");
            return this;
        }

        public Criteria andActivityPaymentDetailIdNotEqualTo(Long value) {
            addCriterion("ACTIVITY_PAYMENT_DETAIL_ID <>", value, "activityPaymentDetailId");
            return this;
        }

        public Criteria andActivityPaymentDetailIdGreaterThan(Long value) {
            addCriterion("ACTIVITY_PAYMENT_DETAIL_ID >", value, "activityPaymentDetailId");
            return this;
        }

        public Criteria andActivityPaymentDetailIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ACTIVITY_PAYMENT_DETAIL_ID >=", value, "activityPaymentDetailId");
            return this;
        }

        public Criteria andActivityPaymentDetailIdLessThan(Long value) {
            addCriterion("ACTIVITY_PAYMENT_DETAIL_ID <", value, "activityPaymentDetailId");
            return this;
        }

        public Criteria andActivityPaymentDetailIdLessThanOrEqualTo(Long value) {
            addCriterion("ACTIVITY_PAYMENT_DETAIL_ID <=", value, "activityPaymentDetailId");
            return this;
        }

        public Criteria andActivityPaymentDetailIdIn(List values) {
            addCriterion("ACTIVITY_PAYMENT_DETAIL_ID in", values, "activityPaymentDetailId");
            return this;
        }

        public Criteria andActivityPaymentDetailIdNotIn(List values) {
            addCriterion("ACTIVITY_PAYMENT_DETAIL_ID not in", values, "activityPaymentDetailId");
            return this;
        }

        public Criteria andActivityPaymentDetailIdBetween(Long value1, Long value2) {
            addCriterion("ACTIVITY_PAYMENT_DETAIL_ID between", value1, value2, "activityPaymentDetailId");
            return this;
        }

        public Criteria andActivityPaymentDetailIdNotBetween(Long value1, Long value2) {
            addCriterion("ACTIVITY_PAYMENT_DETAIL_ID not between", value1, value2, "activityPaymentDetailId");
            return this;
        }

        public Criteria andActivityPaymentIdIsNull() {
            addCriterion("ACTIVITY_PAYMENT_ID is null");
            return this;
        }

        public Criteria andActivityPaymentIdIsNotNull() {
            addCriterion("ACTIVITY_PAYMENT_ID is not null");
            return this;
        }

        public Criteria andActivityPaymentIdEqualTo(Long value) {
            addCriterion("ACTIVITY_PAYMENT_ID =", value, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdNotEqualTo(Long value) {
            addCriterion("ACTIVITY_PAYMENT_ID <>", value, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdGreaterThan(Long value) {
            addCriterion("ACTIVITY_PAYMENT_ID >", value, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ACTIVITY_PAYMENT_ID >=", value, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdLessThan(Long value) {
            addCriterion("ACTIVITY_PAYMENT_ID <", value, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdLessThanOrEqualTo(Long value) {
            addCriterion("ACTIVITY_PAYMENT_ID <=", value, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdIn(List values) {
            addCriterion("ACTIVITY_PAYMENT_ID in", values, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdNotIn(List values) {
            addCriterion("ACTIVITY_PAYMENT_ID not in", values, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdBetween(Long value1, Long value2) {
            addCriterion("ACTIVITY_PAYMENT_ID between", value1, value2, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdNotBetween(Long value1, Long value2) {
            addCriterion("ACTIVITY_PAYMENT_ID not between", value1, value2, "activityPaymentId");
            return this;
        }

        public Criteria andProductSkuIdIsNull() {
            addCriterion("PRODUCT_SKU_ID is null");
            return this;
        }

        public Criteria andProductSkuIdIsNotNull() {
            addCriterion("PRODUCT_SKU_ID is not null");
            return this;
        }

        public Criteria andProductSkuIdEqualTo(Long value) {
            addCriterion("PRODUCT_SKU_ID =", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdNotEqualTo(Long value) {
            addCriterion("PRODUCT_SKU_ID <>", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdGreaterThan(Long value) {
            addCriterion("PRODUCT_SKU_ID >", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdGreaterThanOrEqualTo(Long value) {
            addCriterion("PRODUCT_SKU_ID >=", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdLessThan(Long value) {
            addCriterion("PRODUCT_SKU_ID <", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdLessThanOrEqualTo(Long value) {
            addCriterion("PRODUCT_SKU_ID <=", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdIn(List values) {
            addCriterion("PRODUCT_SKU_ID in", values, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdNotIn(List values) {
            addCriterion("PRODUCT_SKU_ID not in", values, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdBetween(Long value1, Long value2) {
            addCriterion("PRODUCT_SKU_ID between", value1, value2, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdNotBetween(Long value1, Long value2) {
            addCriterion("PRODUCT_SKU_ID not between", value1, value2, "productSkuId");
            return this;
        }

        public Criteria andSkuTotalPriceIsNull() {
            addCriterion("SKU_TOTAL_PRICE is null");
            return this;
        }

        public Criteria andSkuTotalPriceIsNotNull() {
            addCriterion("SKU_TOTAL_PRICE is not null");
            return this;
        }

        public Criteria andSkuTotalPriceEqualTo(BigDecimal value) {
            addCriterion("SKU_TOTAL_PRICE =", value, "skuTotalPrice");
            return this;
        }

        public Criteria andSkuTotalPriceNotEqualTo(BigDecimal value) {
            addCriterion("SKU_TOTAL_PRICE <>", value, "skuTotalPrice");
            return this;
        }

        public Criteria andSkuTotalPriceGreaterThan(BigDecimal value) {
            addCriterion("SKU_TOTAL_PRICE >", value, "skuTotalPrice");
            return this;
        }

        public Criteria andSkuTotalPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SKU_TOTAL_PRICE >=", value, "skuTotalPrice");
            return this;
        }

        public Criteria andSkuTotalPriceLessThan(BigDecimal value) {
            addCriterion("SKU_TOTAL_PRICE <", value, "skuTotalPrice");
            return this;
        }

        public Criteria andSkuTotalPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SKU_TOTAL_PRICE <=", value, "skuTotalPrice");
            return this;
        }

        public Criteria andSkuTotalPriceIn(List values) {
            addCriterion("SKU_TOTAL_PRICE in", values, "skuTotalPrice");
            return this;
        }

        public Criteria andSkuTotalPriceNotIn(List values) {
            addCriterion("SKU_TOTAL_PRICE not in", values, "skuTotalPrice");
            return this;
        }

        public Criteria andSkuTotalPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SKU_TOTAL_PRICE between", value1, value2, "skuTotalPrice");
            return this;
        }

        public Criteria andSkuTotalPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SKU_TOTAL_PRICE not between", value1, value2, "skuTotalPrice");
            return this;
        }
    }
}