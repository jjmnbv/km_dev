package com.kmzyc.promotion.app.vobject;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class WarehouseInfoExample {
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds
	 * to the database table WAREHOUSE_INFO
	 * 
	 * @ibatorgenerated Tue Jul 16 09:58:29 CST 2013
	 */
	protected String orderByClause;

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds
	 * to the database table WAREHOUSE_INFO
	 * 
	 * @ibatorgenerated Tue Jul 16 09:58:29 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table WAREHOUSE_INFO
	 * 
	 * @ibatorgenerated Tue Jul 16 09:58:29 CST 2013
	 */
	public WarehouseInfoExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table WAREHOUSE_INFO
	 * 
	 * @ibatorgenerated Tue Jul 16 09:58:29 CST 2013
	 */
	protected WarehouseInfoExample(WarehouseInfoExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table WAREHOUSE_INFO
	 * 
	 * @ibatorgenerated Tue Jul 16 09:58:29 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table WAREHOUSE_INFO
	 * 
	 * @ibatorgenerated Tue Jul 16 09:58:29 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table WAREHOUSE_INFO
	 * 
	 * @ibatorgenerated Tue Jul 16 09:58:29 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table WAREHOUSE_INFO
	 * 
	 * @ibatorgenerated Tue Jul 16 09:58:29 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table WAREHOUSE_INFO
	 * 
	 * @ibatorgenerated Tue Jul 16 09:58:29 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table WAREHOUSE_INFO
	 * 
	 * @ibatorgenerated Tue Jul 16 09:58:29 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table WAREHOUSE_INFO
	 * 
	 * @ibatorgenerated Tue Jul 16 09:58:29 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds
	 * to the database table WAREHOUSE_INFO
	 * 
	 * @ibatorgenerated Tue Jul 16 09:58:29 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;

		protected List criteriaWithSingleValue;

		protected List criteriaWithListValue;

		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andWarehouseIdIsNull() {
			addCriterion("WAREHOUSE_ID is null");
			return this;
		}

		public Criteria andWarehouseIdIsNotNull() {
			addCriterion("WAREHOUSE_ID is not null");
			return this;
		}

		public Criteria andWarehouseIdEqualTo(Integer value) {
			addCriterion("WAREHOUSE_ID =", value, "warehouseId");
			return this;
		}

		public Criteria andWarehouseIdNotEqualTo(Integer value) {
			addCriterion("WAREHOUSE_ID <>", value, "warehouseId");
			return this;
		}

		public Criteria andWarehouseIdGreaterThan(Integer value) {
			addCriterion("WAREHOUSE_ID >", value, "warehouseId");
			return this;
		}

		public Criteria andWarehouseIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("WAREHOUSE_ID >=", value, "warehouseId");
			return this;
		}

		public Criteria andWarehouseIdLessThan(Integer value) {
			addCriterion("WAREHOUSE_ID <", value, "warehouseId");
			return this;
		}

		public Criteria andWarehouseIdLessThanOrEqualTo(Integer value) {
			addCriterion("WAREHOUSE_ID <=", value, "warehouseId");
			return this;
		}

		public Criteria andWarehouseIdIn(List values) {
			addCriterion("WAREHOUSE_ID in", values, "warehouseId");
			return this;
		}

		public Criteria andWarehouseIdNotIn(List values) {
			addCriterion("WAREHOUSE_ID not in", values, "warehouseId");
			return this;
		}

		public Criteria andWarehouseIdBetween(Integer value1, Integer value2) {
			addCriterion("WAREHOUSE_ID between", value1, value2, "warehouseId");
			return this;
		}

		public Criteria andWarehouseIdNotBetween(Integer value1, Integer value2) {
			addCriterion("WAREHOUSE_ID not between", value1, value2, "warehouseId");
			return this;
		}

		public Criteria andWarehouseNoIsNull() {
			addCriterion("WAREHOUSE_NO is null");
			return this;
		}

		public Criteria andWarehouseNoIsNotNull() {
			addCriterion("WAREHOUSE_NO is not null");
			return this;
		}

		public Criteria andWarehouseNoEqualTo(String value) {
			addCriterion("WAREHOUSE_NO =", value, "warehouseNo");
			return this;
		}

		public Criteria andWarehouseNoNotEqualTo(String value) {
			addCriterion("WAREHOUSE_NO <>", value, "warehouseNo");
			return this;
		}

		public Criteria andWarehouseNoGreaterThan(String value) {
			addCriterion("WAREHOUSE_NO >", value, "warehouseNo");
			return this;
		}

		public Criteria andWarehouseNoGreaterThanOrEqualTo(String value) {
			addCriterion("WAREHOUSE_NO >=", value, "warehouseNo");
			return this;
		}

		public Criteria andWarehouseNoLessThan(String value) {
			addCriterion("WAREHOUSE_NO <", value, "warehouseNo");
			return this;
		}

		public Criteria andWarehouseNoLessThanOrEqualTo(String value) {
			addCriterion("WAREHOUSE_NO <=", value, "warehouseNo");
			return this;
		}

		public Criteria andWarehouseNoLike(String value) {
			addCriterion("WAREHOUSE_NO like", value, "warehouseNo");
			return this;
		}

		public Criteria andWarehouseNoNotLike(String value) {
			addCriterion("WAREHOUSE_NO not like", value, "warehouseNo");
			return this;
		}

		public Criteria andWarehouseNoIn(List values) {
			addCriterion("WAREHOUSE_NO in", values, "warehouseNo");
			return this;
		}

		public Criteria andWarehouseNoNotIn(List values) {
			addCriterion("WAREHOUSE_NO not in", values, "warehouseNo");
			return this;
		}

		public Criteria andWarehouseNoBetween(String value1, String value2) {
			addCriterion("WAREHOUSE_NO between", value1, value2, "warehouseNo");
			return this;
		}

		public Criteria andWarehouseNoNotBetween(String value1, String value2) {
			addCriterion("WAREHOUSE_NO not between", value1, value2, "warehouseNo");
			return this;
		}

		public Criteria andWarehouseNameIsNull() {
			addCriterion("WAREHOUSE_NAME is null");
			return this;
		}

		public Criteria andWarehouseNameIsNotNull() {
			addCriterion("WAREHOUSE_NAME is not null");
			return this;
		}

		public Criteria andWarehouseNameEqualTo(String value) {
			addCriterion("WAREHOUSE_NAME =", value, "warehouseName");
			return this;
		}

		public Criteria andWarehouseNameNotEqualTo(String value) {
			addCriterion("WAREHOUSE_NAME <>", value, "warehouseName");
			return this;
		}

		public Criteria andWarehouseNameGreaterThan(String value) {
			addCriterion("WAREHOUSE_NAME >", value, "warehouseName");
			return this;
		}

		public Criteria andWarehouseNameGreaterThanOrEqualTo(String value) {
			addCriterion("WAREHOUSE_NAME >=", value, "warehouseName");
			return this;
		}

		public Criteria andWarehouseNameLessThan(String value) {
			addCriterion("WAREHOUSE_NAME <", value, "warehouseName");
			return this;
		}

		public Criteria andWarehouseNameLessThanOrEqualTo(String value) {
			addCriterion("WAREHOUSE_NAME <=", value, "warehouseName");
			return this;
		}

		public Criteria andWarehouseNameLike(String value) {
			addCriterion("WAREHOUSE_NAME like", value, "warehouseName");
			return this;
		}

		public Criteria andWarehouseNameNotLike(String value) {
			addCriterion("WAREHOUSE_NAME not like", value, "warehouseName");
			return this;
		}

		public Criteria andWarehouseNameIn(List values) {
			addCriterion("WAREHOUSE_NAME in", values, "warehouseName");
			return this;
		}

		public Criteria andWarehouseNameNotIn(List values) {
			addCriterion("WAREHOUSE_NAME not in", values, "warehouseName");
			return this;
		}

		public Criteria andWarehouseNameBetween(String value1, String value2) {
			addCriterion("WAREHOUSE_NAME between", value1, value2, "warehouseName");
			return this;
		}

		public Criteria andWarehouseNameNotBetween(String value1, String value2) {
			addCriterion("WAREHOUSE_NAME not between", value1, value2, "warehouseName");
			return this;
		}

		public Criteria andNMerchantIdIsNull() {
			addCriterion("MERCHANT_CODE is null");
			return this;
		}

		public Criteria andMerchantIdIsNotNull() {
			addCriterion("MERCHANT_CODE is not null");
			return this;
		}

		public Criteria andMerchantIdEqualTo(String value) {
			addCriterion("MERCHANT_CODE =", value, "merchantCode");
			return this;
		}

		public Criteria andMerchantIdNotEqualTo(Integer value) {
			addCriterion("MERCHANT_CODE <>", value, "merchantCode");
			return this;
		}

		public Criteria andMerchantIdGreaterThan(Integer value) {
			addCriterion("MERCHANT_CODE >", value, "merchantCode");
			return this;
		}

		public Criteria andMerchantIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("MERCHANT_CODE >=", value, "merchantCode");
			return this;
		}

		public Criteria andMerchantIdLessThan(Integer value) {
			addCriterion("MERCHANT_CODE <", value, "merchantCode");
			return this;
		}

		public Criteria andMerchantIdLessThanOrEqualTo(Integer value) {
			addCriterion("MERCHANT_CODE <=", value, "merchantCode");
			return this;
		}

		public Criteria andMerchantIdIn(List values) {
			addCriterion("MERCHANT_CODE in", values, "merchantCode");
			return this;
		}

		public Criteria andMerchantIdNotIn(List values) {
			addCriterion("MERCHANT_CODE not in", values, "merchantCode");
			return this;
		}

		public Criteria andMerchantIdBetween(Integer value1, Integer value2) {
			addCriterion("MERCHANT_CODE between", value1, value2, "merchantCode");
			return this;
		}

		public Criteria andMerchantIdNotBetween(Integer value1, Integer value2) {
			addCriterion("MERCHANT_CODE not between", value1, value2, "merchantCode");
			return this;
		}

		public Criteria andAreaIdIsNull() {
			addCriterion("AREA_ID is null");
			return this;
		}

		public Criteria andAreaIdIsNotNull() {
			addCriterion("AREA_ID is not null");
			return this;
		}

		public Criteria andAreaIdEqualTo(Integer value) {
			addCriterion("AREA_ID =", value, "areaId");
			return this;
		}

		public Criteria andAreaIdNotEqualTo(Integer value) {
			addCriterion("AREA_ID <>", value, "areaId");
			return this;
		}

		public Criteria andAreaIdGreaterThan(Integer value) {
			addCriterion("AREA_ID >", value, "areaId");
			return this;
		}

		public Criteria andAreaIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("AREA_ID >=", value, "areaId");
			return this;
		}

		public Criteria andAreaIdLessThan(Integer value) {
			addCriterion("AREA_ID <", value, "areaId");
			return this;
		}

		public Criteria andAreaIdLessThanOrEqualTo(Integer value) {
			addCriterion("AREA_ID <=", value, "areaId");
			return this;
		}

		public Criteria andAreaIdIn(List values) {
			addCriterion("AREA_ID in", values, "areaId");
			return this;
		}

		public Criteria andAreaIdNotIn(List values) {
			addCriterion("AREA_ID not in", values, "areaId");
			return this;
		}

		public Criteria andAreaIdBetween(Integer value1, Integer value2) {
			addCriterion("AREA_ID between", value1, value2, "areaId");
			return this;
		}

		public Criteria andAreaIdNotBetween(Integer value1, Integer value2) {
			addCriterion("AREA_ID not between", value1, value2, "areaId");
			return this;
		}

		public Criteria andTypeIsNull() {
			addCriterion("TYPE is null");
			return this;
		}

		public Criteria andTypeIsNotNull() {
			addCriterion("TYPE is not null");
			return this;
		}

		public Criteria andTypeEqualTo(Short value) {
			addCriterion("TYPE =", value, "type");
			return this;
		}

		public Criteria andTypeNotEqualTo(Short value) {
			addCriterion("TYPE <>", value, "type");
			return this;
		}

		public Criteria andTypeGreaterThan(Short value) {
			addCriterion("TYPE >", value, "type");
			return this;
		}

		public Criteria andTypeGreaterThanOrEqualTo(Short value) {
			addCriterion("TYPE >=", value, "type");
			return this;
		}

		public Criteria andTypeLessThan(Short value) {
			addCriterion("TYPE <", value, "type");
			return this;
		}

		public Criteria andTypeLessThanOrEqualTo(Short value) {
			addCriterion("TYPE <=", value, "type");
			return this;
		}

		public Criteria andTypeIn(List values) {
			addCriterion("TYPE in", values, "type");
			return this;
		}

		public Criteria andTypeNotIn(List values) {
			addCriterion("TYPE not in", values, "type");
			return this;
		}

		public Criteria andTypeBetween(Short value1, Short value2) {
			addCriterion("TYPE between", value1, value2, "type");
			return this;
		}

		public Criteria andTypeNotBetween(Short value1, Short value2) {
			addCriterion("TYPE not between", value1, value2, "type");
			return this;
		}

		public Criteria andDepictIsNull() {
			addCriterion("DEPICT is null");
			return this;
		}

		public Criteria andDepictIsNotNull() {
			addCriterion("DEPICT is not null");
			return this;
		}

		public Criteria andDepictEqualTo(String value) {
			addCriterion("DEPICT =", value, "depict");
			return this;
		}

		public Criteria andDepictNotEqualTo(String value) {
			addCriterion("DEPICT <>", value, "depict");
			return this;
		}

		public Criteria andDepictGreaterThan(String value) {
			addCriterion("DEPICT >", value, "depict");
			return this;
		}

		public Criteria andDepictGreaterThanOrEqualTo(String value) {
			addCriterion("DEPICT >=", value, "depict");
			return this;
		}

		public Criteria andDepictLessThan(String value) {
			addCriterion("DEPICT <", value, "depict");
			return this;
		}

		public Criteria andDepictLessThanOrEqualTo(String value) {
			addCriterion("DEPICT <=", value, "depict");
			return this;
		}

		public Criteria andDepictLike(String value) {
			addCriterion("DEPICT like", value, "depict");
			return this;
		}

		public Criteria andDepictNotLike(String value) {
			addCriterion("DEPICT not like", value, "depict");
			return this;
		}

		public Criteria andDepictIn(List values) {
			addCriterion("DEPICT in", values, "depict");
			return this;
		}

		public Criteria andDepictNotIn(List values) {
			addCriterion("DEPICT not in", values, "depict");
			return this;
		}

		public Criteria andDepictBetween(String value1, String value2) {
			addCriterion("DEPICT between", value1, value2, "depict");
			return this;
		}

		public Criteria andDepictNotBetween(String value1, String value2) {
			addCriterion("DEPICT not between", value1, value2, "depict");
			return this;
		}

		public Criteria andOverlayAreaIsNull() {
			addCriterion("OVERLAY_AREA is null");
			return this;
		}

		public Criteria andOverlayAreaIsNotNull() {
			addCriterion("OVERLAY_AREA is not null");
			return this;
		}

		public Criteria andOverlayAreaEqualTo(String value) {
			addCriterion("OVERLAY_AREA =", value, "overlayArea");
			return this;
		}

		public Criteria andOverlayAreaNotEqualTo(String value) {
			addCriterion("OVERLAY_AREA <>", value, "overlayArea");
			return this;
		}

		public Criteria andOverlayAreaGreaterThan(String value) {
			addCriterion("OVERLAY_AREA >", value, "overlayArea");
			return this;
		}

		public Criteria andOverlayAreaGreaterThanOrEqualTo(String value) {
			addCriterion("OVERLAY_AREA >=", value, "overlayArea");
			return this;
		}

		public Criteria andOverlayAreaLessThan(String value) {
			addCriterion("OVERLAY_AREA <", value, "overlayArea");
			return this;
		}

		public Criteria andOverlayAreaLessThanOrEqualTo(String value) {
			addCriterion("OVERLAY_AREA <=", value, "overlayArea");
			return this;
		}

		public Criteria andOverlayAreaLike(String value) {
			addCriterion("OVERLAY_AREA like", value, "overlayArea");
			return this;
		}

		public Criteria andOverlayAreaNotLike(String value) {
			addCriterion("OVERLAY_AREA not like", value, "overlayArea");
			return this;
		}

		public Criteria andOverlayAreaIn(List values) {
			addCriterion("OVERLAY_AREA in", values, "overlayArea");
			return this;
		}

		public Criteria andOverlayAreaNotIn(List values) {
			addCriterion("OVERLAY_AREA not in", values, "overlayArea");
			return this;
		}

		public Criteria andOverlayAreaBetween(String value1, String value2) {
			addCriterion("OVERLAY_AREA between", value1, value2, "overlayArea");
			return this;
		}

		public Criteria andOverlayAreaNotBetween(String value1, String value2) {
			addCriterion("OVERLAY_AREA not between", value1, value2, "overlayArea");
			return this;
		}

		public Criteria andOverlayAreaIdLike(String value) {
			addCriterion("OVERLAY_AREA_ID like", value, "overlayAreaId");
			return this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("STATUS is null");
			return this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("STATUS is not null");
			return this;
		}

		public Criteria andStatusEqualTo(String value) {
			addCriterion("STATUS =", value, "status");
			return this;
		}

		public Criteria andStatusNotEqualTo(String value) {
			addCriterion("STATUS <>", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThan(String value) {
			addCriterion("STATUS >", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(String value) {
			addCriterion("STATUS >=", value, "status");
			return this;
		}

		public Criteria andStatusLessThan(String value) {
			addCriterion("STATUS <", value, "status");
			return this;
		}

		public Criteria andStatusLessThanOrEqualTo(String value) {
			addCriterion("STATUS <=", value, "status");
			return this;
		}

		public Criteria andStatusLike(String value) {
			addCriterion("STATUS like", value, "status");
			return this;
		}

		public Criteria andStatusNotLike(String value) {
			addCriterion("STATUS not like", value, "status");
			return this;
		}

		public Criteria andStatusIn(List values) {
			addCriterion("STATUS in", values, "status");
			return this;
		}

		public Criteria andStatusNotIn(List values) {
			addCriterion("STATUS not in", values, "status");
			return this;
		}

		public Criteria andStatusBetween(String value1, String value2) {
			addCriterion("STATUS between", value1, value2, "status");
			return this;
		}

		public Criteria andStatusNotBetween(String value1, String value2) {
			addCriterion("STATUS not between", value1, value2, "status");
			return this;
		}

		public Criteria andCreateUserIsNull() {
			addCriterion("CREATE_USER is null");
			return this;
		}

		public Criteria andCreateUserIsNotNull() {
			addCriterion("CREATE_USER is not null");
			return this;
		}

		public Criteria andCreateUserEqualTo(Integer value) {
			addCriterion("CREATE_USER =", value, "createUser");
			return this;
		}

		public Criteria andCreateUserNotEqualTo(Integer value) {
			addCriterion("CREATE_USER <>", value, "createUser");
			return this;
		}

		public Criteria andCreateUserGreaterThan(Integer value) {
			addCriterion("CREATE_USER >", value, "createUser");
			return this;
		}

		public Criteria andCreateUserGreaterThanOrEqualTo(Integer value) {
			addCriterion("CREATE_USER >=", value, "createUser");
			return this;
		}

		public Criteria andCreateUserLessThan(Integer value) {
			addCriterion("CREATE_USER <", value, "createUser");
			return this;
		}

		public Criteria andCreateUserLessThanOrEqualTo(Integer value) {
			addCriterion("CREATE_USER <=", value, "createUser");
			return this;
		}

		public Criteria andCreateUserIn(List values) {
			addCriterion("CREATE_USER in", values, "createUser");
			return this;
		}

		public Criteria andCreateUserNotIn(List values) {
			addCriterion("CREATE_USER not in", values, "createUser");
			return this;
		}

		public Criteria andCreateUserBetween(Integer value1, Integer value2) {
			addCriterion("CREATE_USER between", value1, value2, "createUser");
			return this;
		}

		public Criteria andCreateUserNotBetween(Integer value1, Integer value2) {
			addCriterion("CREATE_USER not between", value1, value2, "createUser");
			return this;
		}

		public Criteria andDCreateDateIsNull() {
			addCriterion("CREATE_DATE is null");
			return this;
		}

		public Criteria andDCreateDateIsNotNull() {
			addCriterion("CREATE_DATE is not null");
			return this;
		}

		public Criteria andDCreateDateEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
			return this;
		}

		public Criteria andDCreateDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
			return this;
		}

		public Criteria andDCreateDateGreaterThan(Date value) {
			addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
			return this;
		}

		public Criteria andDCreateDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
			return this;
		}

		public Criteria andDCreateDateLessThan(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
			return this;
		}

		public Criteria andDCreateDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
			return this;
		}

		public Criteria andDCreateDateIn(List values) {
			addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
			return this;
		}

		public Criteria andDCreateDateNotIn(List values) {
			addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
			return this;
		}

		public Criteria andDCreateDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
			return this;
		}

		public Criteria andDCreateDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
			return this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("REMARK is null");
			return this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("REMARK is not null");
			return this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("REMARK =", value, "remark");
			return this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("REMARK <>", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("REMARK >", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("REMARK >=", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("REMARK <", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("REMARK <=", value, "remark");
			return this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("REMARK like", value, "remark");
			return this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("REMARK not like", value, "remark");
			return this;
		}

		public Criteria andRemarkIn(List values) {
			addCriterion("REMARK in", values, "remark");
			return this;
		}

		public Criteria andRemarkNotIn(List values) {
			addCriterion("REMARK not in", values, "remark");
			return this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("REMARK between", value1, value2, "remark");
			return this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("REMARK not between", value1, value2, "remark");
			return this;
		}
	}
}