package com.kmzyc.promotion.app.vobject;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class PromotionProductExample {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * PROMOTION_PRODUCT
   * 
   * @ibatorgenerated Mon Aug 26 10:36:32 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * PROMOTION_PRODUCT
   * 
   * @ibatorgenerated Mon Aug 26 10:36:32 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROMOTION_PRODUCT
   * 
   * @ibatorgenerated Mon Aug 26 10:36:32 CST 2013
   */
  public PromotionProductExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROMOTION_PRODUCT
   * 
   * @ibatorgenerated Mon Aug 26 10:36:32 CST 2013
   */
  protected PromotionProductExample(PromotionProductExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROMOTION_PRODUCT
   * 
   * @ibatorgenerated Mon Aug 26 10:36:32 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROMOTION_PRODUCT
   * 
   * @ibatorgenerated Mon Aug 26 10:36:32 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROMOTION_PRODUCT
   * 
   * @ibatorgenerated Mon Aug 26 10:36:32 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROMOTION_PRODUCT
   * 
   * @ibatorgenerated Mon Aug 26 10:36:32 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROMOTION_PRODUCT
   * 
   * @ibatorgenerated Mon Aug 26 10:36:32 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROMOTION_PRODUCT
   * 
   * @ibatorgenerated Mon Aug 26 10:36:32 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROMOTION_PRODUCT
   * 
   * @ibatorgenerated Mon Aug 26 10:36:32 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * PROMOTION_PRODUCT
   * 
   * @ibatorgenerated Mon Aug 26 10:36:32 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()),
          new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andCategoryEqualTo(String value) {
      addCriterion("category =", value, "category");
      return this;
    }
    public Criteria andCategoryNotEqualTo(String value) {
      addCriterion("category <>", value, "category");
      return this;
    }
    public Criteria andCategoryIsNull() {
      addCriterion("category is null");
      return this;
    }
    public Criteria andPromotionProductIdIsNull() {
      addCriterion("PROMOTION_PRODUCT_ID is null");
      return this;
    }

    public Criteria andPromotionProductIdIsNotNull() {
      addCriterion("PROMOTION_PRODUCT_ID is not null");
      return this;
    }

    public Criteria andPromotionProductIdEqualTo(Long value) {
      addCriterion("PROMOTION_PRODUCT_ID =", value, "promotionProductId");
      return this;
    }

    public Criteria andPromotionProductIdNotEqualTo(Long value) {
      addCriterion("PROMOTION_PRODUCT_ID <>", value, "promotionProductId");
      return this;
    }

    public Criteria andPromotionProductIdGreaterThan(Long value) {
      addCriterion("PROMOTION_PRODUCT_ID >", value, "promotionProductId");
      return this;
    }

    public Criteria andPromotionProductIdGreaterThanOrEqualTo(Long value) {
      addCriterion("PROMOTION_PRODUCT_ID >=", value, "promotionProductId");
      return this;
    }

    public Criteria andPromotionProductIdLessThan(Long value) {
      addCriterion("PROMOTION_PRODUCT_ID <", value, "promotionProductId");
      return this;
    }

    public Criteria andPromotionProductIdLessThanOrEqualTo(Long value) {
      addCriterion("PROMOTION_PRODUCT_ID <=", value, "promotionProductId");
      return this;
    }

    public Criteria andPromotionProductIdIn(List values) {
      addCriterion("PROMOTION_PRODUCT_ID in", values, "promotionProductId");
      return this;
    }

    public Criteria andPromotionProductIdNotIn(List values) {
      addCriterion("PROMOTION_PRODUCT_ID not in", values, "promotionProductId");
      return this;
    }

    public Criteria andPromotionProductIdBetween(Long value1, Long value2) {
      addCriterion("PROMOTION_PRODUCT_ID between", value1, value2, "promotionProductId");
      return this;
    }

    public Criteria andPromotionProductIdNotBetween(Long value1, Long value2) {
      addCriterion("PROMOTION_PRODUCT_ID not between", value1, value2, "promotionProductId");
      return this;
    }

    public Criteria andPromotionIdIsNull() {
      addCriterion("PROMOTION_ID is null");
      return this;
    }

    public Criteria andPromotionIdIsNotNull() {
      addCriterion("PROMOTION_ID is not null");
      return this;
    }

    public Criteria andPromotionIdEqualTo(Long value) {
      addCriterion("PROMOTION_ID =", value, "promotionId");
      return this;
    }

    public Criteria andStatusEqualTo(Integer value) {
      addCriterion("status =", value, "status");
      return this;
    }

    public Criteria andPromotionIdNotEqualTo(Long value) {
      addCriterion("PROMOTION_ID <>", value, "promotionId");
      return this;
    }

    public Criteria andPromotionIdGreaterThan(Long value) {
      addCriterion("PROMOTION_ID >", value, "promotionId");
      return this;
    }

    public Criteria andPromotionIdGreaterThanOrEqualTo(Long value) {
      addCriterion("PROMOTION_ID >=", value, "promotionId");
      return this;
    }

    public Criteria andPromotionIdLessThan(Long value) {
      addCriterion("PROMOTION_ID <", value, "promotionId");
      return this;
    }

    public Criteria andPromotionIdLessThanOrEqualTo(Long value) {
      addCriterion("PROMOTION_ID <=", value, "promotionId");
      return this;
    }

    public Criteria andPromotionIdIn(List values) {
      addCriterion("PROMOTION_ID in", values, "promotionId");
      return this;
    }

    public Criteria andPromotionIdNotIn(List values) {
      addCriterion("PROMOTION_ID not in", values, "promotionId");
      return this;
    }

    public Criteria andPromotionIdBetween(Long value1, Long value2) {
      addCriterion("PROMOTION_ID between", value1, value2, "promotionId");
      return this;
    }

    public Criteria andPromotionIdNotBetween(Long value1, Long value2) {
      addCriterion("PROMOTION_ID not between", value1, value2, "promotionId");
      return this;
    }

    public Criteria andProductSkuIdIsNull() {
      addCriterion("PRODUCT_SKU_ID is null");
      return this;
    }

    public Criteria andProductSkuIdIsNotNull() {
      addCriterion("PRODUCT_SKU_ID is not null");
      return this;
    }

    public Criteria andProductSkuIdEqualTo(Long value) {
      addCriterion("PRODUCT_SKU_ID =", value, "productSkuId");
      return this;
    }

    public Criteria andProductSkuIdNotEqualTo(Long value) {
      addCriterion("PRODUCT_SKU_ID <>", value, "productSkuId");
      return this;
    }

    public Criteria andProductSkuIdGreaterThan(Long value) {
      addCriterion("PRODUCT_SKU_ID >", value, "productSkuId");
      return this;
    }

    public Criteria andProductSkuIdGreaterThanOrEqualTo(Long value) {
      addCriterion("PRODUCT_SKU_ID >=", value, "productSkuId");
      return this;
    }

    public Criteria andProductSkuIdLessThan(Long value) {
      addCriterion("PRODUCT_SKU_ID <", value, "productSkuId");
      return this;
    }

    public Criteria andProductSkuIdLessThanOrEqualTo(Long value) {
      addCriterion("PRODUCT_SKU_ID <=", value, "productSkuId");
      return this;
    }

    public Criteria andProductSkuIdIn(List values) {
      addCriterion("PRODUCT_SKU_ID in", values, "productSkuId");
      return this;
    }

    public Criteria andProductSkuIdNotIn(List values) {
      addCriterion("PRODUCT_SKU_ID not in", values, "productSkuId");
      return this;
    }

    public Criteria andProductSkuIdBetween(Long value1, Long value2) {
      addCriterion("PRODUCT_SKU_ID between", value1, value2, "productSkuId");
      return this;
    }

    public Criteria andProductSkuIdNotBetween(Long value1, Long value2) {
      addCriterion("PRODUCT_SKU_ID not between", value1, value2, "productSkuId");
      return this;
    }

    public Criteria andPriceIsNull() {
      addCriterion("PRICE is null");
      return this;
    }

    public Criteria andPriceIsNotNull() {
      addCriterion("PRICE is not null");
      return this;
    }

    public Criteria andPriceEqualTo(Double value) {
      addCriterion("PRICE =", value, "price");
      return this;
    }

    public Criteria andPriceNotEqualTo(Double value) {
      addCriterion("PRICE <>", value, "price");
      return this;
    }

    public Criteria andPriceGreaterThan(Double value) {
      addCriterion("PRICE >", value, "price");
      return this;
    }

    public Criteria andPriceGreaterThanOrEqualTo(Double value) {
      addCriterion("PRICE >=", value, "price");
      return this;
    }

    public Criteria andPriceLessThan(Double value) {
      addCriterion("PRICE <", value, "price");
      return this;
    }

    public Criteria andPriceLessThanOrEqualTo(Double value) {
      addCriterion("PRICE <=", value, "price");
      return this;
    }

    public Criteria andPriceIn(List values) {
      addCriterion("PRICE in", values, "price");
      return this;
    }

    public Criteria andPriceNotIn(List values) {
      addCriterion("PRICE not in", values, "price");
      return this;
    }

    public Criteria andPriceBetween(Double value1, Double value2) {
      addCriterion("PRICE between", value1, value2, "price");
      return this;
    }

    public Criteria andPriceNotBetween(Double value1, Double value2) {
      addCriterion("PRICE not between", value1, value2, "price");
      return this;
    }

    public Criteria andCreateTimeIsNull() {
      addCriterion("CREATE_TIME is null");
      return this;
    }

    public Criteria andCreateTimeIsNotNull() {
      addCriterion("CREATE_TIME is not null");
      return this;
    }

    public Criteria andCreateTimeEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_TIME =", value, "createTime");
      return this;
    }

    public Criteria andCreateTimeNotEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_TIME <>", value, "createTime");
      return this;
    }

    public Criteria andCreateTimeGreaterThan(Date value) {
      addCriterionForJDBCDate("CREATE_TIME >", value, "createTime");
      return this;
    }

    public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_TIME >=", value, "createTime");
      return this;
    }

    public Criteria andCreateTimeLessThan(Date value) {
      addCriterionForJDBCDate("CREATE_TIME <", value, "createTime");
      return this;
    }

    public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_TIME <=", value, "createTime");
      return this;
    }

    public Criteria andCreateTimeIn(List values) {
      addCriterionForJDBCDate("CREATE_TIME in", values, "createTime");
      return this;
    }

    public Criteria andCreateTimeNotIn(List values) {
      addCriterionForJDBCDate("CREATE_TIME not in", values, "createTime");
      return this;
    }

    public Criteria andCreateTimeBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("CREATE_TIME between", value1, value2, "createTime");
      return this;
    }

    public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("CREATE_TIME not between", value1, value2, "createTime");
      return this;
    }
  }
}
