package com.kmzyc.promotion.app.vobject;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class CouponExample implements Serializable {

	private static final long serialVersionUID = 1L;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds
	 * to the database table COUPON
	 * 
	 * @ibatorgenerated Thu Aug 22 09:31:11 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds
	 * to the database table COUPON
	 * 
	 * @ibatorgenerated Thu Aug 22 09:31:11 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table COUPON
	 * 
	 * @ibatorgenerated Thu Aug 22 09:31:11 CST 2013
	 */
	public CouponExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table COUPON
	 * 
	 * @ibatorgenerated Thu Aug 22 09:31:11 CST 2013
	 */
	protected CouponExample(CouponExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table COUPON
	 * 
	 * @ibatorgenerated Thu Aug 22 09:31:11 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table COUPON
	 * 
	 * @ibatorgenerated Thu Aug 22 09:31:11 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table COUPON
	 * 
	 * @ibatorgenerated Thu Aug 22 09:31:11 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table COUPON
	 * 
	 * @ibatorgenerated Thu Aug 22 09:31:11 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table COUPON
	 * 
	 * @ibatorgenerated Thu Aug 22 09:31:11 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table COUPON
	 * 
	 * @ibatorgenerated Thu Aug 22 09:31:11 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table COUPON
	 * 
	 * @ibatorgenerated Thu Aug 22 09:31:11 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds
	 * to the database table COUPON
	 * 
	 * @ibatorgenerated Thu Aug 22 09:31:11 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andCouponIdIsNull() {
			addCriterion("COUPON_ID is null");
			return this;
		}

		public Criteria andCouponIdIsNotNull() {
			addCriterion("COUPON_ID is not null");
			return this;
		}

		public Criteria andCouponIdEqualTo(Long value) {
			addCriterion("COUPON_ID =", value, "couponId");
			return this;
		}

		public Criteria andCouponIdNotEqualTo(BigDecimal value) {
			addCriterion("COUPON_ID <>", value, "couponId");
			return this;
		}

		public Criteria andCouponIdGreaterThan(BigDecimal value) {
			addCriterion("COUPON_ID >", value, "couponId");
			return this;
		}

		public Criteria andCouponIdGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("COUPON_ID >=", value, "couponId");
			return this;
		}

		public Criteria andCouponIdLessThan(BigDecimal value) {
			addCriterion("COUPON_ID <", value, "couponId");
			return this;
		}

		public Criteria andCouponIdLessThanOrEqualTo(BigDecimal value) {
			addCriterion("COUPON_ID <=", value, "couponId");
			return this;
		}

		public Criteria andCouponIdIn(List values) {
			addCriterion("COUPON_ID in", values, "couponId");
			return this;
		}

		public Criteria andCouponIdNotIn(List values) {
			addCriterion("COUPON_ID not in", values, "couponId");
			return this;
		}

		public Criteria andCouponIdBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("COUPON_ID between", value1, value2, "couponId");
			return this;
		}

		public Criteria andCouponIdNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("COUPON_ID not between", value1, value2, "couponId");
			return this;
		}

		public Criteria andCouponGivetypeIdIsNull() {
			addCriterion("COUPON_GIVETYPE_ID is null");
			return this;
		}

		public Criteria andCouponGivetypeIdIsNotNull() {
			addCriterion("COUPON_GIVETYPE_ID is not null");
			return this;
		}

		public Criteria andCouponGivetypeIdEqualTo(BigDecimal value) {
			addCriterion("COUPON_GIVETYPE_ID =", value, "couponGivetypeId");
			return this;
		}

		public Criteria andCouponGivetypeIdNotEqualTo(BigDecimal value) {
			addCriterion("COUPON_GIVETYPE_ID <>", value, "couponGivetypeId");
			return this;
		}

		public Criteria andCouponGivetypeIdGreaterThan(BigDecimal value) {
			addCriterion("COUPON_GIVETYPE_ID >", value, "couponGivetypeId");
			return this;
		}

		public Criteria andCouponGivetypeIdGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("COUPON_GIVETYPE_ID >=", value, "couponGivetypeId");
			return this;
		}

		public Criteria andCouponGivetypeIdLessThan(BigDecimal value) {
			addCriterion("COUPON_GIVETYPE_ID <", value, "couponGivetypeId");
			return this;
		}

		public Criteria andCouponGivetypeIdLessThanOrEqualTo(BigDecimal value) {
			addCriterion("COUPON_GIVETYPE_ID <=", value, "couponGivetypeId");
			return this;
		}

		public Criteria andCouponGivetypeIdIn(List values) {
			addCriterion("COUPON_GIVETYPE_ID in", values, "couponGivetypeId");
			return this;
		}

		public Criteria andCouponGivetypeIdNotIn(List values) {
			addCriterion("COUPON_GIVETYPE_ID not in", values, "couponGivetypeId");
			return this;
		}

		public Criteria andCouponGivetypeIdBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("COUPON_GIVETYPE_ID between", value1, value2, "couponGivetypeId");
			return this;
		}

		public Criteria andCouponGivetypeIdNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("COUPON_GIVETYPE_ID not between", value1, value2, "couponGivetypeId");
			return this;
		}

		public Criteria andCouponNameIsNull() {
			addCriterion("COUPON_NAME is null");
			return this;
		}

		public Criteria andCouponNameIsNotNull() {
			addCriterion("COUPON_NAME is not null");
			return this;
		}

		public Criteria andCouponNameEqualTo(String value) {
			addCriterion("COUPON_NAME =", value, "couponName");
			return this;
		}

		public Criteria andCouponNameNotEqualTo(String value) {
			addCriterion("COUPON_NAME <>", value, "couponName");
			return this;
		}

		public Criteria andCouponNameGreaterThan(String value) {
			addCriterion("COUPON_NAME >", value, "couponName");
			return this;
		}

		public Criteria andCouponNameGreaterThanOrEqualTo(String value) {
			addCriterion("COUPON_NAME >=", value, "couponName");
			return this;
		}

		public Criteria andCouponNameLessThan(String value) {
			addCriterion("COUPON_NAME <", value, "couponName");
			return this;
		}

		public Criteria andCouponNameLessThanOrEqualTo(String value) {
			addCriterion("COUPON_NAME <=", value, "couponName");
			return this;
		}

		public Criteria andCouponNameLike(String value) {
			addCriterion("COUPON_NAME like", value, "couponName");
			return this;
		}

		public Criteria andCouponNameNotLike(String value) {
			addCriterion("COUPON_NAME not like", value, "couponName");
			return this;
		}

		public Criteria andCouponNameIn(List values) {
			addCriterion("COUPON_NAME in", values, "couponName");
			return this;
		}

		public Criteria andCouponNameNotIn(List values) {
			addCriterion("COUPON_NAME not in", values, "couponName");
			return this;
		}

		public Criteria andCouponNameBetween(String value1, String value2) {
			addCriterion("COUPON_NAME between", value1, value2, "couponName");
			return this;
		}

		public Criteria andCouponNameNotBetween(String value1, String value2) {
			addCriterion("COUPON_NAME not between", value1, value2, "couponName");
			return this;
		}

		public Criteria andCouponDescribeIsNull() {
			addCriterion("COUPON_DESCRIBE is null");
			return this;
		}

		public Criteria andCouponDescribeIsNotNull() {
			addCriterion("COUPON_DESCRIBE is not null");
			return this;
		}

		public Criteria andCouponDescribeEqualTo(String value) {
			addCriterion("COUPON_DESCRIBE =", value, "couponDescribe");
			return this;
		}

		public Criteria andCouponDescribeNotEqualTo(String value) {
			addCriterion("COUPON_DESCRIBE <>", value, "couponDescribe");
			return this;
		}

		public Criteria andCouponDescribeGreaterThan(String value) {
			addCriterion("COUPON_DESCRIBE >", value, "couponDescribe");
			return this;
		}

		public Criteria andCouponDescribeGreaterThanOrEqualTo(String value) {
			addCriterion("COUPON_DESCRIBE >=", value, "couponDescribe");
			return this;
		}

		public Criteria andCouponDescribeLessThan(String value) {
			addCriterion("COUPON_DESCRIBE <", value, "couponDescribe");
			return this;
		}

		public Criteria andCouponDescribeLessThanOrEqualTo(String value) {
			addCriterion("COUPON_DESCRIBE <=", value, "couponDescribe");
			return this;
		}

		public Criteria andCouponDescribeLike(String value) {
			addCriterion("COUPON_DESCRIBE like", value, "couponDescribe");
			return this;
		}

		public Criteria andCouponDescribeNotLike(String value) {
			addCriterion("COUPON_DESCRIBE not like", value, "couponDescribe");
			return this;
		}

		public Criteria andCouponDescribeIn(List values) {
			addCriterion("COUPON_DESCRIBE in", values, "couponDescribe");
			return this;
		}

		public Criteria andCouponDescribeNotIn(List values) {
			addCriterion("COUPON_DESCRIBE not in", values, "couponDescribe");
			return this;
		}

		public Criteria andCouponDescribeBetween(String value1, String value2) {
			addCriterion("COUPON_DESCRIBE between", value1, value2, "couponDescribe");
			return this;
		}

		public Criteria andCouponDescribeNotBetween(String value1, String value2) {
			addCriterion("COUPON_DESCRIBE not between", value1, value2, "couponDescribe");
			return this;
		}

		public Criteria andCouponMoneyIsNull() {
			addCriterion("COUPON_MONEY is null");
			return this;
		}

		public Criteria andCouponMoneyIsNotNull() {
			addCriterion("COUPON_MONEY is not null");
			return this;
		}

		public Criteria andCouponMoneyEqualTo(BigDecimal value) {
			addCriterion("COUPON_MONEY =", value, "couponMoney");
			return this;
		}

		public Criteria andCouponMoneyNotEqualTo(BigDecimal value) {
			addCriterion("COUPON_MONEY <>", value, "couponMoney");
			return this;
		}

		public Criteria andCouponMoneyGreaterThan(BigDecimal value) {
			addCriterion("COUPON_MONEY >", value, "couponMoney");
			return this;
		}

		public Criteria andCouponMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("COUPON_MONEY >=", value, "couponMoney");
			return this;
		}

		public Criteria andCouponMoneyLessThan(BigDecimal value) {
			addCriterion("COUPON_MONEY <", value, "couponMoney");
			return this;
		}

		public Criteria andCouponMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("COUPON_MONEY <=", value, "couponMoney");
			return this;
		}

		public Criteria andCouponMoneyIn(List values) {
			addCriterion("COUPON_MONEY in", values, "couponMoney");
			return this;
		}

		public Criteria andCouponMoneyNotIn(List values) {
			addCriterion("COUPON_MONEY not in", values, "couponMoney");
			return this;
		}

		public Criteria andCouponMoneyBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("COUPON_MONEY between", value1, value2, "couponMoney");
			return this;
		}

		public Criteria andCouponMoneyNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("COUPON_MONEY not between", value1, value2, "couponMoney");
			return this;
		}

		public Criteria andStarttimeIsNull() {
			addCriterion("STARTTIME is null");
			return this;
		}

		public Criteria andStarttimeIsNotNull() {
			addCriterion("STARTTIME is not null");
			return this;
		}

		public Criteria andStarttimeEqualTo(Date value) {
			addCriterionForJDBCDate("STARTTIME =", value, "starttime");
			return this;
		}

		public Criteria andStarttimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("STARTTIME <>", value, "starttime");
			return this;
		}

		public Criteria andStarttimeGreaterThan(Date value) {
			addCriterionForJDBCDate("STARTTIME >", value, "starttime");
			return this;
		}

		public Criteria andStarttimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("STARTTIME >=", value, "starttime");
			return this;
		}

		public Criteria andStarttimeLessThan(Date value) {
			addCriterionForJDBCDate("STARTTIME <", value, "starttime");
			return this;
		}

		public Criteria andStarttimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("STARTTIME <=", value, "starttime");
			return this;
		}

		public Criteria andStarttimeIn(List values) {
			addCriterionForJDBCDate("STARTTIME in", values, "starttime");
			return this;
		}

		public Criteria andStarttimeNotIn(List values) {
			addCriterionForJDBCDate("STARTTIME not in", values, "starttime");
			return this;
		}

		public Criteria andStarttimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("STARTTIME between", value1, value2, "starttime");
			return this;
		}

		public Criteria andStarttimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("STARTTIME not between", value1, value2, "starttime");
			return this;
		}

		public Criteria andEndtimeIsNull() {
			addCriterion("ENDTIME is null");
			return this;
		}

		public Criteria andEndtimeIsNotNull() {
			addCriterion("ENDTIME is not null");
			return this;
		}

		public Criteria andEndtimeEqualTo(Date value) {
			addCriterionForJDBCDate("ENDTIME =", value, "endtime");
			return this;
		}

		public Criteria andEndtimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("ENDTIME <>", value, "endtime");
			return this;
		}

		public Criteria andEndtimeGreaterThan(Date value) {
			addCriterionForJDBCDate("ENDTIME >", value, "endtime");
			return this;
		}

		public Criteria andEndtimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ENDTIME >=", value, "endtime");
			return this;
		}

		public Criteria andEndtimeLessThan(Date value) {
			addCriterionForJDBCDate("ENDTIME <", value, "endtime");
			return this;
		}

		public Criteria andEndtimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ENDTIME <=", value, "endtime");
			return this;
		}

		public Criteria andEndtimeIn(List values) {
			addCriterionForJDBCDate("ENDTIME in", values, "endtime");
			return this;
		}

		public Criteria andEndtimeNotIn(List values) {
			addCriterionForJDBCDate("ENDTIME not in", values, "endtime");
			return this;
		}

		public Criteria andEndtimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ENDTIME between", value1, value2, "endtime");
			return this;
		}

		public Criteria andEndtimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ENDTIME not between", value1, value2, "endtime");
			return this;
		}

		public Criteria andCreatetimeIsNull() {
			addCriterion("CREATETIME is null");
			return this;
		}

		public Criteria andCreatetimeIsNotNull() {
			addCriterion("CREATETIME is not null");
			return this;
		}

		public Criteria andCreatetimeEqualTo(Date value) {
			addCriterionForJDBCDate("CREATETIME =", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("CREATETIME <>", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeGreaterThan(Date value) {
			addCriterionForJDBCDate("CREATETIME >", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATETIME >=", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeLessThan(Date value) {
			addCriterionForJDBCDate("CREATETIME <", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATETIME <=", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeIn(List values) {
			addCriterionForJDBCDate("CREATETIME in", values, "createtime");
			return this;
		}

		public Criteria andCreatetimeNotIn(List values) {
			addCriterionForJDBCDate("CREATETIME not in", values, "createtime");
			return this;
		}

		public Criteria andCreatetimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATETIME between", value1, value2, "createtime");
			return this;
		}

		public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATETIME not between", value1, value2, "createtime");
			return this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("STATUS is null");
			return this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("STATUS is not null");
			return this;
		}

		public Criteria andStatusEqualTo(BigDecimal value) {
			addCriterion("STATUS =", value, "status");
			return this;
		}

		public Criteria andStatusNotEqualTo(BigDecimal value) {
			addCriterion("STATUS <>", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThan(BigDecimal value) {
			addCriterion("STATUS >", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("STATUS >=", value, "status");
			return this;
		}

		public Criteria andStatusLessThan(BigDecimal value) {
			addCriterion("STATUS <", value, "status");
			return this;
		}

		public Criteria andStatusLessThanOrEqualTo(BigDecimal value) {
			addCriterion("STATUS <=", value, "status");
			return this;
		}

		public Criteria andStatusIn(List values) {
			addCriterion("STATUS in", values, "status");
			return this;
		}

		public Criteria andStatusNotIn(List values) {
			addCriterion("STATUS not in", values, "status");
			return this;
		}

		public Criteria andStatusBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("STATUS between", value1, value2, "status");
			return this;
		}

		public Criteria andStatusNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("STATUS not between", value1, value2, "status");
			return this;
		}

		public Criteria andCustomLeveidIsNull() {
			addCriterion("CUSTOM_LEVEID is null");
			return this;
		}

		public Criteria andCustomLeveidIsNotNull() {
			addCriterion("CUSTOM_LEVEID is not null");
			return this;
		}

		public Criteria andCustomLeveidEqualTo(String value) {
			addCriterion("CUSTOM_LEVEID =", value, "customLeveid");
			return this;
		}

		public Criteria andCustomLeveidNotEqualTo(String value) {
			addCriterion("CUSTOM_LEVEID <>", value, "customLeveid");
			return this;
		}

		public Criteria andCustomLeveidGreaterThan(String value) {
			addCriterion("CUSTOM_LEVEID >", value, "customLeveid");
			return this;
		}

		public Criteria andCustomLeveidGreaterThanOrEqualTo(String value) {
			addCriterion("CUSTOM_LEVEID >=", value, "customLeveid");
			return this;
		}

		public Criteria andCustomLeveidLessThan(String value) {
			addCriterion("CUSTOM_LEVEID <", value, "customLeveid");
			return this;
		}

		public Criteria andCustomLeveidLessThanOrEqualTo(String value) {
			addCriterion("CUSTOM_LEVEID <=", value, "customLeveid");
			return this;
		}

		public Criteria andCustomLeveidLike(String value) {
			addCriterion("CUSTOM_LEVEID like", value, "customLeveid");
			return this;
		}

		public Criteria andCustomLeveidNotLike(String value) {
			addCriterion("CUSTOM_LEVEID not like", value, "customLeveid");
			return this;
		}

		public Criteria andCustomLeveidIn(List values) {
			addCriterion("CUSTOM_LEVEID in", values, "customLeveid");
			return this;
		}

		public Criteria andCustomLeveidNotIn(List values) {
			addCriterion("CUSTOM_LEVEID not in", values, "customLeveid");
			return this;
		}

		public Criteria andCustomLeveidBetween(String value1, String value2) {
			addCriterion("CUSTOM_LEVEID between", value1, value2, "customLeveid");
			return this;
		}

		public Criteria andCustomLeveidNotBetween(String value1, String value2) {
			addCriterion("CUSTOM_LEVEID not between", value1, value2, "customLeveid");
			return this;
		}

		public Criteria andCustomRegStartIsNull() {
			addCriterion("CUSTOM_REG_START is null");
			return this;
		}

		public Criteria andCustomRegStartIsNotNull() {
			addCriterion("CUSTOM_REG_START is not null");
			return this;
		}

		public Criteria andCustomRegStartEqualTo(Date value) {
			addCriterionForJDBCDate("CUSTOM_REG_START =", value, "customRegStart");
			return this;
		}

		public Criteria andCustomRegStartNotEqualTo(Date value) {
			addCriterionForJDBCDate("CUSTOM_REG_START <>", value, "customRegStart");
			return this;
		}

		public Criteria andCustomRegStartGreaterThan(Date value) {
			addCriterionForJDBCDate("CUSTOM_REG_START >", value, "customRegStart");
			return this;
		}

		public Criteria andCustomRegStartGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CUSTOM_REG_START >=", value, "customRegStart");
			return this;
		}

		public Criteria andCustomRegStartLessThan(Date value) {
			addCriterionForJDBCDate("CUSTOM_REG_START <", value, "customRegStart");
			return this;
		}

		public Criteria andCustomRegStartLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CUSTOM_REG_START <=", value, "customRegStart");
			return this;
		}

		public Criteria andCustomRegStartIn(List values) {
			addCriterionForJDBCDate("CUSTOM_REG_START in", values, "customRegStart");
			return this;
		}

		public Criteria andCustomRegStartNotIn(List values) {
			addCriterionForJDBCDate("CUSTOM_REG_START not in", values, "customRegStart");
			return this;
		}

		public Criteria andCustomRegStartBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CUSTOM_REG_START between", value1, value2, "customRegStart");
			return this;
		}

		public Criteria andCustomRegStartNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CUSTOM_REG_START not between", value1, value2, "customRegStart");
			return this;
		}

		public Criteria andCustomRegEndIsNull() {
			addCriterion("CUSTOM_REG_END is null");
			return this;
		}

		public Criteria andCustomRegEndIsNotNull() {
			addCriterion("CUSTOM_REG_END is not null");
			return this;
		}

		public Criteria andCustomRegEndEqualTo(Date value) {
			addCriterionForJDBCDate("CUSTOM_REG_END =", value, "customRegEnd");
			return this;
		}

		public Criteria andCustomRegEndNotEqualTo(Date value) {
			addCriterionForJDBCDate("CUSTOM_REG_END <>", value, "customRegEnd");
			return this;
		}

		public Criteria andCustomRegEndGreaterThan(Date value) {
			addCriterionForJDBCDate("CUSTOM_REG_END >", value, "customRegEnd");
			return this;
		}

		public Criteria andCustomRegEndGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CUSTOM_REG_END >=", value, "customRegEnd");
			return this;
		}

		public Criteria andCustomRegEndLessThan(Date value) {
			addCriterionForJDBCDate("CUSTOM_REG_END <", value, "customRegEnd");
			return this;
		}

		public Criteria andCustomRegEndLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CUSTOM_REG_END <=", value, "customRegEnd");
			return this;
		}

		public Criteria andCustomRegEndIn(List values) {
			addCriterionForJDBCDate("CUSTOM_REG_END in", values, "customRegEnd");
			return this;
		}

		public Criteria andCustomRegEndNotIn(List values) {
			addCriterionForJDBCDate("CUSTOM_REG_END not in", values, "customRegEnd");
			return this;
		}

		public Criteria andCustomRegEndBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CUSTOM_REG_END between", value1, value2, "customRegEnd");
			return this;
		}

		public Criteria andCustomRegEndNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CUSTOM_REG_END not between", value1, value2, "customRegEnd");
			return this;
		}

		public Criteria andPayLeastMoneyIsNull() {
			addCriterion("PAY_LEAST_MONEY is null");
			return this;
		}

		public Criteria andPayLeastMoneyIsNotNull() {
			addCriterion("PAY_LEAST_MONEY is not null");
			return this;
		}

		public Criteria andPayLeastMoneyEqualTo(BigDecimal value) {
			addCriterion("PAY_LEAST_MONEY =", value, "payLeastMoney");
			return this;
		}

		public Criteria andPayLeastMoneyNotEqualTo(BigDecimal value) {
			addCriterion("PAY_LEAST_MONEY <>", value, "payLeastMoney");
			return this;
		}

		public Criteria andPayLeastMoneyGreaterThan(BigDecimal value) {
			addCriterion("PAY_LEAST_MONEY >", value, "payLeastMoney");
			return this;
		}

		public Criteria andPayLeastMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("PAY_LEAST_MONEY >=", value, "payLeastMoney");
			return this;
		}

		public Criteria andPayLeastMoneyLessThan(BigDecimal value) {
			addCriterion("PAY_LEAST_MONEY <", value, "payLeastMoney");
			return this;
		}

		public Criteria andPayLeastMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("PAY_LEAST_MONEY <=", value, "payLeastMoney");
			return this;
		}

		public Criteria andPayLeastMoneyIn(List values) {
			addCriterion("PAY_LEAST_MONEY in", values, "payLeastMoney");
			return this;
		}

		public Criteria andPayLeastMoneyNotIn(List values) {
			addCriterion("PAY_LEAST_MONEY not in", values, "payLeastMoney");
			return this;
		}

		public Criteria andPayLeastMoneyBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("PAY_LEAST_MONEY between", value1, value2, "payLeastMoney");
			return this;
		}

		public Criteria andPayLeastMoneyNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("PAY_LEAST_MONEY not between", value1, value2, "payLeastMoney");
			return this;
		}

		public Criteria andCustomIdIsNull() {
			addCriterion("CUSTOM_ID is null");
			return this;
		}

		public Criteria andCustomIdIsNotNull() {
			addCriterion("CUSTOM_ID is not null");
			return this;
		}

		public Criteria andCustomIdEqualTo(String value) {
			addCriterion("CUSTOM_ID =", value, "customId");
			return this;
		}

		public Criteria andCustomIdNotEqualTo(String value) {
			addCriterion("CUSTOM_ID <>", value, "customId");
			return this;
		}

		public Criteria andCustomIdGreaterThan(String value) {
			addCriterion("CUSTOM_ID >", value, "customId");
			return this;
		}

		public Criteria andCustomIdGreaterThanOrEqualTo(String value) {
			addCriterion("CUSTOM_ID >=", value, "customId");
			return this;
		}

		public Criteria andCustomIdLessThan(String value) {
			addCriterion("CUSTOM_ID <", value, "customId");
			return this;
		}

		public Criteria andCustomIdLessThanOrEqualTo(String value) {
			addCriterion("CUSTOM_ID <=", value, "customId");
			return this;
		}

		public Criteria andCustomIdLike(String value) {
			addCriterion("CUSTOM_ID like", value, "customId");
			return this;
		}

		public Criteria andCustomIdNotLike(String value) {
			addCriterion("CUSTOM_ID not like", value, "customId");
			return this;
		}

		public Criteria andCustomIdIn(List values) {
			addCriterion("CUSTOM_ID in", values, "customId");
			return this;
		}

		public Criteria andCustomIdNotIn(List values) {
			addCriterion("CUSTOM_ID not in", values, "customId");
			return this;
		}

		public Criteria andCustomIdBetween(String value1, String value2) {
			addCriterion("CUSTOM_ID between", value1, value2, "customId");
			return this;
		}

		public Criteria andCustomIdNotBetween(String value1, String value2) {
			addCriterion("CUSTOM_ID not between", value1, value2, "customId");
			return this;
		}

		public Criteria andIsGrantIsNull() {
			addCriterion("IS_GRANT is null");
			return this;
		}

		public Criteria andIsGrantIsNotNull() {
			addCriterion("IS_GRANT is not null");
			return this;
		}

		public Criteria andIsGrantEqualTo(String value) {
			addCriterion("IS_GRANT =", value, "isGrant");
			return this;
		}

		public Criteria andIsGrantNotEqualTo(String value) {
			addCriterion("IS_GRANT <>", value, "isGrant");
			return this;
		}

		public Criteria andIsGrantGreaterThan(String value) {
			addCriterion("IS_GRANT >", value, "isGrant");
			return this;
		}

		public Criteria andIsGrantGreaterThanOrEqualTo(String value) {
			addCriterion("IS_GRANT >=", value, "isGrant");
			return this;
		}

		public Criteria andIsGrantLessThan(String value) {
			addCriterion("IS_GRANT <", value, "isGrant");
			return this;
		}

		public Criteria andIsGrantLessThanOrEqualTo(String value) {
			addCriterion("IS_GRANT <=", value, "isGrant");
			return this;
		}

		public Criteria andIsGrantLike(String value) {
			addCriterion("IS_GRANT like", value, "isGrant");
			return this;
		}

		public Criteria andIsGrantNotLike(String value) {
			addCriterion("IS_GRANT not like", value, "isGrant");
			return this;
		}

		public Criteria andIsGrantIn(List values) {
			addCriterion("IS_GRANT in", values, "isGrant");
			return this;
		}

		public Criteria andIsGrantNotIn(List values) {
			addCriterion("IS_GRANT not in", values, "isGrant");
			return this;
		}

		public Criteria andIsGrantBetween(String value1, String value2) {
			addCriterion("IS_GRANT between", value1, value2, "isGrant");
			return this;
		}

		public Criteria andIsGrantNotBetween(String value1, String value2) {
			addCriterion("IS_GRANT not between", value1, value2, "isGrant");
			return this;
		}

		public Criteria andOrderLeastMonyeIsNull() {
			addCriterion("ORDER_LEAST_MONYE is null");
			return this;
		}

		public Criteria andOrderLeastMonyeIsNotNull() {
			addCriterion("ORDER_LEAST_MONYE is not null");
			return this;
		}

		public Criteria andOrderLeastMonyeEqualTo(BigDecimal value) {
			addCriterion("ORDER_LEAST_MONYE =", value, "orderLeastMonye");
			return this;
		}

		public Criteria andOrderLeastMonyeNotEqualTo(BigDecimal value) {
			addCriterion("ORDER_LEAST_MONYE <>", value, "orderLeastMonye");
			return this;
		}

		public Criteria andOrderLeastMonyeGreaterThan(BigDecimal value) {
			addCriterion("ORDER_LEAST_MONYE >", value, "orderLeastMonye");
			return this;
		}

		public Criteria andOrderLeastMonyeGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ORDER_LEAST_MONYE >=", value, "orderLeastMonye");
			return this;
		}

		public Criteria andOrderLeastMonyeLessThan(BigDecimal value) {
			addCriterion("ORDER_LEAST_MONYE <", value, "orderLeastMonye");
			return this;
		}

		public Criteria andOrderLeastMonyeLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ORDER_LEAST_MONYE <=", value, "orderLeastMonye");
			return this;
		}

		public Criteria andOrderLeastMonyeIn(List values) {
			addCriterion("ORDER_LEAST_MONYE in", values, "orderLeastMonye");
			return this;
		}

		public Criteria andOrderLeastMonyeNotIn(List values) {
			addCriterion("ORDER_LEAST_MONYE not in", values, "orderLeastMonye");
			return this;
		}

		public Criteria andOrderLeastMonyeBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ORDER_LEAST_MONYE between", value1, value2, "orderLeastMonye");
			return this;
		}

		public Criteria andOrderLeastMonyeNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ORDER_LEAST_MONYE not between", value1, value2, "orderLeastMonye");
			return this;
		}
	}
}