package com.kmzyc.promotion.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class ProductRelationExample {
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds
	 * to the database table PRODUCT_RELATION
	 * 
	 * @ibatorgenerated Mon Nov 11 12:20:08 CST 2013
	 */
	protected String orderByClause;

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds
	 * to the database table PRODUCT_RELATION
	 * 
	 * @ibatorgenerated Mon Nov 11 12:20:08 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_RELATION
	 * 
	 * @ibatorgenerated Mon Nov 11 12:20:08 CST 2013
	 */
	public ProductRelationExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_RELATION
	 * 
	 * @ibatorgenerated Mon Nov 11 12:20:08 CST 2013
	 */
	protected ProductRelationExample(ProductRelationExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_RELATION
	 * 
	 * @ibatorgenerated Mon Nov 11 12:20:08 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_RELATION
	 * 
	 * @ibatorgenerated Mon Nov 11 12:20:08 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_RELATION
	 * 
	 * @ibatorgenerated Mon Nov 11 12:20:08 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_RELATION
	 * 
	 * @ibatorgenerated Mon Nov 11 12:20:08 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_RELATION
	 * 
	 * @ibatorgenerated Mon Nov 11 12:20:08 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_RELATION
	 * 
	 * @ibatorgenerated Mon Nov 11 12:20:08 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_RELATION
	 * 
	 * @ibatorgenerated Mon Nov 11 12:20:08 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds
	 * to the database table PRODUCT_RELATION
	 * 
	 * @ibatorgenerated Mon Nov 11 12:20:08 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;

		protected List criteriaWithSingleValue;

		protected List criteriaWithListValue;

		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andRelationIdIsNull() {
			addCriterion("RELATION_ID is null");
			return this;
		}

		public Criteria andRelationIdIsNotNull() {
			addCriterion("RELATION_ID is not null");
			return this;
		}

		public Criteria andRelationIdEqualTo(Long value) {
			addCriterion("RELATION_ID =", value, "relationId");
			return this;
		}

		public Criteria andRelationIdNotEqualTo(BigDecimal value) {
			addCriterion("RELATION_ID <>", value, "relationId");
			return this;
		}

		public Criteria andRelationIdGreaterThan(BigDecimal value) {
			addCriterion("RELATION_ID >", value, "relationId");
			return this;
		}

		public Criteria andRelationIdGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("RELATION_ID >=", value, "relationId");
			return this;
		}

		public Criteria andRelationIdLessThan(BigDecimal value) {
			addCriterion("RELATION_ID <", value, "relationId");
			return this;
		}

		public Criteria andRelationIdLessThanOrEqualTo(BigDecimal value) {
			addCriterion("RELATION_ID <=", value, "relationId");
			return this;
		}

		public Criteria andRelationIdIn(List values) {
			addCriterion("RELATION_ID in", values, "relationId");
			return this;
		}

		public Criteria andRelationIdNotIn(List values) {
			addCriterion("RELATION_ID not in", values, "relationId");
			return this;
		}

		public Criteria andRelationIdBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("RELATION_ID between", value1, value2, "relationId");
			return this;
		}

		public Criteria andRelationIdNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("RELATION_ID not between", value1, value2, "relationId");
			return this;
		}

		public Criteria andRelationNameIsNull() {
			addCriterion("RELATION_NAME is null");
			return this;
		}

		public Criteria andRelationNameIsNotNull() {
			addCriterion("RELATION_NAME is not null");
			return this;
		}

		public Criteria andRelationNameEqualTo(String value) {
			addCriterion("RELATION_NAME =", value, "relationName");
			return this;
		}

		public Criteria andRelationNameNotEqualTo(String value) {
			addCriterion("RELATION_NAME <>", value, "relationName");
			return this;
		}

		public Criteria andRelationNameGreaterThan(String value) {
			addCriterion("RELATION_NAME >", value, "relationName");
			return this;
		}

		public Criteria andRelationNameGreaterThanOrEqualTo(String value) {
			addCriterion("RELATION_NAME >=", value, "relationName");
			return this;
		}

		public Criteria andRelationNameLessThan(String value) {
			addCriterion("RELATION_NAME <", value, "relationName");
			return this;
		}

		public Criteria andRelationNameLessThanOrEqualTo(String value) {
			addCriterion("RELATION_NAME <=", value, "relationName");
			return this;
		}

		public Criteria andRelationNameLike(String value) {
			addCriterion("RELATION_NAME like", value, "relationName");
			return this;
		}

		public Criteria andRelationNameNotLike(String value) {
			addCriterion("RELATION_NAME not like", value, "relationName");
			return this;
		}

		public Criteria andRelationNameIn(List values) {
			addCriterion("RELATION_NAME in", values, "relationName");
			return this;
		}

		public Criteria andRelationNameNotIn(List values) {
			addCriterion("RELATION_NAME not in", values, "relationName");
			return this;
		}

		public Criteria andRelationNameBetween(String value1, String value2) {
			addCriterion("RELATION_NAME between", value1, value2, "relationName");
			return this;
		}

		public Criteria andRelationNameNotBetween(String value1, String value2) {
			addCriterion("RELATION_NAME not between", value1, value2, "relationName");
			return this;
		}

		public Criteria andMainSkuIdIsNull() {
			addCriterion("MAIN_SKU_ID is null");
			return this;
		}

		public Criteria andMainSkuIdIsNotNull() {
			addCriterion("MAIN_SKU_ID is not null");
			return this;
		}

		public Criteria andMainSkuIdEqualTo(BigDecimal value) {
			addCriterion("MAIN_SKU_ID =", value, "mainSkuId");
			return this;
		}

		public Criteria andMainSkuIdNotEqualTo(BigDecimal value) {
			addCriterion("MAIN_SKU_ID <>", value, "mainSkuId");
			return this;
		}

		public Criteria andMainSkuIdGreaterThan(BigDecimal value) {
			addCriterion("MAIN_SKU_ID >", value, "mainSkuId");
			return this;
		}

		public Criteria andMainSkuIdGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("MAIN_SKU_ID >=", value, "mainSkuId");
			return this;
		}

		public Criteria andMainSkuIdLessThan(BigDecimal value) {
			addCriterion("MAIN_SKU_ID <", value, "mainSkuId");
			return this;
		}

		public Criteria andMainSkuIdLessThanOrEqualTo(BigDecimal value) {
			addCriterion("MAIN_SKU_ID <=", value, "mainSkuId");
			return this;
		}

		public Criteria andMainSkuIdIn(List values) {
			addCriterion("MAIN_SKU_ID in", values, "mainSkuId");
			return this;
		}

		public Criteria andMainSkuIdNotIn(List values) {
			addCriterion("MAIN_SKU_ID not in", values, "mainSkuId");
			return this;
		}

		public Criteria andMainSkuIdBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MAIN_SKU_ID between", value1, value2, "mainSkuId");
			return this;
		}

		public Criteria andMainSkuIdNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MAIN_SKU_ID not between", value1, value2, "mainSkuId");
			return this;
		}

		public Criteria andMainSkuPriceIsNull() {
			addCriterion("MAIN_SKU_PRICE is null");
			return this;
		}

		public Criteria andMainSkuPriceIsNotNull() {
			addCriterion("MAIN_SKU_PRICE is not null");
			return this;
		}

		public Criteria andMainSkuPriceEqualTo(BigDecimal value) {
			addCriterion("MAIN_SKU_PRICE =", value, "mainSkuPrice");
			return this;
		}

		public Criteria andMainSkuPriceNotEqualTo(BigDecimal value) {
			addCriterion("MAIN_SKU_PRICE <>", value, "mainSkuPrice");
			return this;
		}

		public Criteria andMainSkuPriceGreaterThan(BigDecimal value) {
			addCriterion("MAIN_SKU_PRICE >", value, "mainSkuPrice");
			return this;
		}

		public Criteria andMainSkuPriceGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("MAIN_SKU_PRICE >=", value, "mainSkuPrice");
			return this;
		}

		public Criteria andMainSkuPriceLessThan(BigDecimal value) {
			addCriterion("MAIN_SKU_PRICE <", value, "mainSkuPrice");
			return this;
		}

		public Criteria andMainSkuPriceLessThanOrEqualTo(BigDecimal value) {
			addCriterion("MAIN_SKU_PRICE <=", value, "mainSkuPrice");
			return this;
		}

		public Criteria andMainSkuPriceIn(List values) {
			addCriterion("MAIN_SKU_PRICE in", values, "mainSkuPrice");
			return this;
		}

		public Criteria andMainSkuPriceNotIn(List values) {
			addCriterion("MAIN_SKU_PRICE not in", values, "mainSkuPrice");
			return this;
		}

		public Criteria andMainSkuPriceBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MAIN_SKU_PRICE between", value1, value2, "mainSkuPrice");
			return this;
		}

		public Criteria andMainSkuPriceNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MAIN_SKU_PRICE not between", value1, value2, "mainSkuPrice");
			return this;
		}

		public Criteria andTotalRelationPriceIsNull() {
			addCriterion("TOTAL_RELATION_PRICE is null");
			return this;
		}

		public Criteria andTotalRelationPriceIsNotNull() {
			addCriterion("TOTAL_RELATION_PRICE is not null");
			return this;
		}

		public Criteria andTotalRelationPriceEqualTo(BigDecimal value) {
			addCriterion("TOTAL_RELATION_PRICE =", value, "totalRelationPrice");
			return this;
		}

		public Criteria andTotalRelationPriceNotEqualTo(BigDecimal value) {
			addCriterion("TOTAL_RELATION_PRICE <>", value, "totalRelationPrice");
			return this;
		}

		public Criteria andTotalRelationPriceGreaterThan(BigDecimal value) {
			addCriterion("TOTAL_RELATION_PRICE >", value, "totalRelationPrice");
			return this;
		}

		public Criteria andTotalRelationPriceGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("TOTAL_RELATION_PRICE >=", value, "totalRelationPrice");
			return this;
		}

		public Criteria andTotalRelationPriceLessThan(BigDecimal value) {
			addCriterion("TOTAL_RELATION_PRICE <", value, "totalRelationPrice");
			return this;
		}

		public Criteria andTotalRelationPriceLessThanOrEqualTo(BigDecimal value) {
			addCriterion("TOTAL_RELATION_PRICE <=", value, "totalRelationPrice");
			return this;
		}

		public Criteria andTotalRelationPriceIn(List values) {
			addCriterion("TOTAL_RELATION_PRICE in", values, "totalRelationPrice");
			return this;
		}

		public Criteria andTotalRelationPriceNotIn(List values) {
			addCriterion("TOTAL_RELATION_PRICE not in", values, "totalRelationPrice");
			return this;
		}

		public Criteria andTotalRelationPriceBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("TOTAL_RELATION_PRICE between", value1, value2, "totalRelationPrice");
			return this;
		}

		public Criteria andTotalRelationPriceNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("TOTAL_RELATION_PRICE not between", value1, value2, "totalRelationPrice");
			return this;
		}

		public Criteria andRelationTypeIsNull() {
			addCriterion("RELATION_TYPE is null");
			return this;
		}

		public Criteria andRelationTypeIsNotNull() {
			addCriterion("RELATION_TYPE is not null");
			return this;
		}

		public Criteria andRelationTypeEqualTo(Short value) {
			addCriterion("RELATION_TYPE =", value, "relationType");
			return this;
		}

		public Criteria andRelationTypeNotEqualTo(Short value) {
			addCriterion("RELATION_TYPE <>", value, "relationType");
			return this;
		}

		public Criteria andRelationTypeGreaterThan(Short value) {
			addCriterion("RELATION_TYPE >", value, "relationType");
			return this;
		}

		public Criteria andRelationTypeGreaterThanOrEqualTo(Short value) {
			addCriterion("RELATION_TYPE >=", value, "relationType");
			return this;
		}

		public Criteria andRelationTypeLessThan(Short value) {
			addCriterion("RELATION_TYPE <", value, "relationType");
			return this;
		}

		public Criteria andRelationTypeLessThanOrEqualTo(Short value) {
			addCriterion("RELATION_TYPE <=", value, "relationType");
			return this;
		}

		public Criteria andRelationTypeIn(List values) {
			addCriterion("RELATION_TYPE in", values, "relationType");
			return this;
		}

		public Criteria andRelationTypeNotIn(List values) {
			addCriterion("RELATION_TYPE not in", values, "relationType");
			return this;
		}

		public Criteria andRelationTypeBetween(Short value1, Short value2) {
			addCriterion("RELATION_TYPE between", value1, value2, "relationType");
			return this;
		}

		public Criteria andRelationTypeNotBetween(Short value1, Short value2) {
			addCriterion("RELATION_TYPE not between", value1, value2, "relationType");
			return this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("REMARK is null");
			return this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("REMARK is not null");
			return this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("REMARK =", value, "remark");
			return this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("REMARK <>", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("REMARK >", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("REMARK >=", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("REMARK <", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("REMARK <=", value, "remark");
			return this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("REMARK like", value, "remark");
			return this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("REMARK not like", value, "remark");
			return this;
		}

		public Criteria andRemarkIn(List values) {
			addCriterion("REMARK in", values, "remark");
			return this;
		}

		public Criteria andRemarkNotIn(List values) {
			addCriterion("REMARK not in", values, "remark");
			return this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("REMARK between", value1, value2, "remark");
			return this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("REMARK not between", value1, value2, "remark");
			return this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("STATUS is null");
			return this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("STATUS is not null");
			return this;
		}

		public Criteria andStatusEqualTo(Short value) {
			addCriterion("STATUS =", value, "status");
			return this;
		}

		public Criteria andStatusNotEqualTo(Short value) {
			addCriterion("STATUS <>", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThan(Short value) {
			addCriterion("STATUS >", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Short value) {
			addCriterion("STATUS >=", value, "status");
			return this;
		}

		public Criteria andStatusLessThan(Short value) {
			addCriterion("STATUS <", value, "status");
			return this;
		}

		public Criteria andStatusLessThanOrEqualTo(Short value) {
			addCriterion("STATUS <=", value, "status");
			return this;
		}

		public Criteria andStatusIn(List values) {
			addCriterion("STATUS in", values, "status");
			return this;
		}

		public Criteria andStatusNotIn(List values) {
			addCriterion("STATUS not in", values, "status");
			return this;
		}

		public Criteria andStatusBetween(Short value1, Short value2) {
			addCriterion("STATUS between", value1, value2, "status");
			return this;
		}

		public Criteria andStatusNotBetween(Short value1, Short value2) {
			addCriterion("STATUS not between", value1, value2, "status");
			return this;
		}

		public Criteria andDelStatusIsNull() {
			addCriterion("DEL_STATUS is null");
			return this;
		}

		public Criteria andDelStatusIsNotNull() {
			addCriterion("DEL_STATUS is not null");
			return this;
		}

		public Criteria andDelStatusEqualTo(Short value) {
			addCriterion("DEL_STATUS =", value, "delStatus");
			return this;
		}

		public Criteria andDelStatusNotEqualTo(Short value) {
			addCriterion("DEL_STATUS <>", value, "delStatus");
			return this;
		}

		public Criteria andDelStatusGreaterThan(Short value) {
			addCriterion("DEL_STATUS >", value, "delStatus");
			return this;
		}

		public Criteria andDelStatusGreaterThanOrEqualTo(Short value) {
			addCriterion("DEL_STATUS >=", value, "delStatus");
			return this;
		}

		public Criteria andDelStatusLessThan(Short value) {
			addCriterion("DEL_STATUS <", value, "delStatus");
			return this;
		}

		public Criteria andDelStatusLessThanOrEqualTo(Short value) {
			addCriterion("DEL_STATUS <=", value, "delStatus");
			return this;
		}

		public Criteria andDelStatusIn(List values) {
			addCriterion("DEL_STATUS in", values, "delStatus");
			return this;
		}

		public Criteria andDelStatusNotIn(List values) {
			addCriterion("DEL_STATUS not in", values, "delStatus");
			return this;
		}

		public Criteria andDelStatusBetween(Short value1, Short value2) {
			addCriterion("DEL_STATUS between", value1, value2, "delStatus");
			return this;
		}

		public Criteria andDelStatusNotBetween(Short value1, Short value2) {
			addCriterion("DEL_STATUS not between", value1, value2, "delStatus");
			return this;
		}

		public Criteria andCreateDateIsNull() {
			addCriterion("CREATE_DATE is null");
			return this;
		}

		public Criteria andCreateDateIsNotNull() {
			addCriterion("CREATE_DATE is not null");
			return this;
		}

		public Criteria andCreateDateEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
			return this;
		}

		public Criteria andCreateDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
			return this;
		}

		public Criteria andCreateDateGreaterThan(Date value) {
			addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
			return this;
		}

		public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
			return this;
		}

		public Criteria andCreateDateLessThan(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
			return this;
		}

		public Criteria andCreateDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
			return this;
		}

		public Criteria andCreateDateIn(List values) {
			addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
			return this;
		}

		public Criteria andCreateDateNotIn(List values) {
			addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
			return this;
		}

		public Criteria andCreateDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
			return this;
		}

		public Criteria andCreateDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
			return this;
		}

		public Criteria andEditableIsNull() {
			addCriterion("EDITABLE is null");
			return this;
		}

		public Criteria andEditableIsNotNull() {
			addCriterion("EDITABLE is not null");
			return this;
		}

		public Criteria andEditableEqualTo(Short value) {
			addCriterion("EDITABLE =", value, "editable");
			return this;
		}

		public Criteria andEditableNotEqualTo(Short value) {
			addCriterion("EDITABLE <>", value, "editable");
			return this;
		}

		public Criteria andEditableGreaterThan(Short value) {
			addCriterion("EDITABLE >", value, "editable");
			return this;
		}

		public Criteria andEditableGreaterThanOrEqualTo(Short value) {
			addCriterion("EDITABLE >=", value, "editable");
			return this;
		}

		public Criteria andEditableLessThan(Short value) {
			addCriterion("EDITABLE <", value, "editable");
			return this;
		}

		public Criteria andEditableLessThanOrEqualTo(Short value) {
			addCriterion("EDITABLE <=", value, "editable");
			return this;
		}

		public Criteria andEditableIn(List values) {
			addCriterion("EDITABLE in", values, "editable");
			return this;
		}

		public Criteria andEditableNotIn(List values) {
			addCriterion("EDITABLE not in", values, "editable");
			return this;
		}

		public Criteria andEditableBetween(Short value1, Short value2) {
			addCriterion("EDITABLE between", value1, value2, "editable");
			return this;
		}

		public Criteria andEditableNotBetween(Short value1, Short value2) {
			addCriterion("EDITABLE not between", value1, value2, "editable");
			return this;
		}
	}
}