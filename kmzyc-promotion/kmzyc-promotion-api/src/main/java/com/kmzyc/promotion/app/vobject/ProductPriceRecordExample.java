package com.kmzyc.promotion.app.vobject;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class ProductPriceRecordExample {
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds
	 * to the database table PRODUCT_PRICE_RECORD
	 * 
	 * @ibatorgenerated Fri Dec 27 10:39:16 CST 2013
	 */
	protected String orderByClause;

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds
	 * to the database table PRODUCT_PRICE_RECORD
	 * 
	 * @ibatorgenerated Fri Dec 27 10:39:16 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_PRICE_RECORD
	 * 
	 * @ibatorgenerated Fri Dec 27 10:39:16 CST 2013
	 */
	public ProductPriceRecordExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_PRICE_RECORD
	 * 
	 * @ibatorgenerated Fri Dec 27 10:39:16 CST 2013
	 */
	protected ProductPriceRecordExample(ProductPriceRecordExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_PRICE_RECORD
	 * 
	 * @ibatorgenerated Fri Dec 27 10:39:16 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_PRICE_RECORD
	 * 
	 * @ibatorgenerated Fri Dec 27 10:39:16 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_PRICE_RECORD
	 * 
	 * @ibatorgenerated Fri Dec 27 10:39:16 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_PRICE_RECORD
	 * 
	 * @ibatorgenerated Fri Dec 27 10:39:16 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_PRICE_RECORD
	 * 
	 * @ibatorgenerated Fri Dec 27 10:39:16 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_PRICE_RECORD
	 * 
	 * @ibatorgenerated Fri Dec 27 10:39:16 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table PRODUCT_PRICE_RECORD
	 * 
	 * @ibatorgenerated Fri Dec 27 10:39:16 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds
	 * to the database table PRODUCT_PRICE_RECORD
	 * 
	 * @ibatorgenerated Fri Dec 27 10:39:16 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;

		protected List criteriaWithSingleValue;

		protected List criteriaWithListValue;

		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andRecordIdIsNull() {
			addCriterion("RECORD_ID is null");
			return this;
		}

		public Criteria andRecordIdIsNotNull() {
			addCriterion("RECORD_ID is not null");
			return this;
		}

		public Criteria andRecordIdEqualTo(Long value) {
			addCriterion("RECORD_ID =", value, "recordId");
			return this;
		}

		public Criteria andRecordIdNotEqualTo(Long value) {
			addCriterion("RECORD_ID <>", value, "recordId");
			return this;
		}

		public Criteria andRecordIdGreaterThan(Long value) {
			addCriterion("RECORD_ID >", value, "recordId");
			return this;
		}

		public Criteria andRecordIdGreaterThanOrEqualTo(Long value) {
			addCriterion("RECORD_ID >=", value, "recordId");
			return this;
		}

		public Criteria andRecordIdLessThan(Long value) {
			addCriterion("RECORD_ID <", value, "recordId");
			return this;
		}

		public Criteria andRecordIdLessThanOrEqualTo(Long value) {
			addCriterion("RECORD_ID <=", value, "recordId");
			return this;
		}

		public Criteria andRecordIdIn(List values) {
			addCriterion("RECORD_ID in", values, "recordId");
			return this;
		}

		public Criteria andRecordIdNotIn(List values) {
			addCriterion("RECORD_ID not in", values, "recordId");
			return this;
		}

		public Criteria andRecordIdBetween(Long value1, Long value2) {
			addCriterion("RECORD_ID between", value1, value2, "recordId");
			return this;
		}

		public Criteria andRecordIdNotBetween(Long value1, Long value2) {
			addCriterion("RECORD_ID not between", value1, value2, "recordId");
			return this;
		}

		public Criteria andProductIdIsNull() {
			addCriterion("PRODUCT_ID is null");
			return this;
		}

		public Criteria andProductIdIsNotNull() {
			addCriterion("PRODUCT_ID is not null");
			return this;
		}

		public Criteria andProductIdEqualTo(Long value) {
			addCriterion("PRODUCT_ID =", value, "productId");
			return this;
		}

		public Criteria andProductIdNotEqualTo(Long value) {
			addCriterion("PRODUCT_ID <>", value, "productId");
			return this;
		}

		public Criteria andProductIdGreaterThan(Long value) {
			addCriterion("PRODUCT_ID >", value, "productId");
			return this;
		}

		public Criteria andProductIdGreaterThanOrEqualTo(Long value) {
			addCriterion("PRODUCT_ID >=", value, "productId");
			return this;
		}

		public Criteria andProductIdLessThan(Long value) {
			addCriterion("PRODUCT_ID <", value, "productId");
			return this;
		}

		public Criteria andProductIdLessThanOrEqualTo(Long value) {
			addCriterion("PRODUCT_ID <=", value, "productId");
			return this;
		}

		public Criteria andProductIdIn(List values) {
			addCriterion("PRODUCT_ID in", values, "productId");
			return this;
		}

		public Criteria andProductIdNotIn(List values) {
			addCriterion("PRODUCT_ID not in", values, "productId");
			return this;
		}

		public Criteria andProductIdBetween(Long value1, Long value2) {
			addCriterion("PRODUCT_ID between", value1, value2, "productId");
			return this;
		}

		public Criteria andProductIdNotBetween(Long value1, Long value2) {
			addCriterion("PRODUCT_ID not between", value1, value2, "productId");
			return this;
		}

		public Criteria andProductSkuIdIsNull() {
			addCriterion("PRODUCT_SKU_ID is null");
			return this;
		}

		public Criteria andProductSkuIdIsNotNull() {
			addCriterion("PRODUCT_SKU_ID is not null");
			return this;
		}

		public Criteria andProductSkuIdEqualTo(Long value) {
			addCriterion("PRODUCT_SKU_ID =", value, "productSkuId");
			return this;
		}

		public Criteria andProductSkuIdNotEqualTo(Long value) {
			addCriterion("PRODUCT_SKU_ID <>", value, "productSkuId");
			return this;
		}

		public Criteria andProductSkuIdGreaterThan(Long value) {
			addCriterion("PRODUCT_SKU_ID >", value, "productSkuId");
			return this;
		}

		public Criteria andProductSkuIdGreaterThanOrEqualTo(Long value) {
			addCriterion("PRODUCT_SKU_ID >=", value, "productSkuId");
			return this;
		}

		public Criteria andProductSkuIdLessThan(Long value) {
			addCriterion("PRODUCT_SKU_ID <", value, "productSkuId");
			return this;
		}

		public Criteria andProductSkuIdLessThanOrEqualTo(Long value) {
			addCriterion("PRODUCT_SKU_ID <=", value, "productSkuId");
			return this;
		}

		public Criteria andProductSkuIdIn(List values) {
			addCriterion("PRODUCT_SKU_ID in", values, "productSkuId");
			return this;
		}

		public Criteria andProductSkuIdNotIn(List values) {
			addCriterion("PRODUCT_SKU_ID not in", values, "productSkuId");
			return this;
		}

		public Criteria andProductSkuIdBetween(Long value1, Long value2) {
			addCriterion("PRODUCT_SKU_ID between", value1, value2, "productSkuId");
			return this;
		}

		public Criteria andProductSkuIdNotBetween(Long value1, Long value2) {
			addCriterion("PRODUCT_SKU_ID not between", value1, value2, "productSkuId");
			return this;
		}

		public Criteria andPriceIsNull() {
			addCriterion("PRICE is null");
			return this;
		}

		public Criteria andPriceIsNotNull() {
			addCriterion("PRICE is not null");
			return this;
		}

		public Criteria andPriceEqualTo(Double value) {
			addCriterion("PRICE =", value, "price");
			return this;
		}

		public Criteria andPriceNotEqualTo(Double value) {
			addCriterion("PRICE <>", value, "price");
			return this;
		}

		public Criteria andPriceGreaterThan(Double value) {
			addCriterion("PRICE >", value, "price");
			return this;
		}

		public Criteria andPriceGreaterThanOrEqualTo(Double value) {
			addCriterion("PRICE >=", value, "price");
			return this;
		}

		public Criteria andPriceLessThan(Double value) {
			addCriterion("PRICE <", value, "price");
			return this;
		}

		public Criteria andPriceLessThanOrEqualTo(Double value) {
			addCriterion("PRICE <=", value, "price");
			return this;
		}

		public Criteria andPriceIn(List values) {
			addCriterion("PRICE in", values, "price");
			return this;
		}

		public Criteria andPriceNotIn(List values) {
			addCriterion("PRICE not in", values, "price");
			return this;
		}

		public Criteria andPriceBetween(Double value1, Double value2) {
			addCriterion("PRICE between", value1, value2, "price");
			return this;
		}

		public Criteria andPriceNotBetween(Double value1, Double value2) {
			addCriterion("PRICE not between", value1, value2, "price");
			return this;
		}

		public Criteria andCreateUserIsNull() {
			addCriterion("CREATE_USER is null");
			return this;
		}

		public Criteria andCreateUserIsNotNull() {
			addCriterion("CREATE_USER is not null");
			return this;
		}

		public Criteria andCreateUserEqualTo(Long value) {
			addCriterion("CREATE_USER =", value, "createUser");
			return this;
		}

		public Criteria andCreateUserNotEqualTo(Long value) {
			addCriterion("CREATE_USER <>", value, "createUser");
			return this;
		}

		public Criteria andCreateUserGreaterThan(Long value) {
			addCriterion("CREATE_USER >", value, "createUser");
			return this;
		}

		public Criteria andCreateUserGreaterThanOrEqualTo(Long value) {
			addCriterion("CREATE_USER >=", value, "createUser");
			return this;
		}

		public Criteria andCreateUserLessThan(Long value) {
			addCriterion("CREATE_USER <", value, "createUser");
			return this;
		}

		public Criteria andCreateUserLessThanOrEqualTo(Long value) {
			addCriterion("CREATE_USER <=", value, "createUser");
			return this;
		}

		public Criteria andCreateUserIn(List values) {
			addCriterion("CREATE_USER in", values, "createUser");
			return this;
		}

		public Criteria andCreateUserNotIn(List values) {
			addCriterion("CREATE_USER not in", values, "createUser");
			return this;
		}

		public Criteria andCreateUserBetween(Long value1, Long value2) {
			addCriterion("CREATE_USER between", value1, value2, "createUser");
			return this;
		}

		public Criteria andCreateUserNotBetween(Long value1, Long value2) {
			addCriterion("CREATE_USER not between", value1, value2, "createUser");
			return this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("CREATE_TIME is null");
			return this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("CREATE_TIME is not null");
			return this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_TIME =", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_TIME <>", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("CREATE_TIME >", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_TIME >=", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterionForJDBCDate("CREATE_TIME <", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_TIME <=", value, "createTime");
			return this;
		}

		public Criteria andCreateTimeIn(List values) {
			addCriterionForJDBCDate("CREATE_TIME in", values, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotIn(List values) {
			addCriterionForJDBCDate("CREATE_TIME not in", values, "createTime");
			return this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_TIME between", value1, value2, "createTime");
			return this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_TIME not between", value1, value2, "createTime");
			return this;
		}

		public Criteria andUnitWeightIsNull() {
			addCriterion("UNIT_WEIGHT is null");
			return this;
		}

		public Criteria andUnitWeightIsNotNull() {
			addCriterion("UNIT_WEIGHT is not null");
			return this;
		}

		public Criteria andUnitWeightEqualTo(Double value) {
			addCriterion("UNIT_WEIGHT =", value, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightNotEqualTo(Double value) {
			addCriterion("UNIT_WEIGHT <>", value, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightGreaterThan(Double value) {
			addCriterion("UNIT_WEIGHT >", value, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightGreaterThanOrEqualTo(Double value) {
			addCriterion("UNIT_WEIGHT >=", value, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightLessThan(Double value) {
			addCriterion("UNIT_WEIGHT <", value, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightLessThanOrEqualTo(Double value) {
			addCriterion("UNIT_WEIGHT <=", value, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightIn(List values) {
			addCriterion("UNIT_WEIGHT in", values, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightNotIn(List values) {
			addCriterion("UNIT_WEIGHT not in", values, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightBetween(Double value1, Double value2) {
			addCriterion("UNIT_WEIGHT between", value1, value2, "unitWeight");
			return this;
		}

		public Criteria andUnitWeightNotBetween(Double value1, Double value2) {
			addCriterion("UNIT_WEIGHT not between", value1, value2, "unitWeight");
			return this;
		}

		public Criteria andMarkPriceIsNull() {
			addCriterion("MARK_PRICE is null");
			return this;
		}

		public Criteria andMarkPriceIsNotNull() {
			addCriterion("MARK_PRICE is not null");
			return this;
		}

		public Criteria andMarkPriceEqualTo(Double value) {
			addCriterion("MARK_PRICE =", value, "markPrice");
			return this;
		}

		public Criteria andMarkPriceNotEqualTo(Double value) {
			addCriterion("MARK_PRICE <>", value, "markPrice");
			return this;
		}

		public Criteria andMarkPriceGreaterThan(Double value) {
			addCriterion("MARK_PRICE >", value, "markPrice");
			return this;
		}

		public Criteria andMarkPriceGreaterThanOrEqualTo(Double value) {
			addCriterion("MARK_PRICE >=", value, "markPrice");
			return this;
		}

		public Criteria andMarkPriceLessThan(Double value) {
			addCriterion("MARK_PRICE <", value, "markPrice");
			return this;
		}

		public Criteria andMarkPriceLessThanOrEqualTo(Double value) {
			addCriterion("MARK_PRICE <=", value, "markPrice");
			return this;
		}

		public Criteria andMarkPriceIn(List values) {
			addCriterion("MARK_PRICE in", values, "markPrice");
			return this;
		}

		public Criteria andMarkPriceNotIn(List values) {
			addCriterion("MARK_PRICE not in", values, "markPrice");
			return this;
		}

		public Criteria andMarkPriceBetween(Double value1, Double value2) {
			addCriterion("MARK_PRICE between", value1, value2, "markPrice");
			return this;
		}

		public Criteria andMarkPriceNotBetween(Double value1, Double value2) {
			addCriterion("MARK_PRICE not between", value1, value2, "markPrice");
			return this;
		}
	}
}