package com.kmzyc.promotion.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class CouponGrantFlowExample {
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table KMPRODUCT.COUPON_GRANT_FLOW
	 * 
	 * @abatorgenerated Mon Jun 09 04:40:49 CST 2014
	 */
	protected String orderByClause;

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to
	 * the database table KMPRODUCT.COUPON_GRANT_FLOW
	 * 
	 * @abatorgenerated Mon Jun 09 04:40:49 CST 2014
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table KMPRODUCT.COUPON_GRANT_FLOW
	 * 
	 * @abatorgenerated Mon Jun 09 04:40:49 CST 2014
	 */
	public CouponGrantFlowExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table KMPRODUCT.COUPON_GRANT_FLOW
	 * 
	 * @abatorgenerated Mon Jun 09 04:40:49 CST 2014
	 */
	protected CouponGrantFlowExample(CouponGrantFlowExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table KMPRODUCT.COUPON_GRANT_FLOW
	 * 
	 * @abatorgenerated Mon Jun 09 04:40:49 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table KMPRODUCT.COUPON_GRANT_FLOW
	 * 
	 * @abatorgenerated Mon Jun 09 04:40:49 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table KMPRODUCT.COUPON_GRANT_FLOW
	 * 
	 * @abatorgenerated Mon Jun 09 04:40:49 CST 2014
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table KMPRODUCT.COUPON_GRANT_FLOW
	 * 
	 * @abatorgenerated Mon Jun 09 04:40:49 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table KMPRODUCT.COUPON_GRANT_FLOW
	 * 
	 * @abatorgenerated Mon Jun 09 04:40:49 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table KMPRODUCT.COUPON_GRANT_FLOW
	 * 
	 * @abatorgenerated Mon Jun 09 04:40:49 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds
	 * to the database table KMPRODUCT.COUPON_GRANT_FLOW
	 * 
	 * @abatorgenerated Mon Jun 09 04:40:49 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to
	 * the database table KMPRODUCT.COUPON_GRANT_FLOW
	 * 
	 * @abatorgenerated Mon Jun 09 04:40:49 CST 2014
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;

		protected List criteriaWithSingleValue;

		protected List criteriaWithListValue;

		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andCouponGrantFlowIdIsNull() {
			addCriterion("COUPON_GRANT_FLOW_ID is null");
			return this;
		}

		public Criteria andCouponGrantFlowIdIsNotNull() {
			addCriterion("COUPON_GRANT_FLOW_ID is not null");
			return this;
		}

		public Criteria andCouponGrantFlowIdEqualTo(BigDecimal value) {
			addCriterion("COUPON_GRANT_FLOW_ID =", value, "couponGrantFlowId");
			return this;
		}

		public Criteria andCouponGrantFlowIdNotEqualTo(BigDecimal value) {
			addCriterion("COUPON_GRANT_FLOW_ID <>", value, "couponGrantFlowId");
			return this;
		}

		public Criteria andCouponGrantFlowIdGreaterThan(BigDecimal value) {
			addCriterion("COUPON_GRANT_FLOW_ID >", value, "couponGrantFlowId");
			return this;
		}

		public Criteria andCouponGrantFlowIdGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("COUPON_GRANT_FLOW_ID >=", value, "couponGrantFlowId");
			return this;
		}

		public Criteria andCouponGrantFlowIdLessThan(BigDecimal value) {
			addCriterion("COUPON_GRANT_FLOW_ID <", value, "couponGrantFlowId");
			return this;
		}

		public Criteria andCouponGrantFlowIdLessThanOrEqualTo(BigDecimal value) {
			addCriterion("COUPON_GRANT_FLOW_ID <=", value, "couponGrantFlowId");
			return this;
		}

		public Criteria andCouponGrantFlowIdIn(List values) {
			addCriterion("COUPON_GRANT_FLOW_ID in", values, "couponGrantFlowId");
			return this;
		}

		public Criteria andCouponGrantFlowIdNotIn(List values) {
			addCriterion("COUPON_GRANT_FLOW_ID not in", values, "couponGrantFlowId");
			return this;
		}

		public Criteria andCouponGrantFlowIdBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("COUPON_GRANT_FLOW_ID between", value1, value2, "couponGrantFlowId");
			return this;
		}

		public Criteria andCouponGrantFlowIdNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("COUPON_GRANT_FLOW_ID not between", value1, value2, "couponGrantFlowId");
			return this;
		}

		public Criteria andCouponGrantFlowTypeIsNull() {
			addCriterion("COUPON_GRANT_FLOW_TYPE is null");
			return this;
		}

		public Criteria andCouponGrantFlowTypeIsNotNull() {
			addCriterion("COUPON_GRANT_FLOW_TYPE is not null");
			return this;
		}

		public Criteria andCouponGrantFlowTypeEqualTo(BigDecimal value) {
			addCriterion("COUPON_GRANT_FLOW_TYPE =", value, "couponGrantFlowType");
			return this;
		}

		public Criteria andCouponGrantFlowTypeNotEqualTo(BigDecimal value) {
			addCriterion("COUPON_GRANT_FLOW_TYPE <>", value, "couponGrantFlowType");
			return this;
		}

		public Criteria andCouponGrantFlowTypeGreaterThan(BigDecimal value) {
			addCriterion("COUPON_GRANT_FLOW_TYPE >", value, "couponGrantFlowType");
			return this;
		}

		public Criteria andCouponGrantFlowTypeGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("COUPON_GRANT_FLOW_TYPE >=", value, "couponGrantFlowType");
			return this;
		}

		public Criteria andCouponGrantFlowTypeLessThan(BigDecimal value) {
			addCriterion("COUPON_GRANT_FLOW_TYPE <", value, "couponGrantFlowType");
			return this;
		}

		public Criteria andCouponGrantFlowTypeLessThanOrEqualTo(BigDecimal value) {
			addCriterion("COUPON_GRANT_FLOW_TYPE <=", value, "couponGrantFlowType");
			return this;
		}

		public Criteria andCouponGrantFlowTypeIn(List values) {
			addCriterion("COUPON_GRANT_FLOW_TYPE in", values, "couponGrantFlowType");
			return this;
		}

		public Criteria andCouponGrantFlowTypeNotIn(List values) {
			addCriterion("COUPON_GRANT_FLOW_TYPE not in", values, "couponGrantFlowType");
			return this;
		}

		public Criteria andCouponGrantFlowTypeBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("COUPON_GRANT_FLOW_TYPE between", value1, value2, "couponGrantFlowType");
			return this;
		}

		public Criteria andCouponGrantFlowTypeNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("COUPON_GRANT_FLOW_TYPE not between", value1, value2, "couponGrantFlowType");
			return this;
		}

		public Criteria andOperatingPersonIsNull() {
			addCriterion("OPERATING_PERSON is null");
			return this;
		}

		public Criteria andOperatingPersonIsNotNull() {
			addCriterion("OPERATING_PERSON is not null");
			return this;
		}

		public Criteria andOperatingPersonEqualTo(BigDecimal value) {
			addCriterion("OPERATING_PERSON =", value, "operatingPerson");
			return this;
		}

		public Criteria andOperatingPersonNotEqualTo(BigDecimal value) {
			addCriterion("OPERATING_PERSON <>", value, "operatingPerson");
			return this;
		}

		public Criteria andOperatingPersonGreaterThan(BigDecimal value) {
			addCriterion("OPERATING_PERSON >", value, "operatingPerson");
			return this;
		}

		public Criteria andOperatingPersonGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("OPERATING_PERSON >=", value, "operatingPerson");
			return this;
		}

		public Criteria andOperatingPersonLessThan(BigDecimal value) {
			addCriterion("OPERATING_PERSON <", value, "operatingPerson");
			return this;
		}

		public Criteria andOperatingPersonLessThanOrEqualTo(BigDecimal value) {
			addCriterion("OPERATING_PERSON <=", value, "operatingPerson");
			return this;
		}

		public Criteria andOperatingPersonIn(List values) {
			addCriterion("OPERATING_PERSON in", values, "operatingPerson");
			return this;
		}

		public Criteria andOperatingPersonNotIn(List values) {
			addCriterion("OPERATING_PERSON not in", values, "operatingPerson");
			return this;
		}

		public Criteria andOperatingPersonBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("OPERATING_PERSON between", value1, value2, "operatingPerson");
			return this;
		}

		public Criteria andOperatingPersonNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("OPERATING_PERSON not between", value1, value2, "operatingPerson");
			return this;
		}

		public Criteria andCreateDateIsNull() {
			addCriterion("CREATE_DATE is null");
			return this;
		}

		public Criteria andCreateDateIsNotNull() {
			addCriterion("CREATE_DATE is not null");
			return this;
		}

		public Criteria andCreateDateEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
			return this;
		}

		public Criteria andCreateDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
			return this;
		}

		public Criteria andCreateDateGreaterThan(Date value) {
			addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
			return this;
		}

		public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
			return this;
		}

		public Criteria andCreateDateLessThan(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
			return this;
		}

		public Criteria andCreateDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
			return this;
		}

		public Criteria andCreateDateIn(List values) {
			addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
			return this;
		}

		public Criteria andCreateDateNotIn(List values) {
			addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
			return this;
		}

		public Criteria andCreateDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
			return this;
		}

		public Criteria andCreateDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
			return this;
		}

		public Criteria andOrderCodeIsNull() {
			addCriterion("ORDER_CODE is null");
			return this;
		}

		public Criteria andOrderCodeIsNotNull() {
			addCriterion("ORDER_CODE is not null");
			return this;
		}

		public Criteria andOrderCodeEqualTo(BigDecimal value) {
			addCriterion("ORDER_CODE =", value, "orderCode");
			return this;
		}

		public Criteria andOrderCodeNotEqualTo(BigDecimal value) {
			addCriterion("ORDER_CODE <>", value, "orderCode");
			return this;
		}

		public Criteria andOrderCodeGreaterThan(BigDecimal value) {
			addCriterion("ORDER_CODE >", value, "orderCode");
			return this;
		}

		public Criteria andOrderCodeGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ORDER_CODE >=", value, "orderCode");
			return this;
		}

		public Criteria andOrderCodeLessThan(BigDecimal value) {
			addCriterion("ORDER_CODE <", value, "orderCode");
			return this;
		}

		public Criteria andOrderCodeLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ORDER_CODE <=", value, "orderCode");
			return this;
		}

		public Criteria andOrderCodeIn(List values) {
			addCriterion("ORDER_CODE in", values, "orderCode");
			return this;
		}

		public Criteria andOrderCodeNotIn(List values) {
			addCriterion("ORDER_CODE not in", values, "orderCode");
			return this;
		}

		public Criteria andOrderCodeBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ORDER_CODE between", value1, value2, "orderCode");
			return this;
		}

		public Criteria andOrderCodeNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ORDER_CODE not between", value1, value2, "orderCode");
			return this;
		}

		public Criteria andOrderFlowCodeIsNull() {
			addCriterion("ORDER_FLOW_CODE is null");
			return this;
		}

		public Criteria andOrderFlowCodeIsNotNull() {
			addCriterion("ORDER_FLOW_CODE is not null");
			return this;
		}

		public Criteria andOrderFlowCodeEqualTo(BigDecimal value) {
			addCriterion("ORDER_FLOW_CODE =", value, "orderFlowCode");
			return this;
		}

		public Criteria andOrderFlowCodeNotEqualTo(BigDecimal value) {
			addCriterion("ORDER_FLOW_CODE <>", value, "orderFlowCode");
			return this;
		}

		public Criteria andOrderFlowCodeGreaterThan(BigDecimal value) {
			addCriterion("ORDER_FLOW_CODE >", value, "orderFlowCode");
			return this;
		}

		public Criteria andOrderFlowCodeGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ORDER_FLOW_CODE >=", value, "orderFlowCode");
			return this;
		}

		public Criteria andOrderFlowCodeLessThan(BigDecimal value) {
			addCriterion("ORDER_FLOW_CODE <", value, "orderFlowCode");
			return this;
		}

		public Criteria andOrderFlowCodeLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ORDER_FLOW_CODE <=", value, "orderFlowCode");
			return this;
		}

		public Criteria andOrderFlowCodeIn(List values) {
			addCriterion("ORDER_FLOW_CODE in", values, "orderFlowCode");
			return this;
		}

		public Criteria andOrderFlowCodeNotIn(List values) {
			addCriterion("ORDER_FLOW_CODE not in", values, "orderFlowCode");
			return this;
		}

		public Criteria andOrderFlowCodeBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ORDER_FLOW_CODE between", value1, value2, "orderFlowCode");
			return this;
		}

		public Criteria andOrderFlowCodeNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ORDER_FLOW_CODE not between", value1, value2, "orderFlowCode");
			return this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("REMARK is null");
			return this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("REMARK is not null");
			return this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("REMARK =", value, "remark");
			return this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("REMARK <>", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("REMARK >", value, "remark");
			return this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("REMARK >=", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("REMARK <", value, "remark");
			return this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("REMARK <=", value, "remark");
			return this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("REMARK like", value, "remark");
			return this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("REMARK not like", value, "remark");
			return this;
		}

		public Criteria andRemarkIn(List values) {
			addCriterion("REMARK in", values, "remark");
			return this;
		}

		public Criteria andRemarkNotIn(List values) {
			addCriterion("REMARK not in", values, "remark");
			return this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("REMARK between", value1, value2, "remark");
			return this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("REMARK not between", value1, value2, "remark");
			return this;
		}

		public Criteria andCouponGrantIdIsNull() {
			addCriterion("COUPON_GRANT_ID is null");
			return this;
		}

		public Criteria andCouponGrantIdIsNotNull() {
			addCriterion("COUPON_GRANT_ID is not null");
			return this;
		}

		public Criteria andCouponGrantIdEqualTo(BigDecimal value) {
			addCriterion("COUPON_GRANT_ID =", value, "couponGrantId");
			return this;
		}

		public Criteria andCouponGrantIdNotEqualTo(BigDecimal value) {
			addCriterion("COUPON_GRANT_ID <>", value, "couponGrantId");
			return this;
		}

		public Criteria andCouponGrantIdGreaterThan(BigDecimal value) {
			addCriterion("COUPON_GRANT_ID >", value, "couponGrantId");
			return this;
		}

		public Criteria andCouponGrantIdGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("COUPON_GRANT_ID >=", value, "couponGrantId");
			return this;
		}

		public Criteria andCouponGrantIdLessThan(BigDecimal value) {
			addCriterion("COUPON_GRANT_ID <", value, "couponGrantId");
			return this;
		}

		public Criteria andCouponGrantIdLessThanOrEqualTo(BigDecimal value) {
			addCriterion("COUPON_GRANT_ID <=", value, "couponGrantId");
			return this;
		}

		public Criteria andCouponGrantIdIn(List values) {
			addCriterion("COUPON_GRANT_ID in", values, "couponGrantId");
			return this;
		}

		public Criteria andCouponGrantIdNotIn(List values) {
			addCriterion("COUPON_GRANT_ID not in", values, "couponGrantId");
			return this;
		}

		public Criteria andCouponGrantIdBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("COUPON_GRANT_ID between", value1, value2, "couponGrantId");
			return this;
		}

		public Criteria andCouponGrantIdNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("COUPON_GRANT_ID not between", value1, value2, "couponGrantId");
			return this;
		}
	}
}