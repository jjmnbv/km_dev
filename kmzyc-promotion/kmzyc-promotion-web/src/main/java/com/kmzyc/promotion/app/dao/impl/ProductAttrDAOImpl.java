package com.kmzyc.promotion.app.dao.impl;

import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Repository;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.kmzyc.promotion.app.dao.ProductAttrDAO;
import com.kmzyc.promotion.app.vobject.ProductAttr;
import com.kmzyc.promotion.app.vobject.ProductAttrExample;

@Repository("productAttrDAO")
@SuppressWarnings({"unchecked", "unused"})
public class ProductAttrDAOImpl implements ProductAttrDAO {

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  @Resource
  private SqlMapClient sqlMapClient;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  @Override
  public int countByExample(ProductAttrExample example) throws SQLException {
    Integer count =
        (Integer) sqlMapClient.queryForObject("PRODUCT_ATTR.ibatorgenerated_countByExample",
            example);
    return count.intValue();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  @Override
  public int deleteByExample(ProductAttrExample example) throws SQLException {
    int rows = sqlMapClient.delete("PRODUCT_ATTR.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  @Override
  public int deleteByPrimaryKey(Long productAttrId) throws SQLException {
    ProductAttr key = new ProductAttr();
    key.setProductAttrId(productAttrId);
    int rows = sqlMapClient.delete("PRODUCT_ATTR.ibatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  @Override
  public void insert(ProductAttr record) throws SQLException {
    sqlMapClient.insert("PRODUCT_ATTR.ibatorgenerated_insert", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  @Override
  public void insertSelective(ProductAttr record) throws SQLException {
    sqlMapClient.insert("PRODUCT_ATTR.ibatorgenerated_insertSelective", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  @Override
  public List selectByExample(ProductAttrExample example) throws SQLException {
    List list = sqlMapClient.queryForList("PRODUCT_ATTR.ibatorgenerated_selectByExample", example);
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  @Override
  public ProductAttr selectByPrimaryKey(Long productAttrId) throws SQLException {
    ProductAttr key = new ProductAttr();
    key.setProductAttrId(productAttrId);
    ProductAttr record =
        (ProductAttr) sqlMapClient.queryForObject(
            "PRODUCT_ATTR.ibatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  @Override
  public int updateByExampleSelective(ProductAttr record, ProductAttrExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("PRODUCT_ATTR.ibatorgenerated_updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  @Override
  public int updateByExample(ProductAttr record, ProductAttrExample example) throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("PRODUCT_ATTR.ibatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  @Override
  public int updateByPrimaryKeySelective(ProductAttr record) throws SQLException {
    int rows =
        sqlMapClient.update("PRODUCT_ATTR.ibatorgenerated_updateByPrimaryKeySelective", record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  @Override
  public int updateByPrimaryKey(ProductAttr record) throws SQLException {
    int rows = sqlMapClient.update("PRODUCT_ATTR.ibatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * PRODUCT_ATTR
   * 
   * @ibatorgenerated Wed Jul 31 18:30:28 CST 2013
   */
  private static class UpdateByExampleParms extends ProductAttrExample {
    private final Object record;

    public UpdateByExampleParms(Object record, ProductAttrExample example) {
      super(example);
      this.record = record;
    }

    public Object getRecord() {
      return record;
    }
  }

  @Override
  public boolean queryRelationAttrValue(Long categoryAttrValueId) throws SQLException {
    int result =
        (Integer) sqlMapClient.queryForObject("PRODUCT_ATTR.queryRelationAttrValue",
            categoryAttrValueId);
    if (result > 0) {
      return true;
    }
    return false;
  }

  @Override
  public int updateByRelationId(ProductAttr attr) throws SQLException {
    int rows = sqlMapClient.update("PRODUCT_ATTR.updateByRelationId", attr);
    return rows;
  }
}
