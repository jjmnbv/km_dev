package com.kmzyc.promotion.app.dao.impl;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Repository;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.kmzyc.promotion.app.dao.CouponGrantDAO;
import com.kmzyc.promotion.app.vobject.CouponGrant;
import com.kmzyc.promotion.app.vobject.CouponGrantExample;

@Repository("couponGrantdao")
@SuppressWarnings({"unchecked", "unused"})
public class CouponGrantDAOImpl implements CouponGrantDAO {
  public CouponGrantDAOImpl() {

  }

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * COUPON_GRANT
   * 
   * @ibatorgenerated Thu Aug 22 09:45:29 CST 2013
   */
  @Resource
  private SqlMapClient sqlMapClient;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_GRANT
   * 
   * @ibatorgenerated Thu Aug 22 09:45:29 CST 2013
   */
  public CouponGrantDAOImpl(SqlMapClient sqlMapClient) {
    super();
    this.sqlMapClient = sqlMapClient;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_GRANT
   * 
   * @ibatorgenerated Thu Aug 22 09:45:29 CST 2013
   */
  @Override
  public int countByExample(CouponGrantExample example) throws SQLException {
    Integer count = (Integer) sqlMapClient
        .queryForObject("COUPON_GRANT.ibatorgenerated_countByExample", example);
    return count.intValue();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_GRANT
   * 
   * @ibatorgenerated Thu Aug 22 09:45:29 CST 2013
   */
  @Override
  public int deleteByExample(CouponGrantExample example) throws SQLException {
    int rows = sqlMapClient.delete("COUPON_GRANT.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_GRANT
   * 
   * @ibatorgenerated Thu Aug 22 09:45:29 CST 2013
   */
  @Override
  public void insert(CouponGrant record) throws SQLException {
    sqlMapClient.insert("COUPON_GRANT.ibatorgenerated_insert", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_GRANT
   * 
   * @ibatorgenerated Thu Aug 22 09:45:29 CST 2013
   */
  @Override
  public void insertSelective(CouponGrant record) throws SQLException {
    sqlMapClient.insert("COUPON_GRANT.ibatorgenerated_insertSelective", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_GRANT
   * 
   * @ibatorgenerated Thu Aug 22 09:45:29 CST 2013
   */
  @Override
  public List selectByExample(CouponGrantExample example) throws SQLException {
    List list = sqlMapClient.queryForList("COUPON_GRANT.ibatorgenerated_selectByExample", example);
    return list;
  }

  @Override
  public CouponGrant selectGrantRecord(CouponGrant couponGrant) throws SQLException {
    CouponGrant grant =
        (CouponGrant) sqlMapClient.queryForObject("COUPON_GRANT.selectCouponRecord", couponGrant);
    return grant;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_GRANT
   * 
   * @ibatorgenerated Thu Aug 22 09:45:29 CST 2013
   */
  @Override
  public int updateByExampleSelective(CouponGrant record, CouponGrantExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("COUPON_GRANT.ibatorgenerated_updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_GRANT
   * 
   * @ibatorgenerated Thu Aug 22 09:45:29 CST 2013
   */
  @Override
  public int updateByExample(CouponGrant record, CouponGrantExample example) throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("COUPON_GRANT.ibatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * COUPON_GRANT
   * 
   * @ibatorgenerated Thu Aug 22 09:45:29 CST 2013
   */
  private static class UpdateByExampleParms extends CouponGrantExample {
    private static final long serialVersionUID = 1L;
    private final Object record;

    public UpdateByExampleParms(Object record, CouponGrantExample example) {
      super(example);
      this.record = record;
    }

    public Object getRecord() {
      return record;
    }
  }

  /**
   * 根据客户id，查询所有的客户优惠券信息
   */
  @Override
  public List<CouponGrant> selectCouponGrantByCoustomId(List<Integer> coustomId)
      throws SQLException {
    // CouponGrant example = new CouponGrant();
    CouponGrantExample grantExample = new CouponGrantExample();
    if (coustomId != null && coustomId.size() > 0) {
      grantExample.createCriteria().andCustomIdIn(coustomId);
    }
    List<CouponGrant> couponGrantList =
        sqlMapClient.queryForList("COUPON_GRANT.selectGrantByCoustomId", grantExample);
    return couponGrantList;
  }

  @Override
  public int updateGrantStauts(CouponGrant coupongrant) throws SQLException {
    int rows = sqlMapClient.update("COUPON_GRANT.ibatorgenerated_updateGrantStatus", coupongrant);
    return rows;
  }

  /**
   * 根据传入的天数查询有效的在这些天数之内的
   */
  @Override
  public List<CouponGrant> selectCanUseLeaseDays(int day) throws SQLException {
    Map<String, Object> conditionMap = new HashMap<String, Object>();
    conditionMap.put("remainDay", 7);
    List<CouponGrant> couponList =
        sqlMapClient.queryForList("COUPON_GRANT.selectCanUseLeaseSeven", conditionMap);
    return couponList;
  }

  /**
   * 发放又返回
   */
  @Override
  public Long insertGrant(CouponGrant record) throws SQLException {
    return ((Long) sqlMapClient.insert("COUPON_GRANT.ibatorgenerated_insertSelective", record))
        .longValue();
  }

  @Override
  public CouponGrant selectCouponById(Long couponGrantId) throws SQLException {
    return (CouponGrant) sqlMapClient.queryForObject("COUPON_GRANT.selectCouponById",
        couponGrantId);
  }

  // add by hl 4.29
  @Override
  public int queryAlreadyGrantCouponCount(CouponGrant condition) throws SQLException {
    Integer count = (Integer) sqlMapClient
        .queryForObject("COUPON_GRANT.queryAlreadyGrantCouponCount", condition);
    return count.intValue();
  }

  @Override
  public List<CouponGrant> queryAlreadyGrantCouponList(CouponGrant condition) throws SQLException {
    List<CouponGrant> couponList =
        sqlMapClient.queryForList("COUPON_GRANT.queryAlreadyGrantCouponList", condition);
    return couponList;
  }

  @Override
  public List<CouponGrant> queryCouponGrantTimeOut(CouponGrant cg) throws SQLException {
    return sqlMapClient.queryForList("COUPON_GRANT.couponGrantTimeOut", cg);
  }

  @Override
  public CouponGrant selectCouponGrantById(CouponGrant cg) throws SQLException {
    return (CouponGrant) sqlMapClient.queryForObject("COUPON_GRANT.selectCouponGrantById", cg);
  }

  // add by hl 4.29

  @Override
  // 优惠券激活码验证
  public CouponGrant selectCouponGrantCheck(String activeCode) throws SQLException {
    return (CouponGrant) sqlMapClient
        .queryForObject("COUPON_GRANT.ibatorgenerated_selectCouponGrantCheck", activeCode);
  }

  @Override
  // 修改优惠券发放信息
  public int updateCouponGrant(CouponGrant couponGrant) throws SQLException {
    return sqlMapClient.update("COUPON_GRANT.updateCouponGrant", couponGrant);
  }

  @Override
  public List<CouponGrant> selectCouponGrant(Integer customId) throws SQLException {
    return sqlMapClient.queryForList("COUPON_GRANT.selectCouponGrant", customId);
  }

  /**
   * 查未使用优惠券及优惠券规则（添加渠道过滤）
   * 
   * @throws SQLException
   */
  @Override
  public List<CouponGrant> selectCouponGrantAndCoupon(Integer customId) throws SQLException {
    return sqlMapClient.queryForList("COUPON_GRANT.selectCouponGrantAndCoupon", customId);
  }

  /**
   * 更新未过期的券
   */
  @Override
  public int updateExpriedCoupon() throws SQLException {
    int result = sqlMapClient.update("COUPON_GRANT.updateExpriedCoupon");
    return result;
  }


}
