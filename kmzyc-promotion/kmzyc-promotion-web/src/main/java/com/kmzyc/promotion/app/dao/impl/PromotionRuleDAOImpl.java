package com.kmzyc.promotion.app.dao.impl;

import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.kmzyc.commons.page.Page;
import com.kmzyc.promotion.app.dao.BaseDao;
import com.kmzyc.promotion.app.dao.PromotionRuleDAO;
import com.kmzyc.promotion.app.vobject.PromotionRule;
import com.kmzyc.promotion.app.vobject.PromotionRuleExample;

@Repository("promotionRuleDAO")
@SuppressWarnings({"unchecked", "unused"})
public class PromotionRuleDAOImpl extends BaseDao<PromotionRule> implements PromotionRuleDAO {
    private static final Logger logger = LoggerFactory.getLogger(PromotionRuleDAOImpl.class);
    /**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    @Resource
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    @Override
    public int countByExample(PromotionRuleExample example) throws SQLException {
        // mkw 20150819 add

        // end
        Integer count = (Integer) sqlMapClient
                .queryForObject("PROMOTION_RULE.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    @Override
    public int deleteByExample(PromotionRuleExample example) throws SQLException {
        // mkw 20150819 add

        // end
        int rows = sqlMapClient.delete("PROMOTION_RULE.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    @Override
    public int deleteByPrimaryKey(Long promotionRuleId) throws SQLException {
        // mkw 20150819 add

        // end
        PromotionRule key = new PromotionRule();
        key.setPromotionRuleId(promotionRuleId);
        int rows = sqlMapClient.delete("PROMOTION_RULE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    @Override
    public Object insert(PromotionRule record) throws SQLException {
        // mkw 20150819 add

        // end
        return sqlMapClient.insert("PROMOTION_RULE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    @Override
    public Object insertSelective(PromotionRule record) throws SQLException {
        // mkw 20150819 add

        // end
        return sqlMapClient.insert("PROMOTION_RULE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    @Override
    public List selectByExample(PromotionRuleExample example) throws SQLException {
        // mkw 20150819 add

        // end
        List list = sqlMapClient.queryForList("PROMOTION_RULE.ibatorgenerated_selectByExample",
                example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    @Override
    public PromotionRule selectByPrimaryKey(Long promotionRuleId) throws SQLException {
        // mkw 20150819 add

        // end
        PromotionRule key = new PromotionRule();
        key.setPromotionRuleId(promotionRuleId);
        PromotionRule record = (PromotionRule) sqlMapClient
                .queryForObject("PROMOTION_RULE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    @Override
    public int updateByExampleSelective(PromotionRule record, PromotionRuleExample example)
            throws SQLException {
        // mkw 20150819 add

        // end
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("PROMOTION_RULE.ibatorgenerated_updateByExampleSelective",
                parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    @Override
    public int updateByExample(PromotionRule record, PromotionRuleExample example)
            throws SQLException {
        // mkw 20150819 add

        // end
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("PROMOTION_RULE.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    @Override
    public int updateByPrimaryKeySelective(PromotionRule record) throws SQLException {
        // mkw 20150819 add

        // end
        int rows = sqlMapClient.update("PROMOTION_RULE.ibatorgenerated_updateByPrimaryKeySelective",
                record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    @Override
    public int updateByPrimaryKey(PromotionRule record) throws SQLException {
        // mkw 20150819 add

        // end
        int rows = sqlMapClient.update("PROMOTION_RULE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator. This class corresponds to the database
     * table PROMOTION_RULE
     * 
     * @ibatorgenerated Mon Aug 26 11:15:08 CST 2013
     */
    private static class UpdateByExampleParms extends PromotionRuleExample {
        private final Object record;

        public UpdateByExampleParms(Object record, PromotionRuleExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

    @Override
    public Page selectPageByVo(Page page, PromotionRule record) throws SQLException {
        // mkw 20150819 add

        // end
        if (record == null) {
            record = new PromotionRule();
            // record.setPromotionRuleType((short) 1);
        }
        if (record.getPromotionTypeId() != null && record.getPromotionTypeId() == 0) {
            record.setPromotionTypeId(null);
        }
        int pageIndex = page.getPageNo();
        if (pageIndex == 0)
            pageIndex = 1;
        int pageSize = page.getPageSize();
        int skip = (pageIndex - 1) * pageSize + 1;
        int max = pageSize * pageIndex;
        record.setSkip(skip);
        record.setMax(max);
        int count = this.selectCountByVo("PROMOTION_RULE.getPromotionRuleCount", record);
        List list = sqlMapClient.queryForList("PROMOTION_RULE.searchPageByVo", record);
        page.setRecordCount(count);
        page.setDataList(list);
        return page;
    }

    @Override
    public Integer selectCountByVo(PromotionRule record) throws SQLException {
        // mkw 20150819 add

        // end
        int count = 0;
        if (record.getPromotionRuleId() == null) {
            count = this.selectCountByVo("PROMOTION_RULE.getPromotionRuleCount", record);
        } else {
            count = this.selectCountByVo("PROMOTION_RULE.getPromotionRuleCount2", record);
        }
        return count;
    }

    private Integer selectCountByVo(String sqlId, PromotionRule record) throws SQLException {
        // mkw 20150819 add

        // end
        return (Integer) sqlMapClient.queryForObject(sqlId, record, "the_count");
    }

    @Override
    public Long getCouponId(Long ruleId) throws SQLException {
        // mkw 20150819 add

        // end
        return (Long) sqlMapClient.queryForObject("PROMOTION_RULE.getCouponid", ruleId);
    }

    @Override
    public Long getIncreasePromotionRuleId() {
        // mkw 20150819 add

        // end
        try {
            return (Long) sqlMapClient.queryForObject("PROMOTION_RULE.getIncreasePromotionRuleId");
        } catch (SQLException e) {
            logger.error("getIncreasePromotionRuleId异常：", e);
        }
        return null;
    }

}
