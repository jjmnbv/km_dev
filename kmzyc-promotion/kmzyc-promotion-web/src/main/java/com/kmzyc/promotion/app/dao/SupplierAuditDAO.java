package com.kmzyc.promotion.app.dao;

import java.sql.SQLException;
import java.util.List;

import com.kmzyc.commons.page.Page;
import com.kmzyc.supplier.model.AccountInfo;
import com.kmzyc.supplier.model.MerchantInfo;
import com.kmzyc.supplier.model.MerchantInfoOrSuppliers;
import com.kmzyc.supplier.model.User;
import com.kmzyc.supplier.model.example.MerchantInfoExample;

@SuppressWarnings("unchecked")
public interface SupplierAuditDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table COMMERCIAL_TENANT_BASIC_INFO
     * 
     * @ibatorgenerated Wed Dec 25 11:00:38 CST 2013
     */
    int countByExample(MerchantInfoOrSuppliers example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table COMMERCIAL_TENANT_BASIC_INFO
     * 
     * @ibatorgenerated Wed Dec 25 11:00:38 CST 2013
     */
    int countCouponByExample(MerchantInfoOrSuppliers example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table COMMERCIAL_TENANT_BASIC_INFO
     * 
     * @ibatorgenerated Wed Dec 25 11:00:38 CST 2013
     */
    int deleteByExample(MerchantInfo example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table COMMERCIAL_TENANT_BASIC_INFO
     * 
     * @ibatorgenerated Wed Dec 25 11:00:38 CST 2013
     */
    int deleteByPrimaryKey(Long merchantId) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table COMMERCIAL_TENANT_BASIC_INFO
     * 
     * @ibatorgenerated Wed Dec 25 11:00:38 CST 2013
     */
    void insert(MerchantInfo record) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table COMMERCIAL_TENANT_BASIC_INFO
     * 
     * @ibatorgenerated Wed Dec 25 11:00:38 CST 2013
     */
    Long insertSelective(MerchantInfo record) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table COMMERCIAL_TENANT_BASIC_INFO
     * 
     * @ibatorgenerated Wed Dec 25 11:00:38 CST 2013
     */
    List selectByExample(MerchantInfoOrSuppliers record, Page page) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table COMMERCIAL_TENANT_BASIC_INFO
     * 
     * @ibatorgenerated Wed Dec 25 11:00:38 CST 2013
     */
    MerchantInfo selectByPrimaryKey(Long merchantId) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table COMMERCIAL_TENANT_BASIC_INFO
     * 
     * @ibatorgenerated Wed Dec 25 11:00:38 CST 2013
     */
    int updateByExampleSelective(MerchantInfo record, MerchantInfoExample example)
            throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table COMMERCIAL_TENANT_BASIC_INFO
     * 
     * @ibatorgenerated Wed Dec 25 11:00:38 CST 2013
     */
    int updateByExample(MerchantInfo record, MerchantInfoExample example) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table COMMERCIAL_TENANT_BASIC_INFO
     * 
     * @ibatorgenerated Wed Dec 25 11:00:38 CST 2013
     */
    int updateByPrimaryKeySelective(MerchantInfo record) throws SQLException;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table COMMERCIAL_TENANT_BASIC_INFO
     * 
     * @ibatorgenerated Wed Dec 25 11:00:38 CST 2013
     */
    int updateByPrimaryKey(MerchantInfo record) throws SQLException;

    /**
     * 查询商户和供应商信息
     * 
     * @param record
     * @return
     * @throws SQLException
     */
    MerchantInfoOrSuppliers queryBySupplierId(MerchantInfoOrSuppliers record) throws SQLException;

    /**
     * 根据登录id查询商户信息
     */
    MerchantInfo selectByloginId(MerchantInfo merchant) throws SQLException;

    /**
     * 根据公司名称查询
     * 
     * @return
     */
    public MerchantInfo selectByCompanyName(MerchantInfo merchant) throws SQLException;

    /**
     * 根据用户id修改用户表状态为供应商
     * 
     * @param user
     * @return
     * @throws SQLException
     */
    int updateUserByLonginId(User user) throws SQLException;

    /**
     * 根据用户id修改用户表状态为供应商
     * 
     * @param user
     * @return
     * @throws SQLException
     */
    int updateAccountInfoByLonginId(AccountInfo info) throws SQLException;

    /**
     * 根据用户名查询用户信息
     * 
     * @param userName
     * @return
     * @throws SQLException
     */
    User selectUserByUserName(String userName) throws SQLException;

    /**
     * 根据用户id查询商户信息
     */
    MerchantInfo selectByUserLoginId(MerchantInfo merchant) throws SQLException;

    /**
     * 查询供应商和商户的信息
     * 
     * @return
     * @throws SQLException
     */
    public List<MerchantInfoOrSuppliers> selectSupplierIdAndMerchantName(
            MerchantInfoOrSuppliers record) throws SQLException;

    public List<MerchantInfoOrSuppliers> selectPageSupplierIdAndMerchantName(
            MerchantInfoOrSuppliers record);

    public Integer selectCountSupplierIdAndMerchantName(MerchantInfoOrSuppliers record);

    List<MerchantInfoOrSuppliers> selectCouponSupplierByExample(
            MerchantInfoOrSuppliers suppliersInfo, Page page) throws SQLException;
}
