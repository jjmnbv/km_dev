package com.kmzyc.promotion.app.dao;

import java.sql.SQLException;
import java.util.List;

import com.kmzyc.promotion.app.vobject.Category;
import com.kmzyc.promotion.app.vobject.CategoryExample;

@SuppressWarnings("unchecked")
public interface CategoryDAO {
  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  int countByExample(CategoryExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  int deleteByExample(CategoryExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  int deleteByPrimaryKey(Long categoryId) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  void insert(Category record) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  void insertSelective(Category record) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  List selectByExample(CategoryExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  Category selectByPrimaryKey(Long categoryId) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  int updateByExampleSelective(Category record, CategoryExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  int updateByExample(Category record, CategoryExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  int updateByPrimaryKeySelective(Category record) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  int updateByPrimaryKey(Category record) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  List<Category> queryCategoryList(Category record) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  int deleteCategory(Category category) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table CATEGORY
   * 
   * @ibatorgenerated Wed Jul 17 17:51:35 CST 2013
   */
  List<Category> queryCategoryParentList(Category record) throws SQLException;

  List<Category> queryCategoryParentListOrderByParent(Category record) throws SQLException;

  public List<Category> queryCanUpShelfCategoryList(Category category) throws SQLException;

  String queryMaxCategoryNoByParentId(Long parentId) throws SQLException;

  int queryRepeatName(Category record) throws SQLException;

  /**
   * 查询是否与产品有关联
   * 
   * @param categoryId
   * @return
   * @throws SQLException
   */
  List<String> findIsRelationCateId(Long categoryId) throws SQLException;

  List<Category> findSomePhyCategorys() throws SQLException;

  int relationDelete(Long categoryId) throws SQLException;

  /**
   * 根据三级类目查询出一级类目的id
   * 
   * @param categoryId
   * @return
   * @throws SQLException
   */
  public Category findCategorysId(Long categoryId) throws SQLException;

  /**
   * 批量查询类目
   * 
   * @param categoryIds
   * @return
   * @throws SQLException
   */
  public List<Category> queryBatchCategory(List<Long> categoryIds) throws SQLException;
}
