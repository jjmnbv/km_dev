package com.kmzyc.promotion.app.dao.impl;

import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Repository;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.kmzyc.promotion.app.dao.CouponProductDAO;
import com.kmzyc.promotion.app.vobject.CouponProduct;
import com.kmzyc.promotion.app.vobject.CouponProductExample;

@Repository("couponProductdao")
@SuppressWarnings({"unchecked", "unused"})
public class CouponProductDAOImpl implements CouponProductDAO {

  public CouponProductDAOImpl() {

  }

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  @Resource
  private SqlMapClient sqlMapClient;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  public CouponProductDAOImpl(SqlMapClient sqlMapClient) {
    super();
    this.sqlMapClient = sqlMapClient;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  @Override
  public int countByExample(CouponProductExample example) throws SQLException {
    Integer count =
        (Integer) sqlMapClient.queryForObject("COUPON_PRODUCT.ibatorgenerated_countByExample",
            example);
    return count.intValue();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  @Override
  public int deleteByExample(CouponProductExample example) throws SQLException {
    int rows = sqlMapClient.delete("COUPON_PRODUCT.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  @Override
  public int deleteByPrimaryKey(BigDecimal couponProductId) throws SQLException {
    CouponProduct key = new CouponProduct();
    key.setCouponProductId(couponProductId.longValue());
    int rows = sqlMapClient.delete("COUPON_PRODUCT.ibatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  @Override
  public void insert(CouponProduct record) throws SQLException {
    sqlMapClient.insert("COUPON_PRODUCT.ibatorgenerated_insert", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  @Override
  public void insertSelective(CouponProduct record) throws SQLException {
    sqlMapClient.insert("COUPON_PRODUCT.ibatorgenerated_insertSelective", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  @Override
  public List selectByExample(CouponProductExample example) throws SQLException {
    List list =
        sqlMapClient.queryForList("COUPON_PRODUCT.ibatorgenerated_selectByExample", example);
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  @Override
  public CouponProduct selectByPrimaryKey(BigDecimal couponProductId) throws SQLException {
    CouponProduct key = new CouponProduct();
    key.setCouponProductId(couponProductId.longValue());
    CouponProduct record =
        (CouponProduct) sqlMapClient.queryForObject(
            "COUPON_PRODUCT.ibatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * 根据couponId查找产品List
   */
  @Override
  public List<CouponProduct> selectByCouponId(Long couponId) throws SQLException {
    CouponProduct key = new CouponProduct();
    key.setCouponId(couponId);
    List<CouponProduct> couponProList =
        sqlMapClient.queryForList("COUPON_PRODUCT.ibatorgenerated_selectByCouponId", key);
    return couponProList;
  }

  /**
   * 根据couponId查找类别List
   */
  @Override
  public List<CouponProduct> selectCateByCouponId(Long couponId) throws SQLException {
    CouponProduct key = new CouponProduct();
    key.setCouponId(couponId);
    List<CouponProduct> couponProList =
        sqlMapClient.queryForList("COUPON_PRODUCT.ibatorgenerated_selectCateByCouponId", key);
    return couponProList;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  @Override
  public int updateByExampleSelective(CouponProduct record, CouponProductExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows =
        sqlMapClient.update("COUPON_PRODUCT.ibatorgenerated_updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  @Override
  public int updateByExample(CouponProduct record, CouponProductExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("COUPON_PRODUCT.ibatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  @Override
  public int updateByPrimaryKeySelective(CouponProduct record) throws SQLException {
    int rows =
        sqlMapClient.update("COUPON_PRODUCT.ibatorgenerated_updateByPrimaryKeySelective", record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  @Override
  public int updateByPrimaryKey(CouponProduct record) throws SQLException {
    int rows = sqlMapClient.update("COUPON_PRODUCT.ibatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * COUPON_PRODUCT
   * 
   * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
   */
  private static class UpdateByExampleParms extends CouponProductExample {
    private static final long serialVersionUID = 1L;
    private final Object record;

    public UpdateByExampleParms(Object record, CouponProductExample example) {
      super(example);
      this.record = record;
    }

    public Object getRecord() {
      return record;
    }
  }

  @Override
  public List<CouponProduct> selectCouponProductBySkuId(String skuCode) throws SQLException {
    return sqlMapClient.queryForList("COUPON_PRODUCT.selectCouponProductBySkuId", skuCode);
  }

  @Override
  public List<String> selectRelationByCouponId(Long couponId) throws SQLException {
    return sqlMapClient.queryForList("COUPON_PRODUCT.selectRelationByCouponId", couponId);
  }

  @Override
  public List<String> selectCateRelationByCouponId(Long couponId) throws SQLException {
    return sqlMapClient.queryForList("COUPON_PRODUCT.selectCateRelationByCouponId", couponId);
  }
}
