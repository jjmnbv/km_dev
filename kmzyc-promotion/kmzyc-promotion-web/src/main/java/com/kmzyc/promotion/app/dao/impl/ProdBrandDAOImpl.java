package com.kmzyc.promotion.app.dao.impl;

import java.sql.SQLException;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.kmzyc.promotion.app.dao.BaseDao;
import com.kmzyc.promotion.app.dao.ProdBrandDAO;
import com.kmzyc.promotion.app.vobject.ProdBrand;
import com.kmzyc.promotion.app.vobject.ProdBrandExample;

/**
 * 产品品牌DAO实现类
 * 
 * @author tanyunxing
 * 
 */
@Repository("prodBrandDao")
@SuppressWarnings({"unchecked", "unused"})
public class ProdBrandDAOImpl extends BaseDao implements ProdBrandDAO {

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  public ProdBrandDAOImpl() {
    super();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  @Override
  public int countByExample(ProdBrandExample example) throws SQLException {
    // mkw 20150819 add

    // end
    Integer count =
        (Integer) sqlMapClient.queryForObject("PROD_BRAND.ibatorgenerated_countByExample", example);
    return count.intValue();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  @Override
  public int deleteByExample(ProdBrandExample example) throws SQLException {
    // mkw 20150819 add

    // end
    int rows = sqlMapClient.delete("PROD_BRAND.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  @Override
  public int deleteByPrimaryKey(Long brandId) throws SQLException {
    // mkw 20150819 add

    // end
    ProdBrand key = new ProdBrand();
    key.setBrandId(brandId);
    int rows = sqlMapClient.delete("PROD_BRAND.ibatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  @Override
  public Long insert(ProdBrand record) throws SQLException {
    // mkw 20150819 add

    // end
    return (Long) sqlMapClient.insert("PROD_BRAND.ibatorgenerated_insert", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  @Override
  public Long insertSelective(ProdBrand record) throws SQLException {
    // mkw 20150819 add

    // end
    return (Long) sqlMapClient.insert("PROD_BRAND.ibatorgenerated_insertSelective", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  @Override
  public List selectByExample(ProdBrandExample example, int skip, int max) throws SQLException {
    // mkw 20150819 add

    // end
    List list =
        this.getSqlMapClient().queryForList("PROD_BRAND.ibatorgenerated_selectByExample", example,
            skip, max);
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  @Override
  public ProdBrand selectByPrimaryKey(Long brandId) throws SQLException {
    // mkw 20150819 add

    // end
    ProdBrand key = new ProdBrand();
    key.setBrandId(brandId);
    ProdBrand record =
        (ProdBrand) sqlMapClient.queryForObject("PROD_BRAND.ibatorgenerated_selectByPrimaryKey",
            key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  @Override
  public int updateByExampleSelective(ProdBrand record, ProdBrandExample example)
      throws SQLException {
    // mkw 20150819 add

    // end
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("PROD_BRAND.ibatorgenerated_updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  @Override
  public int updateByExample(ProdBrand record, ProdBrandExample example) throws SQLException {
    // mkw 20150819 add

    // end
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("PROD_BRAND.ibatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  @Override
  public int updateByPrimaryKeySelective(ProdBrand record) throws SQLException {
    // mkw 20150819 add

    // end
    int rows =
        sqlMapClient.update("PROD_BRAND.ibatorgenerated_updateByPrimaryKeySelective", record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  @Override
  public int updateByPrimaryKey(ProdBrand record) throws SQLException {
    // mkw 20150819 add

    // end
    int rows = sqlMapClient.update("PROD_BRAND.ibatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  @Override
  public List<ProdBrand> selectByExample(ProdBrandExample example) throws SQLException {
    // mkw 20150819 add

    // end
    return this.getSqlMapClient().queryForList("PROD_BRAND.ibatorgenerated_selectByExample",
        example);
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * PROD_BRAND
   * 
   * @ibatorgenerated Mon Jul 15 09:14:02 CST 2013
   */
  private static class UpdateByExampleParms extends ProdBrandExample {
    private final Object record;

    public UpdateByExampleParms(Object record, ProdBrandExample example) {
      super(example);
      this.record = record;
    }

    public Object getRecord() {
      return record;
    }
  }

  @Override
  public int deleteByPrimaryKeyBatch(String[] brandIds) throws SQLException {
    // mkw 20150819 add

    // end
    return sqlMapClient.delete("PROD_BRAND.deleteByPrimaryKeyBatch", brandIds);
  }

  @Override
  public String checkProductCounts(Long brandId) throws SQLException {
    // mkw 20150819 add

    // end
    return (String) sqlMapClient.queryForObject("PROD_BRAND.checkProductByBrandId", brandId);
  }

  /**
   * 批量查询品牌
   * 
   * @param bIds
   * @return
   * @throws SQLException
   */
  @Override
  public List<ProdBrand> queryBatchBrand(List<Long> bIds) throws SQLException {
    // mkw 20150819 add

    // end
    return sqlMapClient.queryForList("PROD_BRAND.SQL_QUERY_BATCH_BRAND_BY_IDS", bIds);
  }
}
