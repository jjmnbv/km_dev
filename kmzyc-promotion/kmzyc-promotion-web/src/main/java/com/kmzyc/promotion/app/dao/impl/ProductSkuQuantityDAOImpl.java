package com.kmzyc.promotion.app.dao.impl;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Repository;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.kmzyc.promotion.app.dao.BaseDao;
import com.kmzyc.promotion.app.dao.ProductSkuQuantityDAO;
import com.kmzyc.promotion.app.vobject.ProductSkuQuantity;
import com.kmzyc.promotion.app.vobject.ProductSkuQuantityExample;

@Repository("productSkuQuantityDAO")
@SuppressWarnings({"unchecked", "unused"})
public class ProductSkuQuantityDAOImpl extends BaseDao implements ProductSkuQuantityDAO {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * PRODUCT_SKU_QUANTITY
   * 
   * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
   */
  @Resource
  private SqlMapClient sqlMapClient;

  @Override
  public int countByExample(ProductSkuQuantityExample example) throws SQLException {
    // mkw 20150819 add

    // end
    Integer count =
        (Integer) sqlMapClient.queryForObject(
            "PRODUCT_SKU_QUANTITY.ibatorgenerated_countByExample", example);
    return count.intValue();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_SKU_QUANTITY
   * 
   * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
   */
  @Override
  public int deleteByExample(ProductSkuQuantityExample example) throws SQLException {
    // mkw 20150819 add

    // end
    int rows = sqlMapClient.delete("PRODUCT_SKU_QUANTITY.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_SKU_QUANTITY
   * 
   * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
   */
  @Override
  public int deleteByPrimaryKey(Long productSkuQuantityId) throws SQLException {
    // mkw 20150819 add

    // end
    ProductSkuQuantity key = new ProductSkuQuantity();
    key.setProductSkuQuantityId(productSkuQuantityId);
    int rows = sqlMapClient.delete("PRODUCT_SKU_QUANTITY.ibatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_SKU_QUANTITY
   * 
   * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
   */
  @Override
  public void insert(ProductSkuQuantity record) throws SQLException {
    // mkw 20150819 add

    // end
    sqlMapClient.insert("PRODUCT_SKU_QUANTITY.ibatorgenerated_insert", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_SKU_QUANTITY
   * 
   * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
   */
  @Override
  public void insertSelective(ProductSkuQuantity record) throws SQLException {
    // mkw 20150819 add

    // end
    sqlMapClient.insert("PRODUCT_SKU_QUANTITY.ibatorgenerated_insertSelective", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_SKU_QUANTITY
   * 
   * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
   */
  @Override
  public List selectByExample(ProductSkuQuantityExample example) throws SQLException {
    // mkw 20150819 add

    // end
    List list =
        sqlMapClient.queryForList("PRODUCT_SKU_QUANTITY.ibatorgenerated_selectByExample", example);
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_SKU_QUANTITY
   * 
   * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
   */
  @Override
  public ProductSkuQuantity selectByPrimaryKey(Long productSkuQuantityId) throws SQLException {
    // mkw 20150819 add

    // end
    ProductSkuQuantity key = new ProductSkuQuantity();
    key.setProductSkuQuantityId(productSkuQuantityId);
    ProductSkuQuantity record =
        (ProductSkuQuantity) sqlMapClient.queryForObject(
            "PRODUCT_SKU_QUANTITY.ibatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_SKU_QUANTITY
   * 
   * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
   */
  @Override
  public int updateByExampleSelective(ProductSkuQuantity record, ProductSkuQuantityExample example)
      throws SQLException {
    // mkw 20150819 add

    // end
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows =
        sqlMapClient.update("PRODUCT_SKU_QUANTITY.ibatorgenerated_updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_SKU_QUANTITY
   * 
   * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
   */
  @Override
  public int updateByExample(ProductSkuQuantity record, ProductSkuQuantityExample example)
      throws SQLException {
    // mkw 20150819 add

    // end
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("PRODUCT_SKU_QUANTITY.ibatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_SKU_QUANTITY
   * 
   * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
   */
  @Override
  public int updateByPrimaryKeySelective(ProductSkuQuantity record) throws SQLException {
    // mkw 20150819 add

    // end
    int rows =
        sqlMapClient.update("PRODUCT_SKU_QUANTITY.ibatorgenerated_updateByPrimaryKeySelective",
            record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PRODUCT_SKU_QUANTITY
   * 
   * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
   */
  @Override
  public int updateByPrimaryKey(ProductSkuQuantity record) throws SQLException {
    // mkw 20150819 add

    // end
    int rows =
        sqlMapClient.update("PRODUCT_SKU_QUANTITY.ibatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * PRODUCT_SKU_QUANTITY
   * 
   * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
   */
  private static class UpdateByExampleParms extends ProductSkuQuantityExample {
    private final Object record;

    public UpdateByExampleParms(Object record, ProductSkuQuantityExample example) {
      super(example);
      this.record = record;
    }

    public Object getRecord() {
      return record;
    }
  }

  @Override
  public List selectByExample(ProductSkuQuantityExample example, int pageNo, int pageSize)
      throws SQLException {
    // mkw 20150819 add

    // end
    List list =
        sqlMapClient.queryForList("PRODUCT_SKU_QUANTITY.ibatorgenerated_selectByExample",
            (pageNo - 1) * pageSize, pageSize);
    return list;
  }

  @Override
  public int batchUpdateSaleQuantityBySkuCode(List<ProductSkuQuantity> quantityObject)
      throws SQLException {
    // mkw 20150819 add

    // end
    return batchUpdateData("PRODUCT_SKU_QUANTITY.batchUpdateSaleQuantityBySkuCode", quantityObject);

  }

  @Override
  public int countAll() throws SQLException {
    // mkw 20150819 add

    // end
    return (Integer) sqlMapClient.queryForObject("PRODUCT_SKU_QUANTITY.countAllRecord");
  }

  @Override
  public int batchAddSaleQuantity(List<ProductSkuQuantity> quantityList) throws SQLException {
    // mkw 20150819 add

    // end
    return batchInsertDataNt(quantityList, "PRODUCT_SKU_QUANTITY.insertNewProduct_SKU_QUANTITY");

  }

  @Override
  public Long findMaxProductQuantityId() throws SQLException {
    // mkw 20150819 add

    // end
    return (Long) sqlMapClient.queryForObject("PRODUCT_SKU_QUANTITY.findMaxProductSkuQuantity");

  }

  @Override
  public Map<Long, ProductSkuQuantity> getLastSaleSkuIdMap(List<Long> skuIdList) throws Exception {
    // mkw 20150819 add

    // end
    Map<Long, ProductSkuQuantity> map =
        sqlMapClient.queryForMap("PRODUCT_SKU_QUANTITY.getLastSaleSkuIdMap", skuIdList,
            "productSkuId");
    return map;
  }
}
