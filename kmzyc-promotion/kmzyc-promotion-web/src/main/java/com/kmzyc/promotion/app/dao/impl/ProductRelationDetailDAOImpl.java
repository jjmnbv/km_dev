package com.kmzyc.promotion.app.dao.impl;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.kmzyc.commons.page.Page;
import com.kmzyc.promotion.app.dao.BaseDao;
import com.kmzyc.promotion.app.dao.ProductRelationDetailDAO;
import com.kmzyc.promotion.app.vobject.ProductRelationDetail;
import com.kmzyc.promotion.app.vobject.ProductRelationDetailExample;

@Component("productRelationDetailDAO")
@SuppressWarnings({"unchecked", "unused"})
public class ProductRelationDetailDAOImpl extends BaseDao implements ProductRelationDetailDAO {
    /**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    @Resource
    private SqlMapClient sqlMapClient;

    public ProductRelationDetailDAOImpl() {
        super();
    }

    public ProductRelationDetailDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    @Override
    public int countByExample(ProductRelationDetailExample example) throws SQLException {
        Integer count = (Integer) sqlMapClient
                .queryForObject("PRODUCT_RELATION_DETAIL.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    @Override
    public int deleteByExample(ProductRelationDetailExample example) throws SQLException {
        int rows = sqlMapClient.delete("PRODUCT_RELATION_DETAIL.ibatorgenerated_deleteByExample",
                example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    @Override
    public int deleteByPrimaryKey(Long relationDetailId) throws SQLException {
        ProductRelationDetail key = new ProductRelationDetail();
        key.setRelationDetailId(relationDetailId);
        int rows = sqlMapClient.delete("PRODUCT_RELATION_DETAIL.ibatorgenerated_deleteByPrimaryKey",
                key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    @Override
    public void insert(ProductRelationDetail record) throws SQLException {
        sqlMapClient.insert("PRODUCT_RELATION_DETAIL.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    @Override
    public void insertSelective(ProductRelationDetail record) throws SQLException {
        sqlMapClient.insert("PRODUCT_RELATION_DETAIL.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    @Override
    public List selectByExample(ProductRelationDetailExample example) throws SQLException {
        List list = sqlMapClient
                .queryForList("PRODUCT_RELATION_DETAIL.ibatorgenerated_selectByExample", example);
        return list;
    }

    @Override
    public List selectByExample(ProductRelationDetailExample example, Page page)
            throws SQLException {
        List list =
                sqlMapClient.queryForList("PRODUCT_RELATION_DETAIL.ibatorgenerated_selectByExample",
                        example, (page.getPageNo() - 1) * page.getPageSize(), page.getPageSize());
        return list;

    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    @Override
    public ProductRelationDetail selectByPrimaryKey(Long relationDetailId) throws SQLException {
        ProductRelationDetail key = new ProductRelationDetail();
        key.setRelationDetailId(relationDetailId);
        ProductRelationDetail record = (ProductRelationDetail) sqlMapClient
                .queryForObject("PRODUCT_RELATION_DETAIL.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    @Override
    public int updateByExampleSelective(ProductRelationDetail record,
            ProductRelationDetailExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient
                .update("PRODUCT_RELATION_DETAIL.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    @Override
    public int updateByExample(ProductRelationDetail record, ProductRelationDetailExample example)
            throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("PRODUCT_RELATION_DETAIL.ibatorgenerated_updateByExample",
                parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    @Override
    public int updateByPrimaryKeySelective(ProductRelationDetail record) throws SQLException {
        // mkw 20150819 add

        // end
        int rows = sqlMapClient.update(
                "PRODUCT_RELATION_DETAIL.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    @Override
    public int updateByPrimaryKey(ProductRelationDetail record) throws SQLException {
        // mkw 20150819 add

        // end
        int rows = sqlMapClient.update("PRODUCT_RELATION_DETAIL.ibatorgenerated_updateByPrimaryKey",
                record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator. This class corresponds to the database
     * table PRODUCT_RELATION_DETAIL
     * 
     * @ibatorgenerated Sat Oct 12 17:16:34 CST 2013
     */
    private static class UpdateByExampleParms extends ProductRelationDetailExample {
        private final Object record;

        public UpdateByExampleParms(Object record, ProductRelationDetailExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

    @Override
    public int batchSaveProductRelationDetail(List<ProductRelationDetail> details)
            throws SQLException {

        // mkw 20150819 add

        // end
        int i = super.batchInsertDataNt(details,
                "PRODUCT_RELATION_DETAIL.ibatorgenerated_insertSelective");

        return i;

    }

    @Override
    public int batchDelProductRelationDetailByRelationId(List<Long> relationId)
            throws SQLException {

        // mkw 20150819 add

        // end
        return batchDeleteByDataPrimaryKey(relationId,
                "PRODUCT_RELATION_DETAIL.deleteProductDeatilIdByRelationId");

    }

    @Override
    public Map<Long, ProductRelationDetail> getProductRelationDetailByRelationId(Long relationId)
            throws SQLException {

        // mkw 20150819 add

        // end
        return sqlMapClient.queryForMap(
                "PRODUCT_RELATION_DETAIL.queryProductRelationMapByRelationId", relationId,
                "relationSkuId");

    }

    @Override
    public int batchDelProductRelationDetailByRelationDetailId(List<Long> relationDetailId)
            throws SQLException {
        // mkw 20150819 add

        // end
        return batchDeleteByDataPrimaryKey(relationDetailId,
                "PRODUCT_RELATION_DETAIL.deleteProductDetailByRelationId");
    }

    @Override
    public int batchSaveProductRealtionDetail(List<ProductRelationDetail> details)
            throws SQLException {
        // mkw 20150819 add

        // end
        batchInsertDataNt(details, "PRODUCT_RELATION_DETAIL.ibatorgenerated_insertSelective");
        return 0;
    }

    @Override
    public Map<Long, ProductRelationDetail> selectProductRelationDetailMapByRelationId(
            Long relationId) throws SQLException {
        // mkw 20150819 add

        // end
        Map<Long, ProductRelationDetail> map = sqlMapClient.queryForMap(
                "PRODUCT_RELATION_DETAIL.queryProductRelationMapByRelationId", relationId,
                "relationSkuId");
        return map;

    }

}
