package com.kmzyc.promotion.app.dao;

import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.List;

import com.kmzyc.promotion.app.vobject.Category;
import com.kmzyc.supplier.model.SuppliersAvailableCategorys;
import com.kmzyc.supplier.model.example.SuppliersAvailableCategorysExample;

@SuppressWarnings("unchecked")
public interface SuppliersAvailableCategorysDAO {
	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table SUPPLIERS_AVAILABLE_CATEGORYS
	 * 
	 * @ibatorgenerated Fri Jan 17 15:19:31 CST 2014
	 */
	int countByExample(SuppliersAvailableCategorysExample example) throws SQLException;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table SUPPLIERS_AVAILABLE_CATEGORYS
	 * 
	 * @ibatorgenerated Fri Jan 17 15:19:31 CST 2014
	 */
	int deleteByExample(SuppliersAvailableCategorysExample example) throws SQLException;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table SUPPLIERS_AVAILABLE_CATEGORYS
	 * 
	 * @ibatorgenerated Fri Jan 17 15:19:31 CST 2014
	 */
	int deleteByPrimaryKey(BigDecimal sacId) throws SQLException;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table SUPPLIERS_AVAILABLE_CATEGORYS
	 * 
	 * @ibatorgenerated Fri Jan 17 15:19:31 CST 2014
	 */
	void insert(SuppliersAvailableCategorys record) throws SQLException;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table SUPPLIERS_AVAILABLE_CATEGORYS
	 * 
	 * @ibatorgenerated Fri Jan 17 15:19:31 CST 2014
	 */
	void insertSelective(SuppliersAvailableCategorys record) throws SQLException;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table SUPPLIERS_AVAILABLE_CATEGORYS
	 * 
	 * @ibatorgenerated Fri Jan 17 15:19:31 CST 2014
	 */
	List selectByExample(SuppliersAvailableCategorysExample example) throws SQLException;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table SUPPLIERS_AVAILABLE_CATEGORYS
	 * 
	 * @ibatorgenerated Fri Jan 17 15:19:31 CST 2014
	 */
	SuppliersAvailableCategorys selectByPrimaryKey(BigDecimal sacId) throws SQLException;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table SUPPLIERS_AVAILABLE_CATEGORYS
	 * 
	 * @ibatorgenerated Fri Jan 17 15:19:31 CST 2014
	 */
	int updateByExampleSelective(SuppliersAvailableCategorys record, SuppliersAvailableCategorysExample example)
			throws SQLException;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table SUPPLIERS_AVAILABLE_CATEGORYS
	 * 
	 * @ibatorgenerated Fri Jan 17 15:19:31 CST 2014
	 */
	int updateByExample(SuppliersAvailableCategorys record, SuppliersAvailableCategorysExample example)
			throws SQLException;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table SUPPLIERS_AVAILABLE_CATEGORYS
	 * 
	 * @ibatorgenerated Fri Jan 17 15:19:31 CST 2014
	 */
	int updateByPrimaryKeySelective(SuppliersAvailableCategorys record) throws SQLException;

	/**
	 * This method was generated by Apache iBATIS ibator. This method
	 * corresponds to the database table SUPPLIERS_AVAILABLE_CATEGORYS
	 * 
	 * @ibatorgenerated Fri Jan 17 15:19:31 CST 2014
	 */
	int updateByPrimaryKey(SuppliersAvailableCategorys record) throws SQLException;

	/**
	 * 根据供应商id查询供应商类目
	 * 
	 * @return
	 * @throws SQLException
	 */
	List<SuppliersAvailableCategorys> findSupplierCategorys(SuppliersAvailableCategorys cate) throws SQLException;

	int deleteSuppCretGory(SuppliersAvailableCategorys gorys) throws SQLException;

	/**
	 * 根据供应商id,类目id查询佣金比例
	 * 
	 * @param cate
	 * @return
	 */
	SuppliersAvailableCategorys commissionRatioBySuppIdAadCategoryId(SuppliersAvailableCategorys cate)
			throws SQLException;

	/**
	 * 申请供应商选择类目显示
	 * 
	 * @param record
	 * @return
	 * @throws SQLException
	 */
	List<Category> applySuppliersCategorys(Long supplierId) throws SQLException;

	/**
	 * 根据供应商id和类目id修改信息
	 * 
	 * @param record
	 * @return
	 * @throws SQLException
	 */
	public int updateBySuppIdAndCateId(SuppliersAvailableCategorys record) throws SQLException;
}