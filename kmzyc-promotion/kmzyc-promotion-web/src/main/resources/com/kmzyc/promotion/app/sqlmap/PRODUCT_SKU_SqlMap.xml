<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="PRODUCT_SKU">
	<typeAlias alias="Product" type="com.kmzyc.promotion.app.vobject.Product" />
	<typeAlias alias="ProductSku" type="com.kmzyc.promotion.app.vobject.ProductSku" />
	<resultMap id="ibatorgenerated_CountResult" class="com.kmzyc.promotion.sys.model.SysModelUtil">
		<result column="the_count" property="theCount" jdbcType="DECIMAL" />
	</resultMap>
	<resultMap id="searchPageByVoMap" class="com.kmzyc.promotion.app.vobject.ProductSku">
		<result column="PRODUCT_SKU_ID" property="productSkuId"
			jdbcType="DECIMAL" />
		<result column="PRODUCT_SKU_CODE" property="productSkuCode"
			jdbcType="VARCHAR" />
		<result column="PROCUCT_NAME" property="productName" jdbcType="VARCHAR" />
		<result column="product_title" property="productTitle"
			jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="CHAR" />
		<result column="UNIT_WEIGHT" property="unitWeight" jdbcType="DECIMAL" />
		<result column="MARK_PRICE" property="markPrice" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="skuIdAndCode" class="com.kmzyc.promotion.app.vobject.ProductSku">
		<result column="PRODUCT_SKU_ID" property="productSkuId"
			jdbcType="LONG" />
		<result column="PRODUCT_ID" property="productId" jdbcType="DECIMAL" />
		<result column="PRODUCT_SKU_CODE" property="productSkuCode"
			jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="productSkuCode" class="com.kmzyc.promotion.app.vobject.ProductSku">
		<result column="PRODUCT_SKU_CODE" property="productSkuCode"
			jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="ibatorgenerated_BaseResultMap" class="com.kmzyc.promotion.app.vobject.ProductSku">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Thu Aug 01 14:37:11 
			CST 2013. -->
		<result column="PRODUCT_SKU_ID" property="productSkuId"
			jdbcType="DECIMAL" />
		<result column="PRODUCT_ID" property="productId" jdbcType="DECIMAL" />
		<result column="PRICE" property="price" jdbcType="DOUBLE" />
		<result column="PRODUCT_SKU_CODE" property="productSkuCode"
			jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="CHAR" />
		<result column="UNIT_WEIGHT" property="unitWeight" jdbcType="DECIMAL" />
		<result column="MARK_PRICE" property="markPrice" jdbcType="DECIMAL" />
		<result column="COST_PRICE" property="costPrice" jdbcType="DECIMAL" />
	</resultMap>

	<resultMap id="ibatorgenerated_BaseResultMapForIntroduce"
		class="com.kmzyc.promotion.app.vobject.ProductSku">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Thu Aug 01 14:37:11 
			CST 2013. -->
		<result column="PRODUCT_SKU_ID" property="productSkuId"
			jdbcType="DECIMAL" />
		<result column="PRODUCT_ID" property="productId" jdbcType="DECIMAL" />
		<result column="PRICE" property="price" jdbcType="DOUBLE" />
		<result column="PRODUCT_SKU_CODE" property="productSkuCode"
			jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="CHAR" />
		<result column="UNIT_WEIGHT" property="unitWeight" jdbcType="DECIMAL" />
		<result column="MARK_PRICE" property="markPrice" jdbcType="DECIMAL" />
		<result column="COST_PRICE" property="costPrice" jdbcType="DECIMAL" />
		<result column="SKU_INTRODUCE" property="skuIntroduce"
			jdbcType="VARCHAR" />
		<result column="SKU_INTRODUCELAZY" property="skuIntroduceLazy"
			jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="ibatorgenerated_BaseResultMap2" class="com.kmzyc.promotion.app.vobject.ProductSku">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Thu Aug 01 14:37:11 
			CST 2013. -->
		<result column="PRODUCT_SKU_ID" property="productSkuId"
			jdbcType="DECIMAL" />
		<result column="PRODUCT_ID" property="productId" jdbcType="DECIMAL" />
		<result column="PRODUCT_ID" property="product"
			select="PRODUCT_SKU.loadProductById" />
		<result column="PRICE" property="price" jdbcType="DOUBLE" />
		<result column="PRODUCT_SKU_CODE" property="productSkuCode"
			jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="CHAR" />
		<result column="UNIT_WEIGHT" property="unitWeight" jdbcType="DECIMAL" />
		<result column="MARK_PRICE" property="markPrice" jdbcType="DECIMAL" />
	</resultMap>

	<!-- SKU查找产品信息 -->
	<resultMap id="ProductResultMap" class="com.kmzyc.promotion.app.vobject.Product">
		<result column="PRODUCT_ID" property="id" jdbcType="DECIMAL" />
		<result column="CATEGORY_ID" property="categoryId" jdbcType="DECIMAL" />
		<result column="PROCUCT_NAME" property="name" jdbcType="VARCHAR" />
		<result column="PRODUCT_DESC" property="productDesc" jdbcType="VARCHAR" />
		<result column="PACK_LISTING" property="packListing" jdbcType="VARCHAR" />
		<result column="PRODUCT_TITLE" property="productTitle"
			jdbcType="VARCHAR" />
		<result column="KEYWORD" property="keyword" jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="VARCHAR" />
		<result column="CREATE_USER" property="createUser" jdbcType="INTEGER" />
		<result column="CREATE_USER_NAME" property="createUserName"
			jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="Date" />
		<result column="PRODUCTHOT" property="productHot" jdbcType="DECIMAL" />
		<result column="ARCHIVE_TIME" property="archiveTime" jdbcType="Date" />
		<result column="CHECK_USER" property="checkUser" jdbcType="INTEGER" />
		<result column="CHECK_USER_NAME" property="checkUserName"
			jdbcType="VARCHAR" />
		<result column="CHECK_TIME" property="checkTime" jdbcType="Date" />
		<result column="MODIF_TIME" property="modifTime" jdbcType="Date" />
		<result column="SHOP_CODE" property="shopCode" jdbcType="VARCHAR" />
		<result column="MODIF_USER" property="modifUser" jdbcType="INTEGER" />
		<result column="UP_TIME" property="upTime" jdbcType="Date" />
		<result column="MARKET_PRICE" property="marketPrice" jdbcType="BigDecimal" />
		<result column="COST_PRICE" property="costPrice" jdbcType="BigDecimal" />
		<result column="PRODUCT_NO" property="productNo" jdbcType="VARCHAR" />
		<result column="BRAND_ID" property="brandId" jdbcType="DECIMAL" />
		<result column="BRAND_NAME" property="brandName" jdbcType="VARCHAR" />
		<result column="APPROVAL_TYPE" property="approvalType"
			jdbcType="VARCHAR" />
		<result column="APPROVAL_NO" property="approvalNo" jdbcType="VARCHAR" />
		<result column="CATEGORY_NAME" property="categoryName"
			jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="selectPresellProductByVoMap" class="com.kmzyc.promotion.app.vobject.ProductSku">
		<result column="PRODUCT_SKU_ID" property="productSkuId" jdbcType="DECIMAL" />
		<result column="PRODUCT_SKU_CODE" property="productSkuCode" jdbcType="VARCHAR" />
		<result column="PROCUCT_NAME" property="productName" jdbcType="VARCHAR" />
		<result column="product_title" property="productTitle" jdbcType="VARCHAR" />
		<result column="UNIT_WEIGHT" property="unitWeight" jdbcType="DECIMAL" />
		<result column="MARK_PRICE" property="markPrice" jdbcType="DECIMAL" />
		<result column="brand_name" property="brandName" jdbcType="VARCHAR" />
		<result column="upStatus" property="upStatus" jdbcType="VARCHAR" />
		<result column="product_no" property="productNo" jdbcType="VARCHAR" />
		<result column="corporateName" property="corporateName" jdbcType="VARCHAR" />
	</resultMap>


	<sql id="ibatorgenerated_Example_Where_Clause">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Thu Aug 01 14:37:11 
			CST 2013. -->
		<iterate property="oredCriteria" conjunction="or" prepend="where"
			removeFirstPrepend="iterate">
			<isEqual property="oredCriteria[].valid" compareValue="true">
				(
				<iterate prepend="and" property="oredCriteria[].criteriaWithoutValue"
					conjunction="and">
					$oredCriteria[].criteriaWithoutValue[]$
				</iterate>
				<iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue"
					conjunction="and">
					$oredCriteria[].criteriaWithSingleValue[].condition$
					#oredCriteria[].criteriaWithSingleValue[].value#
				</iterate>
				<iterate prepend="and" property="oredCriteria[].criteriaWithListValue"
					conjunction="and">
					$oredCriteria[].criteriaWithListValue[].condition$
					<iterate property="oredCriteria[].criteriaWithListValue[].values"
						open="(" close=")" conjunction=",">
						#oredCriteria[].criteriaWithListValue[].values[]#
					</iterate>
				</iterate>
				<iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue"
					conjunction="and">
					$oredCriteria[].criteriaWithBetweenValue[].condition$
					#oredCriteria[].criteriaWithBetweenValue[].values[0]# and
					#oredCriteria[].criteriaWithBetweenValue[].values[1]#
				</iterate>
				)
			</isEqual>
		</iterate>
	</sql>
	<select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMapForIntroduce"
		parameterClass="com.kmzyc.promotion.app.vobject.ProductSkuExample">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Thu Aug 01 14:37:11 
			CST 2013. -->
		select PRODUCT_SKU_ID, PRODUCT_ID, PRICE,
		PRODUCT_SKU_CODE,STATUS,UNIT_WEIGHT,MARK_PRICE,COST_PRICE,SKU_INTRODUCE,SKU_INTRODUCELAZY

		from PRODUCT_SKU
		<isParameterPresent>
			<include refid="PRODUCT_SKU.ibatorgenerated_Example_Where_Clause" />
			<isNotNull property="orderByClause">
				order by $orderByClause$
			</isNotNull>
		</isParameterPresent>
	</select>
	<select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_BaseResultMapForIntroduce"
		parameterClass="com.kmzyc.promotion.app.vobject.ProductSku">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Tue Aug 13 14:15:11 
			CST 2013. -->
		select PRODUCT_SKU_ID, PRODUCT_ID, PRICE,
		PRODUCT_SKU_CODE,STATUS,UNIT_WEIGHT,MARK_PRICE,COST_PRICE,SKU_INTRODUCE,SKU_INTRODUCELAZY
		from PRODUCT_SKU
		where PRODUCT_SKU_ID = #productSkuId:DECIMAL#
	</select>
	<delete id="ibatorgenerated_deleteByExample" parameterClass="com.kmzyc.promotion.app.vobject.ProductSkuExample">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Thu Aug 01 14:37:11 
			CST 2013. -->
		delete from PRODUCT_SKU
		<include refid="PRODUCT_SKU.ibatorgenerated_Example_Where_Clause" />
	</delete>
	<delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.kmzyc.promotion.app.vobject.ProductSku">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Sun Sep 29 17:47:38 
			CST 2013. -->
		delete from PRODUCT_SKU
		where PRODUCT_SKU_ID = #productSkuId:DECIMAL#
	</delete>
	<insert id="ibatorgenerated_insert" parameterClass="com.kmzyc.promotion.app.vobject.ProductSku">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Thu Aug 01 14:37:11 
			CST 2013. -->
		<selectKey resultClass="java.lang.Long" keyProperty="productSkuId">
			select
			SEQ_APP_PRODUCT_SKU.nextval from dual
		</selectKey>
		insert into PRODUCT_SKU (PRODUCT_SKU_ID, PRODUCT_ID, PRICE,
		PRODUCT_SKU_CODE,STATUS,UNIT_WEIGHT,MARK_PRICE)
		values
		(#productSkuId:DECIMAL#, #productId:DECIMAL#, #price:DOUBLE#,
		#productSkuCode:VARCHAR#,#status:CHAR#, #unitWeight:DECIMAL#,
		#markPrice:DECIMAL#)
	</insert>
	<insert id="ibatorgenerated_insertSelective" parameterClass="com.kmzyc.promotion.app.vobject.ProductSku">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Thu Aug 01 14:37:11 
			CST 2013. -->
		insert into PRODUCT_SKU
		<dynamic prepend="(">
			<isNotNull prepend="," property="productSkuId">
				PRODUCT_SKU_ID
			</isNotNull>
			<isNotNull prepend="," property="productId">
				PRODUCT_ID
			</isNotNull>
			<isNotNull prepend="," property="price">
				PRICE
			</isNotNull>
			<isNotNull prepend="," property="productSkuCode">
				PRODUCT_SKU_CODE
			</isNotNull>
			<isNotNull prepend="," property="status">
				STATUS
			</isNotNull>
			<isNotNull prepend="," property="unitWeight">
				UNIT_WEIGHT
			</isNotNull>
			<isNotNull prepend="," property="markPrice">
				MARK_PRICE
			</isNotNull>
			)
		</dynamic>
		values
		<dynamic prepend="(">
			<isNotNull prepend="," property="productSkuId">
				#productSkuId:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="productId">
				#productId:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="price">
				#price:DOUBLE#
			</isNotNull>
			<isNotNull prepend="," property="productSkuCode">
				#productSkuCode:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="status">
				#status:CHAR#
			</isNotNull>
			<isNotNull prepend="," property="unitWeight">
				#unitWeight:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="markPrice">
				#markPrice:DECIMAL#
			</isNotNull>
			)
		</dynamic>
	</insert>
	<select id="ibatorgenerated_countByExample" parameterClass="com.kmzyc.promotion.app.vobject.ProductSkuExample"
		resultClass="java.lang.Integer">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Thu Aug 01 14:37:11 
			CST 2013. -->
		select count(*) from PRODUCT_SKU
		<include refid="PRODUCT_SKU.ibatorgenerated_Example_Where_Clause" />
	</select>
	<update id="ibatorgenerated_updateByExampleSelective">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Thu Aug 01 14:37:11 
			CST 2013. -->
		update PRODUCT_SKU
		<dynamic prepend="set">
			<isNotNull prepend="," property="record.productSkuId">
				PRODUCT_SKU_ID =
				#record.productSkuId:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="record.productId">
				PRODUCT_ID =
				#record.productId:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="record.price">
				PRICE =
				#record.price:DOUBLE#
			</isNotNull>
			<isNotNull prepend="," property="record.productSkuCode">
				PRODUCT_SKU_CODE =
				#record.productSkuCode:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="record.status">
				STATUS =
				#record.status:CHAR#
			</isNotNull>
			<isNotNull prepend="," property="record.unitWeight">
				UNIT_WEIGHT =
				#record.unitWeight:DECIMAL#
			</isNotNull>
			<isNotNull prepend="," property="record.markPrice">
				MARK_PRICE =
				#record.markPrice:DECIMAL#
			</isNotNull>
		</dynamic>
		<isParameterPresent>
			<include refid="PRODUCT_SKU.ibatorgenerated_Example_Where_Clause" />
		</isParameterPresent>
	</update>
	<update id="ibatorgenerated_updateByExample">
		<!-- WARNING - This element is automatically generated by Apache iBATIS 
			ibator, do not modify. This element was generated on Thu Aug 01 14:37:11 
			CST 2013. -->
		update PRODUCT_SKU
		set PRODUCT_SKU_ID = #record.productSkuId:DECIMAL#,
		PRODUCT_ID = #record.productId:DECIMAL#,
		PRICE = #record.price:DOUBLE#,
		PRODUCT_SKU_CODE = #record.productSkuCode:VARCHAR#,
		STATUS =
		#record.status:CHAR#,
		UNIT_WEIGHT = #record.unitWeight:DECIMAL#,
		MARK_PRICE = #record.markPrice:DECIMAL#
		<isParameterPresent>
			<include refid="PRODUCT_SKU.ibatorgenerated_Example_Where_Clause" />
		</isParameterPresent>
	</update>

	<!-- 根据SKUId，查找产品信息 -->
	<resultMap id="SKU_resultMap" class="com.kmzyc.promotion.app.vobject.ProductAndSku">
		<result column="PRODUCT_ID" property="productId" jdbcType="DECIMAL" />
		<result column="CATEGORY_ID" property="categoryId" jdbcType="DECIMAL" />
		<result column="PROCUCT_NAME" property="name" jdbcType="VARCHAR" />
		<result column="PRODUCT_DESC" property="productDesc" jdbcType="VARCHAR" />
		<result column="PACK_LISTING" property="packListing" jdbcType="VARCHAR" />
		<result column="PRODUCT_TITLE" property="productTitle"
			jdbcType="VARCHAR" />
		<result column="KEYWORD" property="keyword" jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="VARCHAR" />
		<result column="PRODUCTHOT" property="productHot" jdbcType="DECIMAL" />
		<result column="CHECK_USER" property="checkUser" jdbcType="INTEGER" />
		<result column="CHECK_USER_NAME" property="checkUserName"
			jdbcType="VARCHAR" />
		<result column="CHECK_TIME" property="checkTime" jdbcType="Date" />
		<result column="MODIF_TIME" property="modifTime" jdbcType="Date" />
		<result column="SHOP_CODE" property="shopCode" jdbcType="VARCHAR" />
		<result column="MODIF_USER" property="modifUser" jdbcType="INTEGER" />
		<result column="UP_TIME" property="upTime" jdbcType="Date" />
		<result column="MARKET_PRICE" property="marketPrice" jdbcType="BigDecimal" />
		<result column="COST_PRICE" property="costPrice" jdbcType="BigDecimal" />
		<result column="PRICE" property="price" jdbcType="BigDecimal" />
		<result column="PRODUCT_NO" property="productNo" jdbcType="VARCHAR" />
		<result column="BRAND_ID" property="brandId" jdbcType="DECIMAL" />
		<result column="BRAND_NAME" property="brandName" jdbcType="VARCHAR" />
		<result column="APPROVAL_TYPE" property="approvalType"
			jdbcType="VARCHAR" />
		<result column="APPROVAL_NO" property="approvalNo" jdbcType="VARCHAR" />
		<result column="CATEGORY_NAME" property="categoryName"
			jdbcType="VARCHAR" />
		<result column="PRODUCT_SKU_ID" property="productSkuId"
			jdbcType="DECIMAL" />
		<result column="PRODUCT_SKU_CODE" property="productSkuCode"
			jdbcType="VARCHAR" />
	</resultMap>

	<select id="findProductInfoBySkuCode" parameterClass="java.lang.String"
		resultMap="SKU_resultMap">
		SELECT
		p.PRODUCT_ID,p.CATEGORY_ID,p.PRODUCT_DESC,p.PROCUCT_NAME,p.PACK_LISTING,p.PRODUCT_TITLE
		,p.KEYWORD,p.STATUS,p.PRODUCTHOT,p.CHECK_USER,p.CHECK_USER_NAME,p.CHECK_TIME,p.MODIF_TIME,p.SHOP_CODE
		,p.MODIF_USER,p.UP_TIME,p.MARKET_PRICE,p.COST_PRICE,s.PRICE,
		p.PRODUCT_NO,p.BRAND_ID,p.BRAND_NAME
		,p.APPROVAL_TYPE,p.APPROVAL_NO,p.CATEGORY_NAME,s.PRODUCT_SKU_ID,s.PRODUCT_SKU_CODE
		FROM PRODUCT_SKU s,productmain p
		where s.PRODUCT_ID = p.PRODUCT_ID AND
		s.PRODUCT_SKU_CODE = #productSkuCode#
	</select>



	<select id="findProductInfos" parameterClass="java.util.ArrayList"
		resultMap="SKU_resultMap">
		SELECT
		p.PRODUCT_ID,p.CATEGORY_ID,p.PRODUCT_DESC,p.PROCUCT_NAME,p.PACK_LISTING,p.PRODUCT_TITLE
		,p.KEYWORD,p.STATUS,p.PRODUCTHOT,p.CHECK_USER,p.CHECK_USER_NAME,p.CHECK_TIME,p.MODIF_TIME,p.SHOP_CODE
		,p.MODIF_USER,p.UP_TIME,p.MARKET_PRICE,p.COST_PRICE,s.PRICE,
		p.PRODUCT_NO,p.BRAND_ID,p.BRAND_NAME
		,p.APPROVAL_TYPE,p.APPROVAL_NO,p.CATEGORY_NAME,s.PRODUCT_SKU_ID,s.PRODUCT_SKU_CODE
		FROM PRODUCT_SKU s,productmain p
		where s.PRODUCT_ID = p.PRODUCT_ID and
		(p.STATUS = 3 or p.STATUS = 4 )
		<dynamic prepend="AND">
			<iterate open="(" close=")" conjunction=" OR ">
				PRODUCT_SKU_CODE =
				#productSkuCodeList[]#
			</iterate>
		</dynamic>
	</select>

	<select id="findProductListBySkuCodeList" parameterClass="java.util.ArrayList"
		resultMap="SKU_resultMap">
		SELECT
		p.PRODUCT_ID,p.CATEGORY_ID,p.PRODUCT_DESC,p.PROCUCT_NAME,p.PACK_LISTING,p.PRODUCT_TITLE
		,p.KEYWORD,p.STATUS,p.PRODUCTHOT,p.CHECK_USER,p.CHECK_USER_NAME,p.CHECK_TIME,p.MODIF_TIME,p.SHOP_CODE
		,p.MODIF_USER,p.UP_TIME,p.MARKET_PRICE,p.COST_PRICE,s.PRICE,
		p.PRODUCT_NO,p.BRAND_ID,p.BRAND_NAME
		,p.APPROVAL_TYPE,p.APPROVAL_NO,p.CATEGORY_NAME,s.PRODUCT_SKU_ID,s.PRODUCT_SKU_CODE
		FROM PRODUCT_SKU s,productmain p
		where s.PRODUCT_ID = p.PRODUCT_ID
		AND
		s.PRODUCT_SKU_CODE IN
		<iterate open="(" close=")" conjunction=",">
			#productSkuCodeList[].skuCode#
		</iterate>
	</select>

	<select id="findProductSkuBySkuCodes" parameterClass="java.util.ArrayList"
		resultMap="ibatorgenerated_BaseResultMap2">
		SELECT * FROM PRODUCT_SKU WHERE 1=1
		<dynamic prepend="AND">
			<iterate open="(" close=")" conjunction=" OR ">
				PRODUCT_SKU_CODE =
				#productSkuCodeList[]#
			</iterate>
		</dynamic>
	</select>

	<select id="loadProductById" parameterClass="java.lang.Long"
		resultMap="ProductResultMap">
		select * from productmain where product_id = #value#
	</select>

	<select id="findProductInfoBySkuId" parameterClass="java.lang.Long"
		resultMap="SKU_resultMap">
		SELECT
		p.PRODUCT_ID,p.CATEGORY_ID,p.PRODUCT_DESC,p.PROCUCT_NAME,p.PACK_LISTING,p.PRODUCT_TITLE
		,p.KEYWORD,p.STATUS,p.PRODUCTHOT,p.CHECK_USER,p.CHECK_USER_NAME,p.CHECK_TIME,p.MODIF_TIME,p.SHOP_CODE
		,p.MODIF_USER,p.UP_TIME,p.MARKET_PRICE,p.COST_PRICE,p.PRODUCT_NO,p.BRAND_ID,p.BRAND_NAME
		,p.APPROVAL_TYPE,p.APPROVAL_NO,p.CATEGORY_NAME,s.PRODUCT_SKU_ID,s.PRODUCT_SKU_CODE,s.price
		FROM PRODUCT_SKU s join productmain p on s.PRODUCT_ID = p.PRODUCT_ID
		where s.PRODUCT_SKU_ID = #productSkuId#
	</select>


	<update id="updatePriceByPrimaryKey" parameterClass="com.kmzyc.promotion.app.vobject.ProductSku">
		update
		PRODUCT_SKU
		set PRICE = #price:DOUBLE#,MARK_PRICE = #markPrice:DOUBLE#
		where PRODUCT_SKU_ID = #productSkuId:DECIMAL#
	</update>

	<update id="updateWeightByPrimaryKey" parameterClass="com.kmzyc.promotion.app.vobject.ProductSku">
		update
		PRODUCT_SKU
		set UNIT_WEIGHT = #unitWeight:DOUBLE#
		where PRODUCT_SKU_ID =
		#productSkuId:DECIMAL#
	</update>

	<!-- **************** search page by vo **************** -->
	<select id="searchPageByVo" resultMap="searchPageByVoMap"
		parameterClass="com.kmzyc.promotion.app.vobject.ProductSku">
		select PROCUCT_NAME, PRODUCT_SKU_CODE,
		PRODUCT_SKU_ID,STATUS,UNIT_WEIGHT,MARK_PRICE,product_title
		FROM (
		select ROW_NUMBER() OVER(order by PRODUCT_SKU_ID desc) as
		view_row_number,
		PROCUCT_NAME,
		PRODUCT_SKU_CODE,
		PRODUCT_SKU_ID,sku.STATUS,sku.UNIT_WEIGHT,sku.MARK_PRICE
		,p.product_title
		from PRODUCT_SKU sku join PRODUCTMAIN p on
		sku.product_id = p.product_id
		left join suppliers_info sup on
		TO_CHAR(supplier_id) = p.shop_code
		where p.STATUS in (3,4)
		<dynamic prepend="and">
			<isNotEmpty prepend="and" property="mCategoryId">
				CATEGORY_ID in (select
				CATEGORY_ID from CATEGORYS where PARENT_ID =
				#mCategoryId# )
			</isNotEmpty>
			<isNotEmpty prepend="and" property="bCategoryId">
				CATEGORY_ID in (select
				sc.CATEGORY_ID from categorys sc
				inner join categorys mc on
				sc.parent_id=mc.category_id
				inner join categorys bc on
				mc.parent_id=bc.category_id
				where bc.category_id = #bCategoryId# )
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productSkuId">
				PRODUCT_SKU_ID =
				#ProductSkuId:DECIMAL#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productSkuCode">
				PRODUCT_SKU_CODE like
				'%$productSkuCode$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productName">
				PROCUCT_NAME like
				'%$productName$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productTitle">
				p.product_title like
				'%$productTitle$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="categoryId">
				category_id =
				#categoryId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="brandId">
				brand_id = #brandId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="product.shopCode">
				p.SHOP_CODE =
				#product.shopCode#
			</isNotEmpty>
			<!-- suppliers_info 里的 supplier_id字段？ -->
			<isEqual compareValue="3" prepend="and" property="product.suppliterType">
				(sup.SUPPLIER_TYPE = 3 or sup.SUPPLIER_TYPE = 1 or p.SHOP_CODE =
				'1')
			</isEqual>
		</dynamic>
		)
		WHERE view_row_number between #skip# and #max#
	</select>


	<!-- **************** search user's roleList by vo **************** -->
	<select id="getProducSkuCount" parameterClass="com.kmzyc.promotion.app.vobject.ProductSku"
		resultMap="ibatorgenerated_CountResult">
		select count(1) the_count from PRODUCT_SKU sku join PRODUCTMAIN p on
		sku.product_id = p.product_id
		left join suppliers_info sup on
		TO_CHAR(supplier_id) = p.shop_code
		where p.STATUS in (3,4)
		<dynamic prepend="and">
			<isNotEmpty prepend="and" property="mCategoryId">
				CATEGORY_ID in (select CATEGORY_ID from CATEGORYS where PARENT_ID =
				#mCategoryId# )
			</isNotEmpty>
			<isNotEmpty prepend="and" property="bCategoryId">
				CATEGORY_ID in (select sc.CATEGORY_ID from categorys sc
				inner join categorys mc on sc.parent_id=mc.category_id
				inner join categorys bc on mc.parent_id=bc.category_id
				where bc.category_id = #bCategoryId# )
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productSkuId">
				PRODUCT_SKU_ID =
				#ProductSkuId:DECIMAL#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productSkuCode">
				PRODUCT_SKU_CODE like
				'%$productSkuCode$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productName">
				PROCUCT_NAME like
				'%$productName$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productTitle">
				PRODUCT_TITLE like
				'%$productTitle$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="categoryId">
				category_id =
				#categoryId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="brandId">
				brand_id = #brandId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="product.shopCode">
				p.SHOP_CODE =
				#product.shopCode#
			</isNotEmpty>
			<!-- suppliers_info 里的 supplier_id字段？ -->
			<isEqual compareValue="3" prepend="and" property="product.suppliterType">
				(sup.SUPPLIER_TYPE = 3 or sup.SUPPLIER_TYPE = 1 or p.SHOP_CODE =
				'1')
			</isEqual>
		</dynamic>
	</select>


	<select id="getSkuIdAndCodeMap" parameterClass="java.util.ArrayList"
		resultMap="skuIdAndCode">
		select s.product_sku_id,s.product_sku_code,s.product_id from
		product_sku s
		where s.product_sku_id in
		<iterate open="(" close=")" conjunction=" , ">
			#[]#
		</iterate>
	</select>




	<select id="selectSkuBySkuCode" parameterClass="com.kmzyc.promotion.app.vobject.ProductSku"
		resultMap="ibatorgenerated_BaseResultMap">
		select PRODUCT_SKU_ID, PRODUCT_ID, PRICE,
		PRODUCT_SKU_CODE,STATUS,UNIT_WEIGHT,MARK_PRICE,COST_PRICE
		from
		PRODUCT_SKU where product_sku_code =#productSkuCode# and status=1
	</select>

	<!-- 根据产品ID集合，查询其所有SKUID集合 -->
	<select id="selectSkuIdsByProductIdList" resultClass="java.lang.Long"
		parameterClass="java.util.ArrayList">
		select PRODUCT_SKU_ID from PRODUCT_SKU WHERE 1=1
		<dynamic prepend="AND">
			<iterate open="(" close=")" conjunction=" OR ">
				PRODUCT_ID =
				#productIdList[]#
			</iterate>
		</dynamic>
	</select>


	<select id="findMaxSkuCodeByCateCode" resultClass="java.lang.String"
		parameterClass="java.lang.String">
		select max(t.product_sku_code) from PRODUCT_SKU t where
		t.product_sku_code
		like '$cateCode$__%'
	</select>

	<update id="updateSkuStatus" parameterClass="java.lang.Long">
		update PRODUCT_SKU
		set STATUS = 0 where PRODUCT_SKU_ID = #productSkuId#
	</update>



	<!-- 获取产品全国价 -->
	<select id="SQL_QUERY_PRODUCT_BASIC_PRICE" parameterClass="java.lang.Long"
		resultClass="com.kmzyc.promotion.app.vobject.ProductPrice">
	<![CDATA[
		select drp.area_price basicPrice,drp.suggest_retail_price suggestPrice
		  from directional_release_price drp
		 where drp.audit_status = 1
		   and drp.is_valid = 1
		   and drp.area_id = 1
		   and drp.sku_id = #skuId:DECIMAL#
	]]>
	</select>

	<!-- 获取产品价格 -->
	<select id="SQL_QUERY_PRODUCT_PRICE_BY_AREA" parameterClass="java.util.Map"
		resultClass="com.kmzyc.promotion.app.vobject.ProductPrice">
	<![CDATA[
		select rs.basicPrice basicPrice,
		       rs.suggestPrice suggestPrice,
		       (select nvl(rsi.areaPrice,
		                   nvl(rsi.cityPrice, nvl(rsi.provincePrice, null))) areaPrice
		          from (select max(decode(drp.area_id, c.area, drp.area_price)) areaPrice，max(decode(drp.area_id, c.city, drp.area_price)) cityPrice,
		                       max(decode(drp.area_id, c.province, drp.area_price)) provincePrice
		                  from directional_release_price           drp,
		                       (select ci.province, ci.city, ci.area
                          from commercial_tenant_basic_info ci
                         inner join login_rose_rel lrr
                            on (ci.n_commercial_tenant_id =
                               lrr.n_commercial_id)
                         where lrr.status = 3
                           and lrr.is_valid = 1
                           and lrr.n_login_id = #uid:DECIMAL#) c
		                 where drp.audit_status = 1
		                   and drp.is_valid = 1
		                   and (drp.area_id = c.province or drp.area_id = c.city or
		                       drp.area_id = c.area)
		                   and drp.sku_id =  #skuId:DECIMAL#
		                 group by drp.sku_id) rsi) areaPrice,
		       (select apd.agree_price
		          from agreement_price_detail apd
		         where exists (select 1
		                  from agreement_price ap
		                 where ap.audit_status = 1
		                   and ap.is_valid = 1
		                   and ap.customer_id = #uid:DECIMAL#
		                   and ap.agreement_id = apd.agreement_id)
		           and apd.sku_id =  #skuId:DECIMAL#) agreePrice
		  from dual,
		       (select drp.area_price           basicPrice,
		               drp.suggest_retail_price suggestPrice
		          from directional_release_price drp
		         where drp.audit_status = 1
		           and drp.is_valid = 1
		           and drp.area_id = 1
		           and drp.sku_id =  #skuId:DECIMAL#) rs
	]]>
	</select>

	<!-- 批量获取产品价格 -->
	<select id="SQL_QUERY_BATCH_PRODUCT_PRICE" parameterClass="java.util.Map"
		resultClass="com.kmzyc.promotion.app.vobject.ProductPrice">
	<![CDATA[
		select rs.skuId,
		       max(suggestPrice) suggestPrice,
		       max(basicPrice) basicPrice,
		       max(areaPrice) areaPrice,
		       max(agreePrice) agreePrice
		  from (select rs1.skuId,
		               rs1.suggestPrice,
		               rs1.basicPrice,
		               0                areaPrice,
		               0                agreePrice
		          from (select drp.sku_id               skuId,
		                       drp.area_price           basicPrice,
		                       drp.suggest_retail_price suggestPrice
		                  from directional_release_price drp
		                 where drp.audit_status = 1
		                   and drp.is_valid = 1
		                   and drp.area_id = 1
		                   and drp.sku_id in 
					
		]]>
		<iterate property="skuIds" open="(" close=")" conjunction=",">  
						<![CDATA[#skuIds[]#]]>
		</iterate>
		<![CDATA[			
					) rs1
		        union all
		        select rs2.sku_id skuId,
		               0             suggestPrice,
		               0             basicPrice,
				       nvl(rs2.areaPrice, nvl(rs2.cityPrice, nvl(rs2.provincePrice, null))) areaPrice,
				       0             agreePrice
				  from (select drp.sku_id,
				               max(decode(drp.area_id, c.area, drp.area_price)) areaPrice，max(decode(drp.area_id, c.city, drp.area_price)) cityPrice,
				               max(decode(drp.area_id, c.province, drp.area_price)) provincePrice
				          from directional_release_price           drp,
				               (select ci.province, ci.city, ci.area
                          from commercial_tenant_basic_info ci
                         inner join login_rose_rel lrr
                            on (ci.n_commercial_tenant_id =
                               lrr.n_commercial_id)
                         where lrr.status = 3
                           and lrr.is_valid = 1
                           and lrr.n_login_id = #uid:DECIMAL#) c
				         where drp.audit_status = 1
				           and drp.is_valid = 1
				           and (drp.area_id = c.province or drp.area_id = c.city or
				               drp.area_id = c.area)
				           and drp.sku_id in 
		]]>
		<iterate property="skuIds" open="(" close=")" conjunction=",">  
						<![CDATA[#skuIds[]#]]>
		</iterate>
		<![CDATA[
					 group by drp.sku_id) rs2
		        union all
		        select rs3.skuId,
		               0              suggestPrice,
		               0              basicPrice,
		               0              areaPrice,
		               rs3.agreePrice
		          from (select apd.sku_id skuId, apd.agree_price agreePrice
		                  from agreement_price_detail apd inner join agreement_price ap
		                  on (ap.agreement_id = apd.agreement_id)
		                 where ap.audit_status = 1
		                           and ap.is_valid = 1
		                           and ap.customer_id = #uid:DECIMAL#
		                   and apd.sku_id in 
		]]>
		<iterate property="skuIds" open="(" close=")" conjunction=",">  
						<![CDATA[#skuIds[]#]]>
		</iterate>
		<![CDATA[
				) rs3) rs
		 group by skuId
		]]>
	</select>

	<!-- 获取产品全国价 -->
	<select id="SQL_QUERY_BATCH_PRODUCT_BASIC_PRICE" parameterClass="java.util.List"
		resultClass="com.kmzyc.promotion.app.vobject.ProductPrice">
	<![CDATA[
		select drp.sku_id               skuId,
		       drp.area_price           basicPrice,
		       drp.suggest_retail_price suggestPrice
		  from directional_release_price drp
		 where drp.audit_status = 1
		   and drp.is_valid = 1
		   and drp.area_id = 1
		   and drp.sku_id in
	]]>
		<iterate open="(" close=")" conjunction=",">  
		<![CDATA[#[]#]]>
		</iterate>
	</select>

	<!-- 批量查询产品价格 -->
	<select id="SQL_QUERY_BATCH_PRICE" parameterClass="java.util.List"
		resultClass="com.kmzyc.promotion.app.vobject.ProductPrice">
	<![CDATA[
		select ps.product_sku_id skuId, ps.price finalPrice
		  from product_sku ps
		 where ps.product_sku_id in
	]]>
		<iterate open="(" close=")" conjunction=",">  
		<![CDATA[#[]#]]>
		</iterate>
	</select>

	<!-- 批量获取sku信息 -->
	<select id="SQL_QUERY_BATCH_PRODUCT_SKU" parameterClass="java.util.List"
		resultClass="com.kmzyc.promotion.app.vobject.ProductSku">
		select product_sku_id productSkuId,
		product_id productId,
		price price,
		product_sku_code productSkuCode,
		status status,
		unit_weight unitWeight,
		mark_price markPrice,
		cost_price costPrice,
		sku_introduce skuIntroduce,
		sku_introducelazy skuIntroduceLazy
		from product_sku ps
		where
		ps.product_sku_id in
		<iterate open="(" close=")" conjunction=",">  
			<![CDATA[#[]#]]>
		</iterate>
	</select>

	<!-- 批量获取sku信息 -->
	<select id="SQL_QUERY_BATCH_PRODUCT_AND_SKU" parameterClass="java.util.List"
		resultClass="com.kmzyc.promotion.app.vobject.ProductAndSku">
		select p.product_id productId,
		p.category_id categoryId,
		p.product_desc
		productDesc,
		p.procuct_name name,
		p.pack_listing packListing,
		p.product_title productTitle,
		p.keyword keyword,
		p.status status,
		p.producthot productHot,
		p.check_user checkUser,
		p.check_user_name
		checkUserName,
		p.check_time checkTime,
		p.modif_time modifTime,
		p.shop_code shopCode,
		p.modif_user modifUser,
		p.up_time upTime,
		p.market_price marketPrice,
		p.cost_price costPrice,
		p.product_no productNo,
		p.brand_id brandId,
		p.brand_name brandName,
		p.approval_type approvalType,
		p.approval_no approvalNo,
		p.category_name
		categoryName,
		s.product_sku_id productSkuId,
		s.product_sku_code
		productSkuCode,
		s.price price
		from product_sku s
		join productmain p
		on
		s.product_id = p.product_id
		where s.product_sku_id in
		<iterate open="(" close=")" conjunction=",">  
			<![CDATA[#[]#]]>
		</iterate>
	</select>

	<!-- 批量查询商品信息 -->
	<select id="SQL_PRODUCT_LIST" parameterClass="java.util.Map"
		resultClass="java.util.HashMap">
	<![CDATA[
		select s.product_id productID,
		       s.product_sku_id productSkuId,
		       s.product_sku_code productSkuCode,
		       s.unit_weight unitWeight,
		       nvl(s.price, 0) price,
		       nvl(s.price, 0) finalPrice,
		       s.cost_price costPrice,
		       s.mark_price marketPrice,
		       s.pv_value pvalue,
		       nvl(s.freight, 0) freight,
		       to_number(s.free_status) freeStatus,
		       erp.erp_pro_code erpProCode,
		       erp.sys_code erpSysCode,
		       (select erpi.erp_pro_code
		          from product_erp_relation erpi
		         where erpi.product_sku_id = s.product_sku_id
		           and erpi.sys_code = 'JXC') jxcCode,
		       s.cost_income_ratio costIncomeRatio,
		       s.cost_income_ratio costIncomeMoney,
		       s.status skuStatus,
		       m.status productStatus,
		       m.product_title title,
		       m.procuct_name name,
		       m.product_desc productDesc,
		       m.product_no productNo,
		       i.img_path imagePath,
		       m.shop_code supplierCode,
		       m.shop_code sellerId,
		       m.category_id categoryId,
		       m.brand_id brandId,
		       m.brand_name brandName,
		       0 credits,
		       '' batchNo,
		       nvl(m.product_type, 0) productType,
		       nvl((select smi.shop_name
		             from shop_main smi
		            where smi.audit_status = 2
		              and smi.supplier_id = si.supplier_id),
		           (select ctbi.corporate_name
		              from commercial_tenant_basic_info ctbi
		             where ctbi.n_commercial_tenant_id = si.merchant_id)) shopName,
		       (select max(st.stock_quality - st.order_quality) productStockSum
		          from product_stock st
		         where st.sku_attribute_id = s.product_sku_id
		           and st.stock_quality > 0
		           and st.order_quality >= 0) stockCount,
		       si.supplier_type supplierType,
		       (select wmsys.wm_concat(vsa.category_attr_value)
		          from view_sku_attr vsa
		         where vsa.product_sku_id = s.product_sku_id) skuAttrValue
		  from product_sku s
		 inner join productmain m
		    on (m.product_id = s.product_id)
		 inner join suppliers_info si
		    on (si.supplier_id = to_number(m.shop_code))
		  left join product_image i
		    on (i.sku_id = s.product_sku_id and i.is_default = 0)
		  left join product_erp_relation erp
		    on (s.product_sku_id = erp.product_sku_id and erp.sys_code <> 'JXC')
		 where s.product_sku_id in
		 ]]>
		<iterate open="(" close=")" conjunction="," property="skuIds">
			#skuIds[]#
		</iterate>
	</select>
	
	<select id="selecPresellProductByVoCount" parameterClass="com.kmzyc.promotion.app.vobject.ProductSku"
		resultMap="ibatorgenerated_CountResult">
		select count(1) the_count  
		   from PRODUCT_SKU                         sku,
		        PRODUCTMAIN                         p,
		        suppliers_info                      sup,
		        commercial_tenant_basic_info f,
		        prod_brand pb
		  where sku.product_id = p.product_id
		    and TO_CHAR(sup.supplier_id) = p.shop_code
		    and sup.merchant_id = f.n_commercial_tenant_id(+)
		    and p.brand_id=pb.brand_id
		    and not exists
		  (select 1
		           from promotion_presell         presell,
		                promotion_presell_product presellpdt
		          where presell.presell_id = presellpdt.presell_id
		            and presellpdt.product_sku_id = sku.product_sku_id
		            and presell.audit_status = 1
		            and presell.presell_status != 3
		            and sysdate between presell.deposit_start_time and
		                presell.finalpay_end_time)
		    and not exists
				  (select 1
				           from activity_info           ai,
				                activity_supplier_entry ase,
				                activity_sku            asku
				          where ai.activity_id = ase.activity_id
				            and ase.supplier_entry_id = asku.supplier_entry_id
				            and asku.product_sku_id = sku.product_sku_id
				            and ai.activity_end_time >= sysdate
				            and ai.activity_status not in (0, 1, 7, 8)
				            and ai.audit_status = 1
				            and ase.entry_status = 2
				            and ase.audit_status = 1
				            and asku.activity_sku_type = 1
				            and asku.audit_status = 1)
		    and p.STATUS in (3, 4, 5)
		    and sup.status = 3
		    and sku.status = 1
		<dynamic prepend="and">
			<isNotEmpty prepend="and" property="mCategoryId">
				CATEGORY_ID in (select CATEGORY_ID from CATEGORYS where PARENT_ID =
				#mCategoryId# )
			</isNotEmpty>
			<isNotEmpty prepend="and" property="bCategoryId">
				CATEGORY_ID in (select sc.CATEGORY_ID from categorys sc
				inner join categorys mc on sc.parent_id=mc.category_id
				inner join categorys bc on mc.parent_id=bc.category_id
				where bc.category_id = #bCategoryId# )
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productSkuId">
				PRODUCT_SKU_ID =
				#ProductSkuId:DECIMAL#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productSkuCode">
				PRODUCT_SKU_CODE like
				'%$productSkuCode$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productName">
				PROCUCT_NAME like
				'%$productName$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productTitle">
				PRODUCT_TITLE like
				'%$productTitle$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="categoryId">
				category_id =
				#categoryId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="brandId">
				brand_id = #brandId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="product.shopCode">
				p.SHOP_CODE =
				#product.shopCode#
			</isNotEmpty>
			<isEqual compareValue="1" prepend="and" property="product.suppliterType">
				sup.supplier_type in (1,3)
			</isEqual>
		</dynamic>
	</select>
	
	<select id="selectPresellProductByVo" resultMap="selectPresellProductByVoMap"
		parameterClass="com.kmzyc.promotion.app.vobject.ProductSku">
		 select PROCUCT_NAME,
	          PRODUCT_SKU_CODE,
	          PRODUCT_SKU_ID,
	          UNIT_WEIGHT,
	          MARK_PRICE,
	          product_title,
	          brand_name,
	          upStatus,
	          product_no,
	          corporate_name corporateName
	     FROM (select ROW_NUMBER() OVER(order by PRODUCT_SKU_ID desc) as view_row_number,
	                  PROCUCT_NAME,
	                  PRODUCT_SKU_CODE,
	                  PRODUCT_SKU_ID,
	                  sku.UNIT_WEIGHT,
	                  sku.MARK_PRICE,
	                  p.product_title,
	                  pb.brand_name,
	                  p.status upStatus,
	                  p.product_no,
	                  decode(sup.supplier_type,1,'康美自营代销',3,'康美自营代销',2, f.corporate_name) corporate_name
	             from PRODUCT_SKU sku, PRODUCTMAIN p, suppliers_info sup, commercial_tenant_basic_info f,prod_brand pb
	            where sku.product_id = p.product_id
	              and TO_CHAR(supplier_id) = p.shop_code
	              and sup.merchant_id=f.n_commercial_tenant_id(+)
	              and p.brand_id=pb.brand_id
	              and not exists
				 (select 1
				          from promotion_presell         presell,
				               promotion_presell_product presellpdt
				         where presell.presell_id = presellpdt.presell_id
				           and presellpdt.product_sku_id = sku.product_sku_id
				           and presell.audit_status = 1
				           and presell.presell_status != 3
				           and sysdate between presell.deposit_start_time and
				               presell.finalpay_end_time)
				   and not exists
				  (select 1
				           from activity_info           ai,
				                activity_supplier_entry ase,
				                activity_sku            asku
				          where ai.activity_id = ase.activity_id
				            and ase.supplier_entry_id = asku.supplier_entry_id
				            and asku.product_sku_id = sku.product_sku_id
				            and ai.activity_end_time >= sysdate
				            and ai.activity_status not in (0, 1, 7, 8)
				            and ai.audit_status = 1
				            and ase.entry_status = 2
				            and ase.audit_status = 1
				            and asku.activity_sku_type = 1
				            and asku.audit_status = 1)
	              and p.STATUS in (3, 4, 5)
	              and sup.status = 3
	              and sku.status = 1
		<dynamic prepend="and">
			<isNotEmpty prepend="and" property="mCategoryId">
				CATEGORY_ID in (select
				CATEGORY_ID from CATEGORYS where PARENT_ID =
				#mCategoryId# )
			</isNotEmpty>
			<isNotEmpty prepend="and" property="bCategoryId">
				CATEGORY_ID in (select
				sc.CATEGORY_ID from categorys sc
				inner join categorys mc on
				sc.parent_id=mc.category_id
				inner join categorys bc on
				mc.parent_id=bc.category_id
				where bc.category_id = #bCategoryId# )
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productSkuId">
				PRODUCT_SKU_ID =
				#ProductSkuId:DECIMAL#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productSkuCode">
				PRODUCT_SKU_CODE like
				'%$productSkuCode$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productName">
				PROCUCT_NAME like
				'%$productName$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="productTitle">
				p.product_title like
				'%$productTitle$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="categoryId">
				category_id =
				#categoryId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="brandId">
				brand_id = #brandId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="product.shopCode">
				p.SHOP_CODE =
				#product.shopCode#
			</isNotEmpty>
			<isEqual compareValue="1" prepend="and" property="product.suppliterType">
				sup.supplier_type in (1,3)
			</isEqual>
		</dynamic>
		)
		WHERE view_row_number between #skip# and #max#
	</select>
</sqlMap>