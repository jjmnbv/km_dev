<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<context:component-scan base-package="com.kmzyc"/>

	<bean id="propertyConfigurer" class="com.kmzyc.zkconfig.ZKPropertyPlaceholderConfigurer">
	   <constructor-arg ref="zkClient"/>
	   <property name="zkPaths">
	       <list>
	          <value>/kmconfig/commons/jdbc.properties</value>
	          <value>/kmconfig/commons/redis.properties</value>
	          <value>/kmconfig/commons/mq.properties</value>
			  <value>/kmconfig/commons/dubbo.properties</value>
	          <value>/kmconfig/km-smsmail/messageSendConfig.properties</value>
	       </list>
	    </property>
	</bean>
	<bean id="zkClient" class="com.kmzyc.zkconfig.CuratorFrameworkFactoryBean"/>

	<bean id="dataSourceCustomer" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${driverClassName}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${username}"/>
		<property name="password" value="${password}"/>
		<property name="maxPoolSize" value="${maxPoolSize}"/>
		<property name="minPoolSize" value="${minPoolSize}"/>
		<property name="maxIdleTime" value="${maxIdleTime}"/>
		<property name="acquireIncrement" value="${acquireIncrement}"/>
		<property name="maxStatements" value="${maxStatements}"/>
		<property name="initialPoolSize" value="${initialPoolSize}"/>
		<property name="idleConnectionTestPeriod" value="${idleConnectionTestPeriod}"/>
		<property name="acquireRetryAttempts" value="${acquireRetryAttempts}"/>
		<property name="breakAfterAcquireFailure" value="${breakAfterAcquireFailure}"/>
		<property name="testConnectionOnCheckout" value="${testConnectionOnCheckout}"/>
	</bean>


	<!--<bean id="dynamicDataSource" class="com.km.framework.persistence.util.DynamicDataSource" >-->
	    <!--&lt;!&ndash; 通过key-value的形式来关联数据源 &ndash;&gt;-->
	    <!--<property name="targetDataSources">-->
	        <!--<map>-->
	          <!--&lt;!&ndash;   <entry value-ref="dataSource" key="dataSource"></entry>    &ndash;&gt;-->
	            <!--<entry value-ref="dataSourceCustomer" key="dataSourceCustomer"></entry>-->
	        <!--</map>-->
	    <!--</property>-->
	    <!--<property name="defaultTargetDataSource" ref="dataSourceCustomer" />-->
	<!--</bean>-->

	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation">
			<value>classpath:ibatis/SqlMapConfig.xml</value>
		</property>
		<property name="dataSource">
			<ref local="dataSourceCustomer" />
		</property>
	</bean>
	
	<!-- 配置JdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSourceCustomer" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceCustomer" />
	</bean>

    <!-- Activates @Transactional for DefaultImageDatabase -->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <bean id="keyWordsFilter" class="com.kmzyc.mframework.filter.KeyWordsFilter"></bean>
</beans>
