<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="CarProduct" >


  <resultMap id="ibatorgenerated_BaseResultMap" class="com.kmzyc.supplier.model.SuppliersInfo" >
    <result column="SUPPLIER_ID" property="supplierId" jdbcType="DECIMAL" />
    <result column="MERCHANT_ID" property="merchantId" jdbcType="DECIMAL" />
    <result column="SALE_PRODUCT_DESCRIBE" property="saleProductDescribe" jdbcType="VARCHAR" />
    <result column="SETTLEMENT_CYCLE" property="settlementCycle" jdbcType="DECIMAL" />
    <result column="SETTLEMENT_WAY" property="settlementWay" jdbcType="DECIMAL" />
    <result column="SUPPLIER_TYPE" property="supplierType" jdbcType="DECIMAL" />
    <result column="STATUS" property="status" jdbcType="DECIMAL" />
    <result column="DESCRIBE" property="describe" jdbcType="VARCHAR" />
  </resultMap>
	
	<!-- 查询商品信息 -->
	<select id="findCarProductBySkuId" parameterClass="java.lang.Long" resultClass="java.util.HashMap">
	<![CDATA[
		select s.product_id productID,
		       s.product_sku_id productSkuId,
		       s.product_sku_code productSkuCode,
		       s.unit_weight unitWeight,
		       s.price price,
		       s.cost_price costPrice,
		       s.status skuStatus,
		       m.status productStatus,
		       m.product_title title,
		       m.procuct_name name,
		       m.product_desc productDesc,
		       m.product_no productNo,
		       i.img_path imagePath,
		       m.shop_code supplierCode,
		       m.channel,
		       m.category_id,m.brand_id,
		       (select max(productStockSum)
		          from (select sum(st.stock_quality - st.order_quality) productStockSum
		                  from product_stock st
		                 where st.sku_attribute_id = #productSkuId:DECIMAL#
		                   and st.stock_quality > 0
		                   and st.order_quality >= 0
		                 group by st.warehouse_id)) stockCount,
		       si.supplier_type||'' supplierType,
		       to_char(nvl(m.product_type,0)) productType
		  from product_sku s
		  inner join productmain m
		    on (m.product_id = s.product_id)
		  inner join suppliers_info si
		    on (si.supplier_id = to_number(m.shop_code))
		  left join product_image i
		    on (i.sku_id = s.product_sku_id
		   and i.is_default = 0)
		 where s.product_sku_id = #productSkuId:DECIMAL#
	]]>
	</select>

	<resultMap class="com.kmzyc.b2b.vo.CarProduct" id="baseCarProduct">
		<result property="productSkuId" column="product_sku_id"/>
		<result property="stockCount" column="stock" nullValue="0"/>
		<result property="name" column="procuct_name"/>
		<result property="imagePath" column="img_path" />
		<result property="marketPrice" column="marketPrice" />
		<result property="finalPrice" column="finalPrice" />
		<result property="costPrice" column="cost_price"/>
		<result property="price" column="price"/>
		<result property="unitWeight" column="unit_weight" nullValue="0"/>
		<result property="productNo" column="product_no"/>
		<result property="productSkuCode" column="product_sku_code"/>
		<result property="supplierCode" column="SHOP_CODE"/>
		<result property="title" column="product_title"/>
		<result property="categoryId" column="category_id"/>
		<result property="brandId" column="brand_id"/>
		<result property="productID" column="product_id"/>
	</resultMap>
	<select id="getIncreaseProduct" parameterClass="java.lang.Long" resultMap="baseCarProduct">
	<![CDATA[
		select ps.product_sku_id,
		       ps.price,
		       ps.cost_price,
		       pp.price            as finalPrice,
		       stock,
		       m.PRODUCT_TITLE     as product_title,
		       m.PROCUCT_NAME,
		       ps.unit_weight,
		       m.product_no,
		       ps.product_sku_code,
		       m.SHOP_CODE,
		       0                   as marketPrice,
		       pi.img_path,
		       m.channel,
		       m.category_id,
		       m.brand_id,
		       m.product_id
		  from promotion_product pp
		 inner join product_sku ps
		    on ps.product_sku_id = pp.product_sku_id
		 inner join productmain m
		    on m.product_id = ps.product_id
		 inner join product_image pi
		    on pi.sku_id = ps.product_sku_id
		   and pi.is_default = 0
		   and pp.promotion_id = #promotionId:DECIMAL#
		 inner join (select max(productStockSum) as stock, skuId
		               from (select sum(st.stock_quality - st.order_quality) productStockSum,
		                            st.sku_attribute_id as skuId
		                       from product_stock st
		                      where st.stock_quality > 0
		                        and st.order_quality >= 0
		                      group by st.warehouse_id, sku_attribute_id)
		              group by skuId) t
		    on t.skuId = pp.product_sku_id
		 order by pp.price asc
	]]>
	</select>
  
  	<!-- 获取赠品 -->
  	<select id="getGiftProduct" parameterClass="java.lang.Long" resultMap="baseCarProduct">
	<![CDATA[
		select ps.product_sku_id,
		       ps.price            price,
		       ps.cost_price,
		       prd.prize_data                   finalPrice,
		       stock,
		       m.PRODUCT_TITLE     product_title,
		       m.PROCUCT_NAME,
		       meet_data           marketPrice,
		       ps.unit_weight,
		       m.product_no,
		       ps.product_sku_code,
		       m.SHOP_CODE ,
		       pi.img_path         img_path,
		       m.channel,
		       m.category_id,
		       m.brand_id,
		       m.product_id
		  from promotion_rule_data prd
		 inner join product_sku ps
		    on ps.product_sku_id = prd.entity_id
		 inner join productmain m
		    on m.product_id = ps.product_id
		 inner join product_image pi
		    on pi.sku_id = ps.product_sku_id
		   and prd.promotion_id = #promotionId:DECIMAL#
		   and pi.is_default = 0
		  left join (select max(productStockSum) as stock, skuId
		               from (select sum(st.stock_quality - st.order_quality) productStockSum,
		                            st.sku_attribute_id as skuId
		                       from product_stock st
		                      where st.stock_quality > 0
		                        and st.order_quality >= 0
		                      group by st.warehouse_id, sku_attribute_id)
		              group by skuId) t
		    on prd.entity_id = t.skuId
		 order by prd.meet_data desc
	]]>
	</select>
	
	<!-- 查询可用商品 -->
	<select id="SQL_QUERY_ABLE_PRODUCT" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	<![CDATA[
		select pm.shop_code sellerId,
		       to_char(si.supplier_type) supplierType,
		       nvl(sm.shop_name,
		           (select ctbi.corporate_name
		              from commercial_tenant_basic_info ctbi
		             where ctbi.n_commercial_tenant_id = si.merchant_id)) shopName,
		       ps.status skustatus,
		       pm.status productstatus,
		       to_char(nvl(pm.product_type,0)) productType,
		       decode(nvl((select count(1)
		                    from product_stock pst
		                   where pst.stock_quality > 0
		                     and pst.order_quality >= 0
		                     and pst.stock_quality - pst.order_quality >= #amount:DECIMAL#
		                     and pst.sku_attribute_id = ps.product_sku_id),
		                  0),
		              0,
		              '1',
		              '0') outstock
		  from product_sku ps
		 inner join productmain pm
		    on (pm.product_id = ps.product_id)
		  left join suppliers_info si
		    on (si.supplier_id = to_number(pm.shop_code))
		  left join (select smi.supplier_id, smi.shop_name
		               from shop_main smi
		              where smi.audit_status = 2) sm
		    on (sm.supplier_id = si.supplier_id)
		 where ps.product_sku_id = #skuId:DECIMAL#
	]]>
	</select>
	
	<!-- 查询可用套餐 -->
	<select id="SQL_QUERY_ABLE_COMPOSITION" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	<![CDATA[
		select pm.shop_code sellerId,
		       to_char(ps.product_sku_id) skuId,
		       to_char(pm.product_id) productId,
		       to_char(pm.brand_id) brandId,
       		   to_char(pm.category_id) categoryId,
		       to_char(ps.status) skuStatus,
		       ps.product_sku_code productSkuCode,
       		   to_char(nvl(ps.unit_weight,0)) unitWeight,
		       pm.procuct_name productName,
		       pm.product_no productNo,
		       pm.product_title productTitle,
		       (select pi.img_path || ',' || pi.img_path7
		          from product_image pi
		         where pi.sku_id = prd.relation_sku_id
		           and pi.is_default = 0) imgInfo,
		       to_char(pm.status) productStatus,
		       to_char(nvl(prd.product_count, 0)) productCount,
		       pr.relation_name suitName,
		       to_char(pr.total_relation_price) suitPrice,
		       to_char(pr.status) status,
		       to_char(nvl(ps.price, 0)) productPrice,
		       to_char(nvl((select max(st.stock_quality - st.order_quality)
                     from product_stock st
                    where st.sku_attribute_id = prd.relation_sku_id),0)) stockCount,
		       (select si.supplier_type || ',' ||
		               nvl((select sm.shop_name
		                     from shop_main sm
		                    where sm.audit_status = 2
		                      and sm.supplier_id = si.supplier_id),
		                   (select ctbi.corporate_name
		                      from commercial_tenant_basic_info ctbi
		                     where ctbi.n_commercial_tenant_id = si.merchant_id))
		          from suppliers_info si
		         where si.supplier_id = to_number(pm.shop_code)) shopInfo,
		       (select wmsys.wm_concat(vsa.category_attr_value)
		          from view_sku_attr vsa
		         where vsa.product_sku_id = prd.relation_sku_id) categoryAttrValue
		  from product_sku ps
		 inner join productmain pm
		    on (pm.product_id = ps.product_id)
		 inner join product_relation_detail prd
		    on (ps.product_sku_id = prd.relation_sku_id)
		 inner join product_relation pr
		    on (prd.relation_id = pr.relation_id)
		 where pr.relation_id = #suitId:DECIMAL#
		  order by pm.shop_code desc
	]]>
	</select>
	
	<!-- 校验库存并返回成功的skuid -->
	<select id="SQL_QUERY_ABLE_PRODUCT_SKUID_FOR_BATCH" parameterClass="java.lang.Long" resultClass="java.util.HashMap">
	<![CDATA[
		select ps.product_sku_id from product_sku ps
		 where ps.product_sku_id = #skuId:DECIMAL#
		   and exists (select 1
		          from product_stock pst
		         where pst.stock_quality > 0
		           and pst.order_quality >= 0
		           and pst.stock_quality - pst.order_quality >= #amount:DECIMAL#
		           and pst.sku_attribute_id = ps.product_sku_id)
	]]>
	</select>
	
	<!-- 查询产品类型 -->
	<select id="SQL_QUERY_PRODUCT_TYPE" parameterClass="java.lang.Long" resultClass="java.lang.Integer">
	<![CDATA[
		select nvl(pm.product_type,0) from productmain pm
			 where exists (select 1 from product_sku ps
			         where pm.product_id = ps.product_id
			           and ps.product_sku_id = #skuId:DECIMAL#)
	]]>
	</select>
	
	<!-- 批量查询产品类型 -->
	<select id="SQL_QUERY_BATCH_PRODUCT_TYPE" parameterClass="java.util.List" resultClass="java.util.HashMap">
	<![CDATA[
		select ps.product_sku_id skuId, nvl(pm.product_type, 0) productType
			  from productmain pm
			 inner join product_sku ps
			    on (pm.product_id = ps.product_id)
			 where ps.product_sku_id in 
	]]>
			<iterate open="(" close=")" conjunction="," >
				#[]#
			</iterate>
	<![CDATA[)	]]>	
	</select>
	
	<!-- 查询套餐内产品类型 -->
	<select id="SQL_QUERY_PRODUCT_TYPE_BY_COM_ID" parameterClass="java.lang.Long" resultClass="java.util.HashMap">
	<![CDATA[
		select ps.product_sku_id skuId, nvl(pm.product_type,0) productType
			  from productmain pm
			 inner join product_sku ps
			    on (pm.product_id = ps.product_id)
			 where exists (select 1
			          from product_relation_detail prd
			         where ps.product_sku_id = prd.relation_sku_id
			           and prd.relation_id = #suitId:DECIMAL#
			        union all
			        select 1
			          from product_relation pr
			         where ps.product_sku_id = pr.main_sku_id
			           and pr.relation_id = #suitId:DECIMAL#)
	]]>
	</select>
	
	<!-- 根据供应商ID查询商家名称 -->
	<select id="SQL_QUERY_CORPORATE_NAME_BY_SUPPLIER_ID" parameterClass="java.lang.Long" resultClass="java.lang.String">
	<![CDATA[
		select ctbi.corporate_name
		  from commercial_tenant_basic_info ctbi
		 inner join suppliers_info si
		    on (ctbi.n_commercial_tenant_id = si.merchant_id)
		 where si.supplier_id = #sellerId:DECIMAL#
	]]>
	</select>
	
	<!-- 库存map -->
	<resultMap class="java.util.HashMap" id="SQL_MAP_SKU_STOCK">
		<result property="skuId" column="skuId" javaType="java.lang.Long"/>
		<result property="stock" column="stock" javaType="java.lang.Integer"/>
	</resultMap>
	<!-- 批量查询产品最大库存 -->
	<select id="SQL_QUERY_BATCH_MAX_STOCK" parameterClass="java.util.List" resultMap="SQL_MAP_SKU_STOCK">
	<![CDATA[
		select st.sku_attribute_id skuId,
		       nvl(max(st.stock_quality - st.order_quality),0) stock
		  from product_stock st
		 where st.stock_quality > 0
		   and st.order_quality >= 0
		   and st.sku_attribute_id in 
	]]>
		<iterate open="(" close=")" conjunction=",">
		   		#[]#
		</iterate>
	<![CDATA[
		 group by st.warehouse_id, st.sku_attribute_id
	]]>
	</select> 
	
	
	  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.kmzyc.supplier.model.SuppliersInfo" >
  
    select SUPPLIER_ID, MERCHANT_ID, SALE_PRODUCT_DESCRIBE, SETTLEMENT_CYCLE, SETTLEMENT_WAY,
      SUPPLIER_TYPE, STATUS, DESCRIBE
    from SUPPLIERS_INFO
    where SUPPLIER_ID = #supplierId:DECIMAL#
  </select> 
  
  
  
  
  	<!-- 查询商品信息 -->
	<select id="SQL_QUERY_BATCH_PRODUCT_PRICE_INFO"  parameterClass="java.lang.String"  resultClass="com.kmzyc.b2b.vo.CarProduct">
	<![CDATA[
		select s.product_id productID,
		       s.product_sku_id productSkuId,
		       s.product_sku_code productSkuCode,
		       s.unit_weight unitWeight,
		       nvl(s.price, 0) price,
		       nvl(s.price, 0) finalPrice,
		       s.cost_price costPrice,
		       s.pv_value pvalue,
		       erp.erp_pro_code erpProCode ,
               erp.sys_code  erpSysCode,
		       s.cost_income_ratio costIncomeRatio ,
		       s.cost_income_ratio costIncomeMoney ,
		       s.mark_price marketPrice,
		       s.status skuStatus,
		       m.status productStatus,
		       m.product_title title,
		       m.procuct_name name,
		       m.product_desc productDesc,
		       m.product_no productNo,
		       i.img_path imagePath,
		       m.shop_code supplierCode,
		       m.shop_code sellerId,
		       m.channel channel,
		       m.category_id categoryId,
		       m.brand_id brandId,
		       m.brand_name brandName,
		       0 credits,
		       '' batchNo,
		       nvl(m.product_type, 0) productType,
		       '' shopName,
		       (select max(st.stock_quality - st.order_quality) productStockSum
		          from product_stock st
		         where st.stock_quality > 0
		           and st.order_quality >= 0) stockCount,
		       si.supplier_type supplierType,
		             (select wmsys.wm_concat(vsa.category_attr_value)
		          from view_sku_attr vsa
		         where vsa.product_sku_id = s.product_sku_id) skuAttrValue
		  from product_sku s
		 inner join productmain m
		    on (m.product_id = s.product_id)
		 inner join suppliers_info si
		    on (si.supplier_id = to_number(m.shop_code))
		  left join product_image i
		    on (i.sku_id = s.product_sku_id and i.is_default = 0)
		  left join  product_erp_relation erp
     on(s.product_sku_id=erp.product_sku_id)  
		 where erp.erp_pro_code = #productId:VARCHAR#
	]]>
	</select>
	
</sqlMap>
