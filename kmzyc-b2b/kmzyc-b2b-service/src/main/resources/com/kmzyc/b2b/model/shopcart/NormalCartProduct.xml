<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="NormalCartProduct">

	<resultMap id="ibatorgenerated_BaseResultMap" class="com.kmzyc.supplier.model.SupplierFare" >
	    <!--
	      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
	      This element was generated on Tue Aug 19 17:56:53 CST 2014.
	    -->
	    <result column="FARE_ID" property="fareId" jdbcType="DECIMAL" />
	    <result column="NAME" property="name" jdbcType="VARCHAR" />
	    <result column="SUPPLIER_ID" property="supplierId" jdbcType="DECIMAL" />
	    <result column="FREE_PRICE" property="freePrice" jdbcType="DECIMAL" />
	    <result column="FIRST_HEAVY_FREIGHT" property="firstHeavyFreight" jdbcType="DECIMAL" />
	    <result column="SITE" property="site" jdbcType="VARCHAR" />
  	</resultMap>
	
	<!-- 查询可用商品 -->
	<select id="SQL_QUERY_ABLE_PRODUCT" parameterClass="java.util.Map"
		resultClass="java.util.HashMap">
	<![CDATA[
	       	select pm.shop_code sellerId,
		       to_char(si.supplier_type) supplierType,
		       nvl(sm.shop_name,
		           (select ctbi.corporate_name
		              from commercial_tenant_basic_info ctbi
		             where ctbi.n_commercial_tenant_id = si.merchant_id)) shopName,
		       ps.status skustatus,
		       pm.status productstatus,
		       to_char(nvl(pm.product_type,0)) productType,
		       decode(nvl((select count(1)
		                    from product_stock pst
		                   where pst.stock_quality > 0		                     
		                     and pst.stock_quality - pst.order_quality >= #amount:DECIMAL#
		                     and pst.sku_attribute_id = ps.product_sku_id),
		                  0),
		              0,
		              '1',
		              '0') outstock
		  from product_sku ps
		 inner join productmain pm
		    on (pm.product_id = ps.product_id)
		  left join suppliers_info si
		    on (si.supplier_id = to_number(pm.shop_code))
		  left join (select smi.supplier_id, smi.shop_name
		               from shop_main smi
		              where smi.audit_status = 2) sm
		    on (sm.supplier_id = si.supplier_id)
		 where ps.product_sku_id = #skuId:DECIMAL#
	]]>
	</select>
	<!-- 查询可用套餐 -->
	<select id="SQL_QUERY_ABLE_COMPOSITION" parameterClass="java.util.Map"
		resultClass="java.util.HashMap">
	<![CDATA[
		select pm.shop_code sellerId,
		       to_char(ps.product_sku_id) skuId,
		       to_char(pm.product_id) productId,
		       to_char(pm.brand_id) brandId,
       		   to_char(pm.category_id) categoryId,
		       to_char(ps.status) skuStatus,
		       ps.product_sku_code productSkuCode,
       		   to_char(nvl(ps.unit_weight,0)) unitWeight,
		       pm.procuct_name productName,
		       pm.product_no productNo,
		       pm.product_title productTitle,
		       (select pi.img_path || ',' || pi.img_path7
		          from product_image pi
		         where pi.sku_id = prd.relation_sku_id
		           and pi.is_default = 0) imgInfo,
		       to_char(pm.status) productStatus,
		       to_char(nvl(prd.product_count, 0)) productCount,
		       pr.relation_name suitName,
		       to_char(pr.total_relation_price) suitPrice,
		       to_char(pr.status) status,
		       to_char(nvl(ps.price, 0)) productPrice,
		       to_char(nvl((select max(st.stock_quality - st.order_quality)
                     from product_stock st
                    where st.sku_attribute_id = prd.relation_sku_id),0)) stockCount,
		       (select si.supplier_type || ',' ||
		               nvl((select sm.shop_name
		                     from shop_main sm
		                    where sm.audit_status = 2
		                      and sm.supplier_id = si.supplier_id),
		                   (select ctbi.corporate_name
		                      from commercial_tenant_basic_info ctbi
		                     where ctbi.n_commercial_tenant_id = si.merchant_id))
		          from suppliers_info si
		         where si.supplier_id = to_number(pm.shop_code)) shopInfo,
		       (select wmsys.wm_concat(vsa.category_attr_value)
		          from view_sku_attr vsa
		         where vsa.product_sku_id = prd.relation_sku_id) categoryAttrValue
		  from product_sku ps
		 inner join productmain pm
		    on (pm.product_id = ps.product_id)
		 inner join product_relation_detail prd
		    on (ps.product_sku_id = prd.relation_sku_id)
		 inner join product_relation pr
		    on (prd.relation_id = pr.relation_id)
		 where pr.relation_id = #suitId:DECIMAL#
		  order by pm.shop_code desc
	]]>
	</select>
	<!-- 查询产品类型 -->
	<select id="SQL_QUERY_PRODUCT_TYPE" parameterClass="java.lang.Long"
		resultClass="java.lang.Integer">
	<![CDATA[
		select nvl(pm.product_type,0) from productmain pm
			 where exists (select 1 from product_sku ps
			         where pm.product_id = ps.product_id
			           and ps.product_sku_id = #skuId:DECIMAL#)
	]]>
	</select>
	<!-- 查询套餐内产品类型 -->
	<select id="SQL_QUERY_PRODUCT_TYPE_BY_COM_ID" parameterClass="java.lang.Long"
		resultClass="java.util.HashMap">
	<![CDATA[
		select ps.product_sku_id skuId, nvl(pm.product_type,0) productType
			  from productmain pm
			 inner join product_sku ps
			    on (pm.product_id = ps.product_id)
			 where exists (select 1
			          from product_relation_detail prd
			         where ps.product_sku_id = prd.relation_sku_id
			           and prd.relation_id = #suitId:DECIMAL#
			        union all
			        select 1
			          from product_relation pr
			         where ps.product_sku_id = pr.main_sku_id
			           and pr.relation_id = #suitId:DECIMAL#)
	]]>
	</select>
	<!-- 批量查询产品类型 -->
	<select id="SQL_QUERY_BATCH_PRODUCT_TYPE" parameterClass="java.util.List"
		resultClass="java.util.HashMap">
	<![CDATA[
		select ps.product_sku_id skuId, nvl(pm.product_type, 0) productType
			  from productmain pm
			 inner join product_sku ps
			    on (pm.product_id = ps.product_id)
			 where ps.product_sku_id in 
	]]>
		<iterate open="(" close=")" conjunction=",">
			#[]#
		</iterate>
	<![CDATA[)	]]>
	</select>
	
	
	
	
	<!-- 批量 查询套餐 信息 -->
	<select id="SQL_COMIOTION_PRODUCT_LIST"  resultClass="java.util.HashMap">
	<![CDATA[
		select /*+ leading(pr) index(pr PK_PRODUCT_RELATION) use_nl(prd,erp) */to_char(pr.relation_id) suitId,
		       to_char(pm.shop_code) sellerId,
		       to_char(ps.product_sku_id) skuId,
		      to_char(ps.sku_bar_code) skuBarCode,
		       to_char(pm.product_id) productId,
		       to_char(pm.brand_id) brandId,
		       to_char(pm.category_id) categoryId,
		       to_char(ps.status) skuStatus,
		       to_char(nvl(ps.freight, 0)) freight,
     		   to_number(ps.free_status) freeStatus,
		       ps.product_sku_code productSkuCode,
       		   to_char(nvl(ps.unit_weight,0)) unitWeight,
		       pm.procuct_name productName,
		       pm.product_desc productDesc,
		       to_char(nvl(ps.pv_value ,0))  pvalue,
		       erp.erp_pro_code  erpProCode ,
               erp.sys_code      erpSysCode,
               (select erpi.erp_pro_code
		          from product_erp_relation erpi
		         where erpi.product_sku_id = ps.product_sku_id
		           and erpi.sys_code = 'JXC') jxcCode,
		       to_char(nvl(pr.cost_income_ratio ,0))  costIncomeRatio,
		       to_char(nvl(pr.cost_income_ratio ,0))  costIncomeMoney,
		       pm.product_no productNo,
		       pm.product_title productTitle,
		       pm.brand_name brandName,
		       '0' credits,
		       '' batchNo,
		       (select pi.img_path || ',' || pi.img_path7
		          from product_image pi
		         where pi.sku_id = prd.relation_sku_id
		           and pi.is_default = 0) imgInfo,
		       to_char(pm.status) productStatus,
		       to_char(nvl(prd.product_count, 0)) productCount,
		       pr.relation_name suitName,
		       to_char(pr.total_relation_price) suitPrice,
		       to_char(pr.status) status,
		       to_char(nvl(ps.price, 0)) productPrice,
		       to_char(nvl((select max(st.stock_quality - st.order_quality)
                     from product_stock st
                    where st.sku_attribute_id = prd.relation_sku_id),0)) stockCount,
		       (select si.supplier_type || ',' ||
		               nvl((select sm.shop_name
		                     from shop_main sm
		                    where sm.audit_status = 2
		                      and sm.supplier_id = si.supplier_id),
		                   (select ctbi.corporate_name
		                      from commercial_tenant_basic_info ctbi
		                     where ctbi.n_commercial_tenant_id = si.merchant_id))
		          from suppliers_info si
		         where si.supplier_id = to_number(pm.shop_code)) shopInfo,
		       (select LISTAGG(vsa.category_attr_value, ',') WITHIN GROUP (ORDER BY vsa.category_attr_value)
		          from (select nvl(d.category_attr_value,b.new_attr) category_attr_value,b.product_sku_id 
		          		from product_sku_attr b
		 				left join category_attr_value d on b.category_attr_value_id = d.category_attr_value_id) vsa
		         		where vsa.product_sku_id = prd.relation_sku_id) categoryAttrValue,
		         to_char(pm.product_type) productType
		  from product_sku ps
		 inner join productmain pm
		    on (pm.product_id = ps.product_id)
		 inner join product_relation_detail prd
		    on (ps.product_sku_id = prd.relation_sku_id)
		 inner join product_relation pr
		    on (prd.relation_id = pr.relation_id)
		 left join  product_erp_relation erp
     on (ps.product_sku_id = erp.product_sku_id and erp.sys_code = 'JIEKE')
		 where pr.relation_id in 
	]]>
		<iterate open="(" close=")" conjunction=",">
		   		#[]#
		</iterate>		 
		 order by pr.relation_id,pm.shop_code desc
	</select>

	
	<resultMap class="com.kmzyc.b2b.shopcart.vo.NormalCartProduct" id="shopcarNormalCartProduct">
		<result property="productID" column="product_id" jdbcType="DECIMAL" />
		<result property="productSkuId" column="product_sku_id" jdbcType="DECIMAL" />
		<result property="productSkuCode" column="product_sku_code" jdbcType="DECIMAL" />
		<result property="unitWeight" column="unit_weight" jdbcType="DECIMAL" />
		<result property="price" column="price" jdbcType="DECIMAL" />
		<result property="finalPrice" column="finalPrice" jdbcType="DECIMAL" />
		<result property="costPrice" column="cost_price" jdbcType="DECIMAL" />
		<result property="marketPrice" column="mark_price" jdbcType="DECIMAL" />
		<result property="costPrice" column="cost_price" jdbcType="DECIMAL" />
		<result property="pvalue" column="pv_value" jdbcType="DECIMAL" />
		<result property="freight" column="freight" jdbcType="DECIMAL" />
		<result property="freeStatus" column="freeStatus" jdbcType="DECIMAL" />
		<result property="erpProCode" column="erp_pro_code" jdbcType="VARCHAR" />
		<result property="erpSysCode" column="sys_code" jdbcType="VARCHAR" />
		<result property="jxcCode" column="jxcCode" jdbcType="VARCHAR" />
		<result property="costIncomeRatio" column="cost_income_ratio" jdbcType="DECIMAL" />
		<result property="costIncomeMoney" column="cost_income_ratio" jdbcType="DECIMAL" />
		<result property="skuStatus" column="skuStatus" jdbcType="DECIMAL" />
		<result property="productStatus" column="productStatus" jdbcType="DECIMAL" />
		<result property="title" column="product_title" jdbcType="VARCHAR" />
		<result property="name" column="procuct_name" jdbcType="VARCHAR" />
		<result property="productDesc" column="product_desc" jdbcType="VARCHAR" />
		<result property="productNo" column="product_no" jdbcType="VARCHAR" />
		
		
		<result property="imagePath" column="img_path" jdbcType="VARCHAR" />
		<result property="supplierCode" column="shop_code" jdbcType="DECIMAL" />
		<result property="sellerId" column="shop_code" jdbcType="DECIMAL" />
		<result property="channel" column="channel" jdbcType="VARCHAR" />
		<result property="categoryId" column="category_id" jdbcType="DECIMAL" />
		
		
		
		<result property="brandName" column="brand_name" jdbcType="VARCHAR" />
		<result property="brandId" column="brand_id" jdbcType="DECIMAL" />
		<result property="credits" column="credits" jdbcType="DECIMAL" />
		<result property="batchNo" column="batchNo" jdbcType="VARCHAR" />
		<result property="productType" column="productType" jdbcType="DECIMAL" />
		<result property="shopName" column="shopName" jdbcType="VARCHAR" />
		<result property="stockCount" column="stockCount" jdbcType="DECIMAL" />
		<result property="supplierType" column="supplierType" jdbcType="DECIMAL" />
		<result property="skuAttrValue" column="skuAttrValue" jdbcType="DECIMAL" />

		<result property="skuBarCode" column="sku_bar_code" jdbcType="VARCHAR" />
		
	</resultMap>
	
	<!-- 批量查询商品信息
	
	  <result column="FARE_ID" property="fareId" jdbcType="DECIMAL" />
	    <result column="NAME" property="name" jdbcType="VARCHAR" />
	 -->
	<select id="SQL_PRODUCT_LIST" resultMap="shopcarNormalCartProduct" >
	<![CDATA[
		select  s.product_id ,
		       s.product_sku_id ,
		       s.product_sku_code ,
		       s.sku_bar_code,
		       s.unit_weight ,
		       nvl(s.price, 0) price,
		       nvl(s.price, 0) finalPrice,
		       s.cost_price,
		       s.mark_price ,
		       s.pv_value ,
		       nvl(s.freight, 0) freight,
		       to_number(s.free_status) freeStatus,
		       erp.erp_pro_code ,
		       erp.sys_code,
		       (select erpi.erp_pro_code
		          from product_erp_relation erpi
		         where erpi.product_sku_id = s.product_sku_id
		           and erpi.sys_code = 'JXC') jxcCode,
		       s.cost_income_ratio ,
		       s.status skuStatus,
		       m.status productStatus,
		       m.product_title,
		       m.procuct_name,
		       m.product_desc ,
		       m.product_no ,
		       i.img_path ,
		       m.shop_code ,
		       m.channel ,
		       m.category_id ,
		       m.brand_id ,
		       m.brand_name ,
		       0 credits,
		       '' batchNo,
		       nvl(m.product_type, 0) productType,
		       nvl((select smi.shop_name
		             from shop_main smi
		            where smi.audit_status = 2
		              and smi.supplier_id = si.supplier_id),
		           (select ctbi.corporate_name
		              from commercial_tenant_basic_info ctbi
		             where ctbi.n_commercial_tenant_id = si.merchant_id)) shopName,
		       (select max(st.stock_quality - (case
		                     when st.order_quality < 0 then
		                      0 else st.order_quality end)) productStockSum
		          from product_stock st
		         where st.sku_attribute_id = s.product_sku_id
		           and st.stock_quality > 0) stockCount,
		       si.supplier_type supplierType,
		       (select wmsys.wm_concat(vsa.category_attr_value)
		          from (select nvl(d.category_attr_value,b.new_attr) category_attr_value,b.product_sku_id 
		          		from product_sku_attr b
		 				left join category_attr_value d on b.category_attr_value_id = d.category_attr_value_id) vsa
		         where vsa.product_sku_id = s.product_sku_id) skuAttrValue
		  from product_sku s
		 inner join productmain m
		    on (m.product_id = s.product_id)
		 inner join suppliers_info si
		    on (si.supplier_id = to_number(m.shop_code))
		  left join product_image i
		    on (i.sku_id = s.product_sku_id and i.is_default = 0)
		  left join product_erp_relation erp
		    on (s.product_sku_id = erp.product_sku_id and erp.sys_code = 'JIEKE')
		 where s.product_sku_id in
		 ]]>
			<iterate open="(" close=")" conjunction=",">
		   		#[]#
		</iterate>
	</select>








<!-- 批量查询商品信息 -->
	<select id="SQL_PRODUCT_LIST_FOR_CACHE"  parameterClass="java.util.Collection" resultClass="java.util.Map">
	<![CDATA[
		select s.product_id productID,
		       s.product_sku_id productSkuId,
		       s.product_sku_code productSkuCode,
		       s.unit_weight unitWeight,
		       nvl(s.price, 0) price,
		       nvl(s.price, 0) finalPrice,
		       s.cost_price costPrice,
		       s.mark_price marketPrice,
		       s.pv_value pvalue,
		       nvl(s.freight, 0) freight,
		       to_number(s.free_status) freeStatus,
		       erp.erp_pro_code erpProCode,
		       erp.sys_code erpSysCode,
		       (select erpi.erp_pro_code
		          from product_erp_relation erpi
		         where erpi.product_sku_id = s.product_sku_id
		           and erpi.sys_code = 'JXC') jxcCode,
		       s.cost_income_ratio costIncomeRatio,
		       s.cost_income_ratio costIncomeMoney,
		       s.status skuStatus,
		       m.status productStatus,
		       m.product_title title,
		       m.procuct_name name,
		       m.product_desc productDesc,
		       m.product_no productNo,
		       i.img_path imagePath,
		       m.shop_code supplierCode,
		       m.shop_code sellerId,
		       m.channel channel,
		       m.category_id categoryId,
		       m.brand_id brandId,
		       m.brand_name brandName,
		       0 credits,
		       '' batchNo,
		       nvl(m.product_type, 0) productType,
		       nvl((select smi.shop_name
		             from shop_main smi
		            where smi.audit_status = 2
		              and smi.supplier_id = si.supplier_id),
		           (select ctbi.corporate_name
		              from commercial_tenant_basic_info ctbi
		             where ctbi.n_commercial_tenant_id = si.merchant_id)) shopName,
		       (select max(st.stock_quality - (case
		                     when st.order_quality < 0 then
		                      0 else st.order_quality end)) productStockSum
		          from product_stock st
		         where st.sku_attribute_id = s.product_sku_id
		           and st.stock_quality > 0) stockCount,
		       si.supplier_type supplierType,
		       (select wmsys.wm_concat(vsa.category_attr_value)
		          from view_sku_attr vsa
		         where vsa.product_sku_id = s.product_sku_id) skuAttrValue
		  from product_sku s
		 inner join productmain m
		    on (m.product_id = s.product_id)
		 inner join suppliers_info si
		    on (si.supplier_id = to_number(m.shop_code))
		  left join product_image i
		    on (i.sku_id = s.product_sku_id and i.is_default = 0)
		  left join product_erp_relation erp
		    on (s.product_sku_id = erp.product_sku_id and erp.sys_code = 'JIEKE')
		 where s.product_sku_id in
		 ]]>
			<iterate open="(" close=")" conjunction="," property="skuIds">
		   		#skuIds[]#
		</iterate>
	</select>


	<select id="queryUserPurchase" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		      select sum(oi.commodity_number)
        from order_item oi
       where exists (select 1
                from order_preferential op, order_main om
               where op.order_item_id = oi.order_item_id
                 and om.order_code = op.order_code
                 and om.customer_id = #userId:DECIMA#
                 and op.order_preferential_code = #promotionId:DECIMA#)
                 and oi.commodity_sku = #skuCode:DECIMA#
	</select>
	<resultMap class="java.util.HashMap" id="result_map_stock">
		<result property="SKUID" column="SKUID" javaType="java.lang.String" />
		<result property="STOCK" column="STOCK" javaType="java.lang.Integer" />
	</resultMap>
	<select id="queryStockBatch" resultMap="result_map_stock" parameterClass="java.util.List">
			<![CDATA[ select st.sku_attribute_id SKUID,max(st.stock_quality - (case
		                     when st.order_quality < 0 then
		                      0 else st.order_quality end)) STOCK			
	              from product_stock st ]]>
	             where st.sku_attribute_id in (<iterate conjunction=",">#[]#</iterate>)
	               and st.stock_quality > 0	               
	               group by st.sku_attribute_id 
	</select>
	
	<!-- 查询入驻商家运费 -->
	<select id="selectSupplierFareInfoList" resultMap="ibatorgenerated_BaseResultMap"  parameterClass="java.util.ArrayList"  >
   		select *
		  from supplier_fare fa
		 where fa.free_price is not null
		   and fa.supplier_id in
		<iterate open="(" close=")" conjunction="," >
			#[]# 
		</iterate>
	</select>
	<resultMap class="java.util.HashMap" id="result_map_product_price">
		<result property="skuId" column="SKUID" javaType="java.lang.String" />
		<result property="price" column="PRICE" javaType="java.math.BigDecimal" />
	</resultMap>
	<!-- 获取产品价格 mkw 20151228 add -->
	<select id="queryProductSkuPriceMap" parameterClass="java.util.List" resultMap="result_map_product_price">
		select sku.product_sku_id skuId,			
			sku.price price
		from product_sku sku
		where sku.product_sku_id in 
		<iterate open="(" close=")" conjunction=",">
			#[]#
		</iterate>
	</select>
</sqlMap>
