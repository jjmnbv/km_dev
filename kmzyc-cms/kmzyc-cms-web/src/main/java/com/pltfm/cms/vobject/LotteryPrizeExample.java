package com.pltfm.cms.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class LotteryPrizeExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table LOTTERY_PRIZE
     *
     * @ibatorgenerated Fri Sep 05 10:40:15 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table LOTTERY_PRIZE
     *
     * @ibatorgenerated Fri Sep 05 10:40:15 CST 2014
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_PRIZE
     *
     * @ibatorgenerated Fri Sep 05 10:40:15 CST 2014
     */
    public LotteryPrizeExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_PRIZE
     *
     * @ibatorgenerated Fri Sep 05 10:40:15 CST 2014
     */
    protected LotteryPrizeExample(LotteryPrizeExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_PRIZE
     *
     * @ibatorgenerated Fri Sep 05 10:40:15 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_PRIZE
     *
     * @ibatorgenerated Fri Sep 05 10:40:15 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_PRIZE
     *
     * @ibatorgenerated Fri Sep 05 10:40:15 CST 2014
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_PRIZE
     *
     * @ibatorgenerated Fri Sep 05 10:40:15 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_PRIZE
     *
     * @ibatorgenerated Fri Sep 05 10:40:15 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_PRIZE
     *
     * @ibatorgenerated Fri Sep 05 10:40:15 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_PRIZE
     *
     * @ibatorgenerated Fri Sep 05 10:40:15 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table LOTTERY_PRIZE
     *
     * @ibatorgenerated Fri Sep 05 10:40:15 CST 2014
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                    || criteriaWithSingleValue.size() > 0
                    || criteriaWithListValue.size() > 0
                    || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List dateList = new ArrayList();
            Iterator iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andPrizeIdIsNull() {
            addCriterion("PRIZE_ID is null");
            return this;
        }

        public Criteria andPrizeIdIsNotNull() {
            addCriterion("PRIZE_ID is not null");
            return this;
        }

        public Criteria andPrizeIdEqualTo(BigDecimal value) {
            addCriterion("PRIZE_ID =", value, "prizeId");
            return this;
        }

        public Criteria andPrizeIdNotEqualTo(BigDecimal value) {
            addCriterion("PRIZE_ID <>", value, "prizeId");
            return this;
        }

        public Criteria andPrizeIdGreaterThan(BigDecimal value) {
            addCriterion("PRIZE_ID >", value, "prizeId");
            return this;
        }

        public Criteria andPrizeIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PRIZE_ID >=", value, "prizeId");
            return this;
        }

        public Criteria andPrizeIdLessThan(BigDecimal value) {
            addCriterion("PRIZE_ID <", value, "prizeId");
            return this;
        }

        public Criteria andPrizeIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PRIZE_ID <=", value, "prizeId");
            return this;
        }

        public Criteria andPrizeIdIn(List values) {
            addCriterion("PRIZE_ID in", values, "prizeId");
            return this;
        }

        public Criteria andPrizeIdNotIn(List values) {
            addCriterion("PRIZE_ID not in", values, "prizeId");
            return this;
        }

        public Criteria andPrizeIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRIZE_ID between", value1, value2, "prizeId");
            return this;
        }

        public Criteria andPrizeIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRIZE_ID not between", value1, value2, "prizeId");
            return this;
        }

        public Criteria andAwardsIdIsNull() {
            addCriterion("AWARDS_ID is null");
            return this;
        }

        public Criteria andAwardsIdIsNotNull() {
            addCriterion("AWARDS_ID is not null");
            return this;
        }

        public Criteria andAwardsIdEqualTo(BigDecimal value) {
            addCriterion("AWARDS_ID =", value, "awardsId");
            return this;
        }

        public Criteria andAwardsIdNotEqualTo(BigDecimal value) {
            addCriterion("AWARDS_ID <>", value, "awardsId");
            return this;
        }

        public Criteria andAwardsIdGreaterThan(BigDecimal value) {
            addCriterion("AWARDS_ID >", value, "awardsId");
            return this;
        }

        public Criteria andAwardsIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("AWARDS_ID >=", value, "awardsId");
            return this;
        }

        public Criteria andAwardsIdLessThan(BigDecimal value) {
            addCriterion("AWARDS_ID <", value, "awardsId");
            return this;
        }

        public Criteria andAwardsIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("AWARDS_ID <=", value, "awardsId");
            return this;
        }

        public Criteria andAwardsIdIn(List values) {
            addCriterion("AWARDS_ID in", values, "awardsId");
            return this;
        }

        public Criteria andAwardsIdNotIn(List values) {
            addCriterion("AWARDS_ID not in", values, "awardsId");
            return this;
        }

        public Criteria andAwardsIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AWARDS_ID between", value1, value2, "awardsId");
            return this;
        }

        public Criteria andAwardsIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AWARDS_ID not between", value1, value2, "awardsId");
            return this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("TYPE is null");
            return this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("TYPE is not null");
            return this;
        }

        public Criteria andTypeEqualTo(Short value) {
            addCriterion("TYPE =", value, "type");
            return this;
        }

        public Criteria andTypeNotEqualTo(Short value) {
            addCriterion("TYPE <>", value, "type");
            return this;
        }

        public Criteria andTypeGreaterThan(Short value) {
            addCriterion("TYPE >", value, "type");
            return this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Short value) {
            addCriterion("TYPE >=", value, "type");
            return this;
        }

        public Criteria andTypeLessThan(Short value) {
            addCriterion("TYPE <", value, "type");
            return this;
        }

        public Criteria andTypeLessThanOrEqualTo(Short value) {
            addCriterion("TYPE <=", value, "type");
            return this;
        }

        public Criteria andTypeIn(List values) {
            addCriterion("TYPE in", values, "type");
            return this;
        }

        public Criteria andTypeNotIn(List values) {
            addCriterion("TYPE not in", values, "type");
            return this;
        }

        public Criteria andTypeBetween(Short value1, Short value2) {
            addCriterion("TYPE between", value1, value2, "type");
            return this;
        }

        public Criteria andTypeNotBetween(Short value1, Short value2) {
            addCriterion("TYPE not between", value1, value2, "type");
            return this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return this;
        }

        public Criteria andNameIn(List values) {
            addCriterion("NAME in", values, "name");
            return this;
        }

        public Criteria andNameNotIn(List values) {
            addCriterion("NAME not in", values, "name");
            return this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return this;
        }

        public Criteria andPrizeCountIsNull() {
            addCriterion("PRIZE_COUNT is null");
            return this;
        }

        public Criteria andPrizeCountIsNotNull() {
            addCriterion("PRIZE_COUNT is not null");
            return this;
        }

        public Criteria andPrizeCountEqualTo(BigDecimal value) {
            addCriterion("PRIZE_COUNT =", value, "prizeCount");
            return this;
        }

        public Criteria andPrizeCountNotEqualTo(BigDecimal value) {
            addCriterion("PRIZE_COUNT <>", value, "prizeCount");
            return this;
        }

        public Criteria andPrizeCountGreaterThan(BigDecimal value) {
            addCriterion("PRIZE_COUNT >", value, "prizeCount");
            return this;
        }

        public Criteria andPrizeCountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PRIZE_COUNT >=", value, "prizeCount");
            return this;
        }

        public Criteria andPrizeCountLessThan(BigDecimal value) {
            addCriterion("PRIZE_COUNT <", value, "prizeCount");
            return this;
        }

        public Criteria andPrizeCountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PRIZE_COUNT <=", value, "prizeCount");
            return this;
        }

        public Criteria andPrizeCountIn(List values) {
            addCriterion("PRIZE_COUNT in", values, "prizeCount");
            return this;
        }

        public Criteria andPrizeCountNotIn(List values) {
            addCriterion("PRIZE_COUNT not in", values, "prizeCount");
            return this;
        }

        public Criteria andPrizeCountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRIZE_COUNT between", value1, value2, "prizeCount");
            return this;
        }

        public Criteria andPrizeCountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRIZE_COUNT not between", value1, value2, "prizeCount");
            return this;
        }

        public Criteria andCouponIdIsNull() {
            addCriterion("COUPON_ID is null");
            return this;
        }

        public Criteria andCouponIdIsNotNull() {
            addCriterion("COUPON_ID is not null");
            return this;
        }

        public Criteria andCouponIdEqualTo(BigDecimal value) {
            addCriterion("COUPON_ID =", value, "couponId");
            return this;
        }

        public Criteria andCouponIdNotEqualTo(BigDecimal value) {
            addCriterion("COUPON_ID <>", value, "couponId");
            return this;
        }

        public Criteria andCouponIdGreaterThan(BigDecimal value) {
            addCriterion("COUPON_ID >", value, "couponId");
            return this;
        }

        public Criteria andCouponIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("COUPON_ID >=", value, "couponId");
            return this;
        }

        public Criteria andCouponIdLessThan(BigDecimal value) {
            addCriterion("COUPON_ID <", value, "couponId");
            return this;
        }

        public Criteria andCouponIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("COUPON_ID <=", value, "couponId");
            return this;
        }

        public Criteria andCouponIdIn(List values) {
            addCriterion("COUPON_ID in", values, "couponId");
            return this;
        }

        public Criteria andCouponIdNotIn(List values) {
            addCriterion("COUPON_ID not in", values, "couponId");
            return this;
        }

        public Criteria andCouponIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COUPON_ID between", value1, value2, "couponId");
            return this;
        }

        public Criteria andCouponIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COUPON_ID not between", value1, value2, "couponId");
            return this;
        }

        public Criteria andIntegralValueIsNull() {
            addCriterion("INTEGRAL_VALUE is null");
            return this;
        }

        public Criteria andIntegralValueIsNotNull() {
            addCriterion("INTEGRAL_VALUE is not null");
            return this;
        }

        public Criteria andIntegralValueEqualTo(BigDecimal value) {
            addCriterion("INTEGRAL_VALUE =", value, "integralValue");
            return this;
        }

        public Criteria andIntegralValueNotEqualTo(BigDecimal value) {
            addCriterion("INTEGRAL_VALUE <>", value, "integralValue");
            return this;
        }

        public Criteria andIntegralValueGreaterThan(BigDecimal value) {
            addCriterion("INTEGRAL_VALUE >", value, "integralValue");
            return this;
        }

        public Criteria andIntegralValueGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("INTEGRAL_VALUE >=", value, "integralValue");
            return this;
        }

        public Criteria andIntegralValueLessThan(BigDecimal value) {
            addCriterion("INTEGRAL_VALUE <", value, "integralValue");
            return this;
        }

        public Criteria andIntegralValueLessThanOrEqualTo(BigDecimal value) {
            addCriterion("INTEGRAL_VALUE <=", value, "integralValue");
            return this;
        }

        public Criteria andIntegralValueIn(List values) {
            addCriterion("INTEGRAL_VALUE in", values, "integralValue");
            return this;
        }

        public Criteria andIntegralValueNotIn(List values) {
            addCriterion("INTEGRAL_VALUE not in", values, "integralValue");
            return this;
        }

        public Criteria andIntegralValueBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("INTEGRAL_VALUE between", value1, value2, "integralValue");
            return this;
        }

        public Criteria andIntegralValueNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("INTEGRAL_VALUE not between", value1, value2, "integralValue");
            return this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("CREATE_DATE is null");
            return this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("CREATE_DATE is not null");
            return this;
        }

        public Criteria andCreateDateEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
            return this;
        }

        public Criteria andCreateDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
            return this;
        }

        public Criteria andCreateDateGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
            return this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
            return this;
        }

        public Criteria andCreateDateLessThan(Date value) {
            addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
            return this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
            return this;
        }

        public Criteria andCreateDateIn(List values) {
            addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
            return this;
        }

        public Criteria andCreateDateNotIn(List values) {
            addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
            return this;
        }

        public Criteria andCreateDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
            return this;
        }

        public Criteria andCreateDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
            return this;
        }

        public Criteria andCreatedIdIsNull() {
            addCriterion("CREATED_ID is null");
            return this;
        }

        public Criteria andCreatedIdIsNotNull() {
            addCriterion("CREATED_ID is not null");
            return this;
        }

        public Criteria andCreatedIdEqualTo(BigDecimal value) {
            addCriterion("CREATED_ID =", value, "createdId");
            return this;
        }

        public Criteria andCreatedIdNotEqualTo(BigDecimal value) {
            addCriterion("CREATED_ID <>", value, "createdId");
            return this;
        }

        public Criteria andCreatedIdGreaterThan(BigDecimal value) {
            addCriterion("CREATED_ID >", value, "createdId");
            return this;
        }

        public Criteria andCreatedIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("CREATED_ID >=", value, "createdId");
            return this;
        }

        public Criteria andCreatedIdLessThan(BigDecimal value) {
            addCriterion("CREATED_ID <", value, "createdId");
            return this;
        }

        public Criteria andCreatedIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("CREATED_ID <=", value, "createdId");
            return this;
        }

        public Criteria andCreatedIdIn(List values) {
            addCriterion("CREATED_ID in", values, "createdId");
            return this;
        }

        public Criteria andCreatedIdNotIn(List values) {
            addCriterion("CREATED_ID not in", values, "createdId");
            return this;
        }

        public Criteria andCreatedIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CREATED_ID between", value1, value2, "createdId");
            return this;
        }

        public Criteria andCreatedIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CREATED_ID not between", value1, value2, "createdId");
            return this;
        }

        public Criteria andModifyDateIsNull() {
            addCriterion("MODIFY_DATE is null");
            return this;
        }

        public Criteria andModifyDateIsNotNull() {
            addCriterion("MODIFY_DATE is not null");
            return this;
        }

        public Criteria andModifyDateEqualTo(Date value) {
            addCriterionForJDBCDate("MODIFY_DATE =", value, "modifyDate");
            return this;
        }

        public Criteria andModifyDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("MODIFY_DATE <>", value, "modifyDate");
            return this;
        }

        public Criteria andModifyDateGreaterThan(Date value) {
            addCriterionForJDBCDate("MODIFY_DATE >", value, "modifyDate");
            return this;
        }

        public Criteria andModifyDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("MODIFY_DATE >=", value, "modifyDate");
            return this;
        }

        public Criteria andModifyDateLessThan(Date value) {
            addCriterionForJDBCDate("MODIFY_DATE <", value, "modifyDate");
            return this;
        }

        public Criteria andModifyDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("MODIFY_DATE <=", value, "modifyDate");
            return this;
        }

        public Criteria andModifyDateIn(List values) {
            addCriterionForJDBCDate("MODIFY_DATE in", values, "modifyDate");
            return this;
        }

        public Criteria andModifyDateNotIn(List values) {
            addCriterionForJDBCDate("MODIFY_DATE not in", values, "modifyDate");
            return this;
        }

        public Criteria andModifyDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("MODIFY_DATE between", value1, value2, "modifyDate");
            return this;
        }

        public Criteria andModifyDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("MODIFY_DATE not between", value1, value2, "modifyDate");
            return this;
        }

        public Criteria andModifiedIdIsNull() {
            addCriterion("MODIFIED_ID is null");
            return this;
        }

        public Criteria andModifiedIdIsNotNull() {
            addCriterion("MODIFIED_ID is not null");
            return this;
        }

        public Criteria andModifiedIdEqualTo(BigDecimal value) {
            addCriterion("MODIFIED_ID =", value, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdNotEqualTo(BigDecimal value) {
            addCriterion("MODIFIED_ID <>", value, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdGreaterThan(BigDecimal value) {
            addCriterion("MODIFIED_ID >", value, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("MODIFIED_ID >=", value, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdLessThan(BigDecimal value) {
            addCriterion("MODIFIED_ID <", value, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("MODIFIED_ID <=", value, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdIn(List values) {
            addCriterion("MODIFIED_ID in", values, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdNotIn(List values) {
            addCriterion("MODIFIED_ID not in", values, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MODIFIED_ID between", value1, value2, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MODIFIED_ID not between", value1, value2, "modifiedId");
            return this;
        }

        public Criteria andProductIdIsNull() {
            addCriterion("PRODUCT_ID is null");
            return this;
        }

        public Criteria andProductIdIsNotNull() {
            addCriterion("PRODUCT_ID is not null");
            return this;
        }

        public Criteria andProductIdEqualTo(String value) {
            addCriterion("PRODUCT_ID =", value, "productId");
            return this;
        }

        public Criteria andProductIdNotEqualTo(String value) {
            addCriterion("PRODUCT_ID <>", value, "productId");
            return this;
        }

        public Criteria andProductIdGreaterThan(String value) {
            addCriterion("PRODUCT_ID >", value, "productId");
            return this;
        }

        public Criteria andProductIdGreaterThanOrEqualTo(String value) {
            addCriterion("PRODUCT_ID >=", value, "productId");
            return this;
        }

        public Criteria andProductIdLessThan(String value) {
            addCriterion("PRODUCT_ID <", value, "productId");
            return this;
        }

        public Criteria andProductIdLessThanOrEqualTo(String value) {
            addCriterion("PRODUCT_ID <=", value, "productId");
            return this;
        }

        public Criteria andProductIdLike(String value) {
            addCriterion("PRODUCT_ID like", value, "productId");
            return this;
        }

        public Criteria andProductIdNotLike(String value) {
            addCriterion("PRODUCT_ID not like", value, "productId");
            return this;
        }

        public Criteria andProductIdIn(List values) {
            addCriterion("PRODUCT_ID in", values, "productId");
            return this;
        }

        public Criteria andProductIdNotIn(List values) {
            addCriterion("PRODUCT_ID not in", values, "productId");
            return this;
        }

        public Criteria andProductIdBetween(String value1, String value2) {
            addCriterion("PRODUCT_ID between", value1, value2, "productId");
            return this;
        }

        public Criteria andProductIdNotBetween(String value1, String value2) {
            addCriterion("PRODUCT_ID not between", value1, value2, "productId");
            return this;
        }
    }
}