package com.pltfm.cms.dao;

import com.pltfm.cms.vobject.CmsTemplate;
import com.pltfm.cms.vobject.CmsTemplateExample;

import java.sql.SQLException;
import java.util.List;

public interface CmsTemplateDAO {
    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_TEMPLATE
     *
     * @abatorgenerated Tue Sep 03 08:56:27 CST 2013
     */
    void insert(CmsTemplate record) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_TEMPLATE
     *
     * @abatorgenerated Tue Sep 03 08:56:27 CST 2013
     */
    int updateByPrimaryKey(CmsTemplate record) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_TEMPLATE
     *
     * @abatorgenerated Tue Sep 03 08:56:27 CST 2013
     */
    int updateByPrimaryKeySelective(CmsTemplate record) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_TEMPLATE
     *
     * @abatorgenerated Tue Sep 03 08:56:27 CST 2013
     */
    List selectByExample(CmsTemplateExample example) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_TEMPLATE
     *
     * @abatorgenerated Tue Sep 03 08:56:27 CST 2013
     */
    CmsTemplate selectByPrimaryKey(Integer templateId) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_TEMPLATE
     *
     * @abatorgenerated Tue Sep 03 08:56:27 CST 2013
     */
    int deleteByExample(CmsTemplateExample example) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_TEMPLATE
     *
     * @abatorgenerated Tue Sep 03 08:56:27 CST 2013
     */
    int deleteByPrimaryKey(Integer templateId) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_TEMPLATE
     *
     * @abatorgenerated Tue Sep 03 08:56:27 CST 2013
     */
    int countByExample(CmsTemplateExample example) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_TEMPLATE
     *
     * @abatorgenerated Tue Sep 03 08:56:27 CST 2013
     */
    int updateByExampleSelective(CmsTemplate record, CmsTemplateExample example) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_TEMPLATE
     *
     * @abatorgenerated Tue Sep 03 08:56:27 CST 2013
     */
    int updateByExample(CmsTemplate record, CmsTemplateExample example) throws SQLException;

    /**
     * 分页
     */
    public List queryForPage(CmsTemplate cmsTemplate) throws SQLException;

    /**
     * 根据CmsTemplate对象返回总记录数
     */
    int countByExample(CmsTemplate cmsTemplate) throws SQLException;

    /**
     * 根据templateName返回CmsTemplate对象
     */
    public CmsTemplate getTemplateByName(String templateName) throws SQLException;

    /**
     * 根据pid和name返回CmsTemplate对象
     */
    public CmsTemplate getByNameAndPid(CmsTemplate cmsTemplate) throws SQLException;

    /**
     * 根据pid和name返回CmsTemplate集合
     */
    public List getByNameOrPid(CmsTemplate cmsTemplate) throws SQLException;

    /**
     * 更新相应的Paht
     */
    public void updateAllPath(CmsTemplate cmsTemplate) throws SQLException;

    /**
     * 根据路径删除CmsTemplate对象
     */
    public void deleteByPath(CmsTemplate cmsTemplate) throws SQLException;

    /**
     * 通过站点以及模板类型查询模板信息
     */
    public List selectBySiteIdType(CmsTemplate cmsTemplate) throws Exception;

    public List querySeletedTemplateList(String sql) throws Exception;

    public List queryTemplateFilterBandTheme(CmsTemplate cmsTemplate)
            throws SQLException;

    public List queryVarTemplateList(CmsTemplate cmsTemplate)
            throws SQLException;

    public int queryVarTemplateCounts(CmsTemplate cmsTemplate) throws SQLException;

    public List queryTemplateFilterBandWindow(CmsTemplate cmsTemplate)
            throws SQLException;

    public List queryBandWindowList(CmsTemplate cmsTemplate)
            throws SQLException;

    public int queryBandWindowCounts(CmsTemplate cmsTemplate) throws SQLException;

    public int queryTemplateFilterBandWindowCounts(CmsTemplate cmsTemplate) throws SQLException;
}