package com.pltfm.cms.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.pltfm.cms.dao.CmsShopDataDAO;
import com.pltfm.cms.vobject.CmsShopData;
import com.pltfm.cms.vobject.CmsShopDataExample;

import org.springframework.stereotype.Component;

import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;

@Component(value = "cmsShopDataDAO")
public class CmsShopDataDAOImpl implements CmsShopDataDAO {
    @Resource(name = "sqlMapClient")
    private SqlMapClient sqlMapClient;

    @Override
    public Integer delete(Integer shopDataId) throws SQLException {
        Object keyObject = sqlMapClient.delete("CMS_SHOP_DATA.ibatorgenerated_delete", shopDataId);
        return (Integer) keyObject;
    }

    @Override
    public Integer insert(CmsShopData cmsShopData) throws SQLException {
        Object keyObject = sqlMapClient.insert("CMS_SHOP_DATA.ibatorgenerated_insert", cmsShopData);
        return (Integer) keyObject;

    }

    @Override
    public CmsShopData select(Integer shopDataId) throws SQLException {
        CmsShopData record = (CmsShopData) sqlMapClient.queryForObject("CMS_SHOP_DATA.ibatorgenerated_select", shopDataId);
        return record;
    }

    @Override
    public List selectList(List shopDataIds) throws SQLException {
        CmsShopData cmsShopData = new CmsShopData();
        cmsShopData.setShopDataIds(shopDataIds);
        List record = sqlMapClient.queryForList("CMS_SHOP_DATA.ibatorgenerated_selectList", cmsShopData);
        return record;
    }

    @Override
    public CmsShopData select2(CmsShopData cmsShopData) throws SQLException {
        CmsShopData record = (CmsShopData) sqlMapClient.queryForObject("CMS_SHOP_DATA.ibatorgenerated_select2", cmsShopData);
        return record;
    }

    @Override
    public List selectAll(CmsShopData cmsShopData) throws SQLException {
        List record = sqlMapClient.queryForList("CMS_SHOP_DATA.ibatorgenerated_select2", cmsShopData);
        return record;
    }


    /***
     * 供应商发布调用
     * */
    public List selectAll3(CmsShopData cmsShopData) throws SQLException {
        List record = sqlMapClient.queryForList("CMS_SHOP_DATA.ibatorgenerated_select3", cmsShopData);
        return record;
    }

    @Override
    public Integer update(CmsShopData cmsShopData) throws SQLException {
        Object keyObject = sqlMapClient.update("CMS_SHOP_DATA.ibatorgenerated_update", cmsShopData);
        return (Integer) keyObject;
    }

    public SqlMapClient getSqlMapClient() {
        return sqlMapClient;
    }

    public void setSqlMapClient(SqlMapClient sqlMapClient) {
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table KMCMS.CMS_SHOP_DATA
     *
     * @abatorgenerated Tue Dec 09 16:51:44 CST 2014
     */
    public List selectByExample(CmsShopDataExample example) throws SQLException {
        List list = sqlMapClient.queryForList("KMCMS_CMS_SHOP_DATA.abatorgenerated_selectByExample", example);
        return list;
    }

    public CmsShopData selectByPrimaryKey(Integer shopDataId) throws SQLException {
        CmsShopData key = new CmsShopData();
        key.setShopDataId(shopDataId);
        CmsShopData record = (CmsShopData) sqlMapClient.queryForObject("CMS_SHOP_DATA.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }
}