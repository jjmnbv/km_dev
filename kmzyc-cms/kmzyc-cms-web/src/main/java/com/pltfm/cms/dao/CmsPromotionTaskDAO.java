package com.pltfm.cms.dao;

import com.pltfm.cms.vobject.CmsPromotionTask;
import com.pltfm.cms.vobject.CmsPromotionTaskExample;

import java.sql.SQLException;
import java.util.List;

public interface CmsPromotionTaskDAO {
    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_PROMOTION_TASK
     *
     * @abatorgenerated Sat Oct 12 16:04:01 CST 2013
     */
    int insert(CmsPromotionTask record) throws SQLException;


    public int getSeqId() throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_PROMOTION_TASK
     *
     * @abatorgenerated Sat Oct 12 16:04:01 CST 2013
     */
    List selectByExample(CmsPromotionTaskExample example) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_PROMOTION_TASK
     *
     * @abatorgenerated Sat Oct 12 16:04:01 CST 2013
     */
    int deleteByExample(CmsPromotionTaskExample example) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_PROMOTION_TASK
     *
     * @abatorgenerated Sat Oct 12 16:04:01 CST 2013
     */
    int countByExample(CmsPromotionTask example) throws SQLException;

    int countByTask(CmsPromotionTask example) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_PROMOTION_TASK
     *
     * @abatorgenerated Sat Oct 12 16:04:01 CST 2013
     */
    int updateByExampleSelective(CmsPromotionTask record, CmsPromotionTaskExample example) throws SQLException;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_PROMOTION_TASK
     *
     * @abatorgenerated Sat Oct 12 16:04:01 CST 2013
     */
    int updateByExample(CmsPromotionTask record) throws SQLException;

    /**
     * 根据活动信息主键查询单条活动信息
     *
     * @param viewPromotionId 活动信息主键
     * @throws SQLException sql异常
     * @return 返回值
     */
    CmsPromotionTask selectByPrimaryKey(Integer id, int siteId) throws SQLException;

    /**
     * 根据活动信息主键和站点ID查询单条活动信息
     *
     * @param viewPromotionId 活动信息主键
     * @throws SQLException sql异常
     * @return 返回值
     */
    CmsPromotionTask selectByIdAndSiteId(CmsPromotionTask CMSP) throws SQLException;


    List queryForPage(CmsPromotionTask record) throws SQLException;

    /**
     * 根据活动信息主键删除活动信息
     *
     * @param viewPromotionId 活动信息主键
     * @throws SQLException sql异常
     * @return 返回值
     */
    int deleteByPrimaryKey(int record, int siteId) throws SQLException;


    /**
     * 查当前开始时间小于等于系统时间的活动对象
     *
     * @throws SQLException sql异常
     * @return 返回值
     */
    CmsPromotionTask publishObj() throws SQLException;

    /**
     * 查当前结束时间小于等于系统时间的活动对象
     *
     * @throws SQLException sql异常
     * @return 返回值
     */
    CmsPromotionTask closeObj() throws SQLException;


    //  过期活动
    public List queryExpirePromotion() throws SQLException;

    /**
     * 获取所有的活动西信息
     */
    public List getAllPromtionTask(CmsPromotionTask promotion) throws SQLException;


}