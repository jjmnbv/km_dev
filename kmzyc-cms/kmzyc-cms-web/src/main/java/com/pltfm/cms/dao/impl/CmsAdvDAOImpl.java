package com.pltfm.cms.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.pltfm.cms.dao.CmsAdvDAO;
import com.pltfm.cms.vobject.CmsAdcolumn;
import com.pltfm.cms.vobject.CmsAdv;
import com.pltfm.cms.vobject.CmsAdvExample;

import org.springframework.stereotype.Component;

import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;

@Component("cmsAdvDAO")
public class CmsAdvDAOImpl implements CmsAdvDAO {


    @Resource(name = "sqlMapClient")
    private SqlMapClient sqlMapClient;


    //
    public Integer insert(CmsAdv record) throws SQLException {
        Integer rows = (Integer) sqlMapClient.insert("CMS_ADV.abatorgenerated_insert", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_ADV
     *
     * @abatorgenerated Tue Sep 03 08:55:19 CST 2013
     */
    public int updateByPrimaryKeyWithoutBLOBs(CmsAdv record) throws SQLException {
        int rows = sqlMapClient.update("CMS_ADV.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_ADV
     *
     * @abatorgenerated Tue Sep 03 08:55:19 CST 2013
     */
    public int updateByPrimaryKeyWithBLOBs(CmsAdv record) throws SQLException {
        int rows = sqlMapClient.update("CMS_ADV.abatorgenerated_updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }


    //
    public int updateByPrimaryKeySelective(CmsAdv record) throws SQLException {
        int rows = sqlMapClient.update("CMS_ADV.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    public List selectByExampleWithoutBLOBs(CmsAdvExample example) throws SQLException {
        List list = sqlMapClient.queryForList("CMS_ADV.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_ADV
     *
     * @abatorgenerated Tue Sep 03 08:55:19 CST 2013
     */
    public List selectByExampleWithBLOBs(CmsAdvExample example) throws SQLException {
        List list = sqlMapClient.queryForList("CMS_ADV.abatorgenerated_selectByExampleWithBLOBs", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_ADV
     *
     * @abatorgenerated Tue Sep 03 08:55:19 CST 2013
     */
    public CmsAdv selectByPrimaryKey(Integer advId) throws SQLException {
        CmsAdv key = new CmsAdv();
        key.setAdvId(advId);
        CmsAdv record = (CmsAdv) sqlMapClient.queryForObject("CMS_ADV.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }


    public int deleteByExample(CmsAdvExample example) throws SQLException {
        int rows = sqlMapClient.delete("CMS_ADV.abatorgenerated_deleteByExample", example);
        return rows;
    }

    public int deleteByPrimaryKey(Integer advId) throws SQLException {
        CmsAdv key = new CmsAdv();
        key.setAdvId(advId);
        int rows = sqlMapClient.delete("CMS_ADV.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    //
    public int countByExample(CmsAdv example) throws SQLException {
        Integer count = (Integer) sqlMapClient.queryForObject("CMS_ADV.abatorgenerated_countByAdv", example);
        return count.intValue();
    }

    /**
     * 根据广告查询条件获取记录数
     *
     * @param cmsAdv 广告
     * @return 记录数
     */
    public Integer countByAdv(CmsAdv cmsAdv) throws SQLException {
        Integer count = (Integer) sqlMapClient.queryForObject("CMS_ADV.abatorgenerated_countBySupplierAdv", cmsAdv);
        return count;
    }


    public int updateByExampleSelective(CmsAdv record, CmsAdvExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("CMS_ADV.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }


    public int updateByExampleWithBLOBs(CmsAdv record, CmsAdvExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("CMS_ADV.abatorgenerated_updateByExampleWithBLOBs", parms);
        return rows;
    }


    public int updateByExampleWithoutBLOBs(CmsAdv record, CmsAdvExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("CMS_ADV.abatorgenerated_updateByExample", parms);
        return rows;
    }


    private static class UpdateByExampleParms extends CmsAdvExample {
        private Object record;

        public UpdateByExampleParms(Object record, CmsAdvExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

    @Override
    public List adcolumnList(int i) throws SQLException {
        //abatorgenerated_AdcolumnListData  CMS_ADCOLUMN.abatorgenerated_insert
        CmsAdcolumn adc = new CmsAdcolumn();
        adc.setSiteId(i);
        return sqlMapClient.queryForList("CMS_ADCOLUMN.abatorgenerated_AdcolumnListData", adc);
    }

    //返回广告列表
    public List queryAdvList(CmsAdv cmsAdv) throws SQLException {

        return sqlMapClient.queryForList("CMS_ADV.abatorgenerated_queryAdvList", cmsAdv);
    }

    //自动检查广告是否过期
    public List checkAllAdv() throws SQLException {

        return sqlMapClient.queryForList("CMS_ADV.abatorgenerated_checkAllAdv");
    }


    //
    @Override
    public List queryForPage(CmsAdv record) throws SQLException {

        return sqlMapClient.queryForList("CMS_ADV.abatorgenerated_pageByAdv", record);
    }

    public SqlMapClient getSqlMapClient() {
        return sqlMapClient;
    }

    public void setSqlMapClient(SqlMapClient sqlMapClient) {
        this.sqlMapClient = sqlMapClient;
    }

    @Override
    public CmsAdv byid(Integer Advid) throws SQLException {

        return (CmsAdv) sqlMapClient.queryForObject("CMS_ADV.abatorgenerated_ByIDAdvData", Advid);
    }

    @Override
    public Integer countByAdvname(CmsAdv cmsAdv) throws SQLException {
        // TODO Auto-generated method stub
        return (Integer) sqlMapClient.queryForObject("CMS_ADV.abatorgenerated_countAdv", cmsAdv);
    }

    @Override
    public List queryUpdateAdvTempList(CmsAdcolumn cmsAdcolumn)
            throws SQLException {

        return sqlMapClient.queryForList("CMS_ADV.ibatorgenerated_queryUpdateAdvTempList", cmsAdcolumn);
    }


}