package com.pltfm.cms.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class LotteryAwardsExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table LOTTERY_AWARDS
     *
     * @ibatorgenerated Fri Sep 05 10:39:40 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table LOTTERY_AWARDS
     *
     * @ibatorgenerated Fri Sep 05 10:39:40 CST 2014
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_AWARDS
     *
     * @ibatorgenerated Fri Sep 05 10:39:40 CST 2014
     */
    public LotteryAwardsExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_AWARDS
     *
     * @ibatorgenerated Fri Sep 05 10:39:40 CST 2014
     */
    protected LotteryAwardsExample(LotteryAwardsExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_AWARDS
     *
     * @ibatorgenerated Fri Sep 05 10:39:40 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_AWARDS
     *
     * @ibatorgenerated Fri Sep 05 10:39:40 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_AWARDS
     *
     * @ibatorgenerated Fri Sep 05 10:39:40 CST 2014
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_AWARDS
     *
     * @ibatorgenerated Fri Sep 05 10:39:40 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_AWARDS
     *
     * @ibatorgenerated Fri Sep 05 10:39:40 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_AWARDS
     *
     * @ibatorgenerated Fri Sep 05 10:39:40 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table LOTTERY_AWARDS
     *
     * @ibatorgenerated Fri Sep 05 10:39:40 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table LOTTERY_AWARDS
     *
     * @ibatorgenerated Fri Sep 05 10:39:40 CST 2014
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                    || criteriaWithSingleValue.size() > 0
                    || criteriaWithListValue.size() > 0
                    || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List dateList = new ArrayList();
            Iterator iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andAwardsIdIsNull() {
            addCriterion("AWARDS_ID is null");
            return this;
        }

        public Criteria andAwardsIdIsNotNull() {
            addCriterion("AWARDS_ID is not null");
            return this;
        }

        public Criteria andAwardsIdEqualTo(BigDecimal value) {
            addCriterion("AWARDS_ID =", value, "awardsId");
            return this;
        }

        public Criteria andAwardsIdNotEqualTo(BigDecimal value) {
            addCriterion("AWARDS_ID <>", value, "awardsId");
            return this;
        }

        public Criteria andAwardsIdGreaterThan(BigDecimal value) {
            addCriterion("AWARDS_ID >", value, "awardsId");
            return this;
        }

        public Criteria andAwardsIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("AWARDS_ID >=", value, "awardsId");
            return this;
        }

        public Criteria andAwardsIdLessThan(BigDecimal value) {
            addCriterion("AWARDS_ID <", value, "awardsId");
            return this;
        }

        public Criteria andAwardsIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("AWARDS_ID <=", value, "awardsId");
            return this;
        }

        public Criteria andAwardsIdIn(List values) {
            addCriterion("AWARDS_ID in", values, "awardsId");
            return this;
        }

        public Criteria andAwardsIdNotIn(List values) {
            addCriterion("AWARDS_ID not in", values, "awardsId");
            return this;
        }

        public Criteria andAwardsIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AWARDS_ID between", value1, value2, "awardsId");
            return this;
        }

        public Criteria andAwardsIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AWARDS_ID not between", value1, value2, "awardsId");
            return this;
        }

        public Criteria andLuckDrawIdIsNull() {
            addCriterion("LUCK_DRAW_ID is null");
            return this;
        }

        public Criteria andLuckDrawIdIsNotNull() {
            addCriterion("LUCK_DRAW_ID is not null");
            return this;
        }

        public Criteria andLuckDrawIdEqualTo(BigDecimal value) {
            addCriterion("LUCK_DRAW_ID =", value, "luckDrawId");
            return this;
        }

        public Criteria andLuckDrawIdNotEqualTo(BigDecimal value) {
            addCriterion("LUCK_DRAW_ID <>", value, "luckDrawId");
            return this;
        }

        public Criteria andLuckDrawIdGreaterThan(BigDecimal value) {
            addCriterion("LUCK_DRAW_ID >", value, "luckDrawId");
            return this;
        }

        public Criteria andLuckDrawIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("LUCK_DRAW_ID >=", value, "luckDrawId");
            return this;
        }

        public Criteria andLuckDrawIdLessThan(BigDecimal value) {
            addCriterion("LUCK_DRAW_ID <", value, "luckDrawId");
            return this;
        }

        public Criteria andLuckDrawIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("LUCK_DRAW_ID <=", value, "luckDrawId");
            return this;
        }

        public Criteria andLuckDrawIdIn(List values) {
            addCriterion("LUCK_DRAW_ID in", values, "luckDrawId");
            return this;
        }

        public Criteria andLuckDrawIdNotIn(List values) {
            addCriterion("LUCK_DRAW_ID not in", values, "luckDrawId");
            return this;
        }

        public Criteria andLuckDrawIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LUCK_DRAW_ID between", value1, value2, "luckDrawId");
            return this;
        }

        public Criteria andLuckDrawIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LUCK_DRAW_ID not between", value1, value2, "luckDrawId");
            return this;
        }

        public Criteria andTitleIsNull() {
            addCriterion("TITLE is null");
            return this;
        }

        public Criteria andTitleIsNotNull() {
            addCriterion("TITLE is not null");
            return this;
        }

        public Criteria andTitleEqualTo(String value) {
            addCriterion("TITLE =", value, "title");
            return this;
        }

        public Criteria andTitleNotEqualTo(String value) {
            addCriterion("TITLE <>", value, "title");
            return this;
        }

        public Criteria andTitleGreaterThan(String value) {
            addCriterion("TITLE >", value, "title");
            return this;
        }

        public Criteria andTitleGreaterThanOrEqualTo(String value) {
            addCriterion("TITLE >=", value, "title");
            return this;
        }

        public Criteria andTitleLessThan(String value) {
            addCriterion("TITLE <", value, "title");
            return this;
        }

        public Criteria andTitleLessThanOrEqualTo(String value) {
            addCriterion("TITLE <=", value, "title");
            return this;
        }

        public Criteria andTitleLike(String value) {
            addCriterion("TITLE like", value, "title");
            return this;
        }

        public Criteria andTitleNotLike(String value) {
            addCriterion("TITLE not like", value, "title");
            return this;
        }

        public Criteria andTitleIn(List values) {
            addCriterion("TITLE in", values, "title");
            return this;
        }

        public Criteria andTitleNotIn(List values) {
            addCriterion("TITLE not in", values, "title");
            return this;
        }

        public Criteria andTitleBetween(String value1, String value2) {
            addCriterion("TITLE between", value1, value2, "title");
            return this;
        }

        public Criteria andTitleNotBetween(String value1, String value2) {
            addCriterion("TITLE not between", value1, value2, "title");
            return this;
        }

        public Criteria andProbabilityIsNull() {
            addCriterion("PROBABILITY is null");
            return this;
        }

        public Criteria andProbabilityIsNotNull() {
            addCriterion("PROBABILITY is not null");
            return this;
        }

        public Criteria andProbabilityEqualTo(BigDecimal value) {
            addCriterion("PROBABILITY =", value, "probability");
            return this;
        }

        public Criteria andProbabilityNotEqualTo(BigDecimal value) {
            addCriterion("PROBABILITY <>", value, "probability");
            return this;
        }

        public Criteria andProbabilityGreaterThan(BigDecimal value) {
            addCriterion("PROBABILITY >", value, "probability");
            return this;
        }

        public Criteria andProbabilityGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PROBABILITY >=", value, "probability");
            return this;
        }

        public Criteria andProbabilityLessThan(BigDecimal value) {
            addCriterion("PROBABILITY <", value, "probability");
            return this;
        }

        public Criteria andProbabilityLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PROBABILITY <=", value, "probability");
            return this;
        }

        public Criteria andProbabilityIn(List values) {
            addCriterion("PROBABILITY in", values, "probability");
            return this;
        }

        public Criteria andProbabilityNotIn(List values) {
            addCriterion("PROBABILITY not in", values, "probability");
            return this;
        }

        public Criteria andProbabilityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PROBABILITY between", value1, value2, "probability");
            return this;
        }

        public Criteria andProbabilityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PROBABILITY not between", value1, value2, "probability");
            return this;
        }

        public Criteria andAwardsCountIsNull() {
            addCriterion("AWARDS_COUNT is null");
            return this;
        }

        public Criteria andAwardsCountIsNotNull() {
            addCriterion("AWARDS_COUNT is not null");
            return this;
        }

        public Criteria andAwardsCountEqualTo(BigDecimal value) {
            addCriterion("AWARDS_COUNT =", value, "awardsCount");
            return this;
        }

        public Criteria andAwardsCountNotEqualTo(BigDecimal value) {
            addCriterion("AWARDS_COUNT <>", value, "awardsCount");
            return this;
        }

        public Criteria andAwardsCountGreaterThan(BigDecimal value) {
            addCriterion("AWARDS_COUNT >", value, "awardsCount");
            return this;
        }

        public Criteria andAwardsCountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("AWARDS_COUNT >=", value, "awardsCount");
            return this;
        }

        public Criteria andAwardsCountLessThan(BigDecimal value) {
            addCriterion("AWARDS_COUNT <", value, "awardsCount");
            return this;
        }

        public Criteria andAwardsCountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("AWARDS_COUNT <=", value, "awardsCount");
            return this;
        }

        public Criteria andAwardsCountIn(List values) {
            addCriterion("AWARDS_COUNT in", values, "awardsCount");
            return this;
        }

        public Criteria andAwardsCountNotIn(List values) {
            addCriterion("AWARDS_COUNT not in", values, "awardsCount");
            return this;
        }

        public Criteria andAwardsCountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AWARDS_COUNT between", value1, value2, "awardsCount");
            return this;
        }

        public Criteria andAwardsCountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AWARDS_COUNT not between", value1, value2, "awardsCount");
            return this;
        }

        public Criteria andAwardsDateIsNull() {
            addCriterion("AWARDS_DATE is null");
            return this;
        }

        public Criteria andAwardsDateIsNotNull() {
            addCriterion("AWARDS_DATE is not null");
            return this;
        }

        public Criteria andAwardsDateEqualTo(Date value) {
            addCriterionForJDBCDate("AWARDS_DATE =", value, "awardsDate");
            return this;
        }

        public Criteria andAwardsDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("AWARDS_DATE <>", value, "awardsDate");
            return this;
        }

        public Criteria andAwardsDateGreaterThan(Date value) {
            addCriterionForJDBCDate("AWARDS_DATE >", value, "awardsDate");
            return this;
        }

        public Criteria andAwardsDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("AWARDS_DATE >=", value, "awardsDate");
            return this;
        }

        public Criteria andAwardsDateLessThan(Date value) {
            addCriterionForJDBCDate("AWARDS_DATE <", value, "awardsDate");
            return this;
        }

        public Criteria andAwardsDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("AWARDS_DATE <=", value, "awardsDate");
            return this;
        }

        public Criteria andAwardsDateIn(List values) {
            addCriterionForJDBCDate("AWARDS_DATE in", values, "awardsDate");
            return this;
        }

        public Criteria andAwardsDateNotIn(List values) {
            addCriterionForJDBCDate("AWARDS_DATE not in", values, "awardsDate");
            return this;
        }

        public Criteria andAwardsDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("AWARDS_DATE between", value1, value2, "awardsDate");
            return this;
        }

        public Criteria andAwardsDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("AWARDS_DATE not between", value1, value2, "awardsDate");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS is not null");
            return this;
        }

        public Criteria andStatusEqualTo(Short value) {
            addCriterion("STATUS =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(Short value) {
            addCriterion("STATUS <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(Short value) {
            addCriterion("STATUS >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("STATUS >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(Short value) {
            addCriterion("STATUS <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(Short value) {
            addCriterion("STATUS <=", value, "status");
            return this;
        }

        public Criteria andStatusIn(List values) {
            addCriterion("STATUS in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List values) {
            addCriterion("STATUS not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(Short value1, Short value2) {
            addCriterion("STATUS between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(Short value1, Short value2) {
            addCriterion("STATUS not between", value1, value2, "status");
            return this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("CREATE_DATE is null");
            return this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("CREATE_DATE is not null");
            return this;
        }

        public Criteria andCreateDateEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
            return this;
        }

        public Criteria andCreateDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
            return this;
        }

        public Criteria andCreateDateGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
            return this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
            return this;
        }

        public Criteria andCreateDateLessThan(Date value) {
            addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
            return this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
            return this;
        }

        public Criteria andCreateDateIn(List values) {
            addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
            return this;
        }

        public Criteria andCreateDateNotIn(List values) {
            addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
            return this;
        }

        public Criteria andCreateDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
            return this;
        }

        public Criteria andCreateDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
            return this;
        }

        public Criteria andCreatedIdIsNull() {
            addCriterion("CREATED_ID is null");
            return this;
        }

        public Criteria andCreatedIdIsNotNull() {
            addCriterion("CREATED_ID is not null");
            return this;
        }

        public Criteria andCreatedIdEqualTo(BigDecimal value) {
            addCriterion("CREATED_ID =", value, "createdId");
            return this;
        }

        public Criteria andCreatedIdNotEqualTo(BigDecimal value) {
            addCriterion("CREATED_ID <>", value, "createdId");
            return this;
        }

        public Criteria andCreatedIdGreaterThan(BigDecimal value) {
            addCriterion("CREATED_ID >", value, "createdId");
            return this;
        }

        public Criteria andCreatedIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("CREATED_ID >=", value, "createdId");
            return this;
        }

        public Criteria andCreatedIdLessThan(BigDecimal value) {
            addCriterion("CREATED_ID <", value, "createdId");
            return this;
        }

        public Criteria andCreatedIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("CREATED_ID <=", value, "createdId");
            return this;
        }

        public Criteria andCreatedIdIn(List values) {
            addCriterion("CREATED_ID in", values, "createdId");
            return this;
        }

        public Criteria andCreatedIdNotIn(List values) {
            addCriterion("CREATED_ID not in", values, "createdId");
            return this;
        }

        public Criteria andCreatedIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CREATED_ID between", value1, value2, "createdId");
            return this;
        }

        public Criteria andCreatedIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CREATED_ID not between", value1, value2, "createdId");
            return this;
        }

        public Criteria andModifyDateIsNull() {
            addCriterion("MODIFY_DATE is null");
            return this;
        }

        public Criteria andModifyDateIsNotNull() {
            addCriterion("MODIFY_DATE is not null");
            return this;
        }

        public Criteria andModifyDateEqualTo(Date value) {
            addCriterionForJDBCDate("MODIFY_DATE =", value, "modifyDate");
            return this;
        }

        public Criteria andModifyDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("MODIFY_DATE <>", value, "modifyDate");
            return this;
        }

        public Criteria andModifyDateGreaterThan(Date value) {
            addCriterionForJDBCDate("MODIFY_DATE >", value, "modifyDate");
            return this;
        }

        public Criteria andModifyDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("MODIFY_DATE >=", value, "modifyDate");
            return this;
        }

        public Criteria andModifyDateLessThan(Date value) {
            addCriterionForJDBCDate("MODIFY_DATE <", value, "modifyDate");
            return this;
        }

        public Criteria andModifyDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("MODIFY_DATE <=", value, "modifyDate");
            return this;
        }

        public Criteria andModifyDateIn(List values) {
            addCriterionForJDBCDate("MODIFY_DATE in", values, "modifyDate");
            return this;
        }

        public Criteria andModifyDateNotIn(List values) {
            addCriterionForJDBCDate("MODIFY_DATE not in", values, "modifyDate");
            return this;
        }

        public Criteria andModifyDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("MODIFY_DATE between", value1, value2, "modifyDate");
            return this;
        }

        public Criteria andModifyDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("MODIFY_DATE not between", value1, value2, "modifyDate");
            return this;
        }

        public Criteria andModifiedIdIsNull() {
            addCriterion("MODIFIED_ID is null");
            return this;
        }

        public Criteria andModifiedIdIsNotNull() {
            addCriterion("MODIFIED_ID is not null");
            return this;
        }

        public Criteria andModifiedIdEqualTo(BigDecimal value) {
            addCriterion("MODIFIED_ID =", value, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdNotEqualTo(BigDecimal value) {
            addCriterion("MODIFIED_ID <>", value, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdGreaterThan(BigDecimal value) {
            addCriterion("MODIFIED_ID >", value, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("MODIFIED_ID >=", value, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdLessThan(BigDecimal value) {
            addCriterion("MODIFIED_ID <", value, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("MODIFIED_ID <=", value, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdIn(List values) {
            addCriterion("MODIFIED_ID in", values, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdNotIn(List values) {
            addCriterion("MODIFIED_ID not in", values, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MODIFIED_ID between", value1, value2, "modifiedId");
            return this;
        }

        public Criteria andModifiedIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MODIFIED_ID not between", value1, value2, "modifiedId");
            return this;
        }
    }
}