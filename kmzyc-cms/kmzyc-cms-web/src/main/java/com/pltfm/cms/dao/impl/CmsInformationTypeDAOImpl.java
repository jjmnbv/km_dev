package com.pltfm.cms.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.pltfm.cms.dao.CmsInformationTypeDAO;
import com.pltfm.cms.vobject.CmsInformationType;
import com.pltfm.cms.vobject.CmsInformationTypeExample;

import org.springframework.stereotype.Component;

import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;

@Component("cmsInformationTypeDAO")
public class CmsInformationTypeDAOImpl implements CmsInformationTypeDAO {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table CMS_INFORMATION_TYPE
     *
     * @abatorgenerated Tue Sep 10 09:39:44 CST 2013
     */

    @Resource(name = "sqlMapClient")
    private SqlMapClient sqlMapClient;


    public void insert(CmsInformationType record) throws SQLException {
        sqlMapClient.insert("CMS_INFORMATION_TYPE.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_INFORMATION_TYPE
     *
     * @abatorgenerated Tue Sep 10 09:39:44 CST 2013
     */
    public int updateByPrimaryKey(CmsInformationType record) throws SQLException {
        int rows = sqlMapClient.update("CMS_INFORMATION_TYPE.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_INFORMATION_TYPE
     *
     * @abatorgenerated Tue Sep 10 09:39:44 CST 2013
     */
    public int updateByPrimaryKeySelective(CmsInformationType record) throws SQLException {
        int rows = sqlMapClient.update("CMS_INFORMATION_TYPE.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_INFORMATION_TYPE
     *
     * @abatorgenerated Tue Sep 10 09:39:44 CST 2013
     */
    public List selectByExample(CmsInformationTypeExample example) throws SQLException {
        List list = sqlMapClient.queryForList("CMS_INFORMATION_TYPE.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_INFORMATION_TYPE
     *
     * @abatorgenerated Tue Sep 10 09:39:44 CST 2013
     */
    public CmsInformationType selectByPrimaryKey(Integer id) throws SQLException {
        CmsInformationType key = new CmsInformationType();
        key.setId(id);
        CmsInformationType record = (CmsInformationType) sqlMapClient.queryForObject("CMS_INFORMATION_TYPE.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_INFORMATION_TYPE
     *
     * @abatorgenerated Tue Sep 10 09:39:44 CST 2013
     */
    public int deleteByExample(CmsInformationTypeExample example) throws SQLException {
        int rows = sqlMapClient.delete("CMS_INFORMATION_TYPE.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_INFORMATION_TYPE
     *
     * @abatorgenerated Tue Sep 10 09:39:44 CST 2013
     */
    public int deleteByPrimaryKey(Integer id) throws SQLException {
        CmsInformationType key = new CmsInformationType();
        key.setId(id);
        int rows = sqlMapClient.delete("CMS_INFORMATION_TYPE.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_INFORMATION_TYPE
     *
     * @abatorgenerated Tue Sep 10 09:39:44 CST 2013
     */
    public int countByExample(CmsInformationType example) throws SQLException {
        Integer count = (Integer) sqlMapClient.queryForObject("CMS_INFORMATION_TYPE.abatorgenerated_countByExample", example);
        return count.intValue();
    }

    public int countByName(CmsInformationType example) throws SQLException {
        Integer count = (Integer) sqlMapClient.queryForObject("CMS_INFORMATION_TYPE.abatorgenerated_countByName", example);
        return count.intValue();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_INFORMATION_TYPE
     *
     * @abatorgenerated Tue Sep 10 09:39:44 CST 2013
     */
    public int updateByExampleSelective(CmsInformationType record, CmsInformationTypeExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("CMS_INFORMATION_TYPE.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table CMS_INFORMATION_TYPE
     *
     * @abatorgenerated Tue Sep 10 09:39:44 CST 2013
     */
    public int updateByExample(CmsInformationType record, CmsInformationTypeExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("CMS_INFORMATION_TYPE.abatorgenerated_updateByExample", parms);
        return rows;
    }

    private static class UpdateByExampleParms extends CmsInformationTypeExample {
        private Object record;

        public UpdateByExampleParms(Object record, CmsInformationTypeExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

    @Override
    public List queryForPage(CmsInformationType record) throws SQLException {

        return sqlMapClient.queryForList("CMS_INFORMATION_TYPE.abatorgenerated_pageByInformation", record);
    }

    @Override
    public CmsInformationType byid(Integer inforid) throws SQLException {

        return (CmsInformationType) sqlMapClient.queryForObject("CMS_INFORMATION_TYPE.abatorgenerated_ByIDinforData", inforid);
    }

    @Override
    public int byInforId(Integer InforId) throws SQLException {
        Integer count = (Integer) sqlMapClient.queryForObject("CMS_INFORMATION.abatorgenerated_ByInforId", InforId);
        return count;
    }

    @Override
    public CmsInformationType queryInfoTypeByTypeCode(
            CmsInformationType cmsInformationType) throws SQLException {
        // TODO Auto-generated method stub
        return (CmsInformationType) sqlMapClient.queryForObject("CMS_INFORMATION_TYPE.abatorgenerated_queryInfoTypeByTypeCode", cmsInformationType);
    }
}