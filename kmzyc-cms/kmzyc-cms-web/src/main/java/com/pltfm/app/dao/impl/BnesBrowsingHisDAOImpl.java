package com.pltfm.app.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.pltfm.app.dao.BnesBrowsingHisDAO;
import com.pltfm.app.vobject.BnesBrowsingHis;
import com.pltfm.app.vobject.BnesBrowsingHisExample;
import com.pltfm.app.vobject.KeyWords;
import com.pltfm.shiro.vobject.User;

import org.springframework.stereotype.Component;

import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;

/**
 * 客户浏览信息
 *
 * @author cjm
 * @since 2013-10-24
 */
@Component(value = "bnesBrowsingHisDAO")
public class BnesBrowsingHisDAOImpl implements BnesBrowsingHisDAO {

    /**
     * 数据源
     */
    @Resource(name = "sqlMapClient")
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Abator for iBATIS. This method corresponds
     * to the database table BNES_BROWSING_HIS
     *
     * @abatorgenerated Thu Oct 24 16:39:19 CST 2013
     */
    public void insert(BnesBrowsingHis record) throws SQLException {
        sqlMapClient.insert("BNES_BROWSING_HIS.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds
     * to the database table BNES_BROWSING_HIS
     *
     * @abatorgenerated Thu Oct 24 16:39:19 CST 2013
     */
    public int updateByPrimaryKey(BnesBrowsingHis record) throws SQLException {
        int rows = sqlMapClient.update("BNES_BROWSING_HIS.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds
     * to the database table BNES_BROWSING_HIS
     *
     * @abatorgenerated Thu Oct 24 16:39:19 CST 2013
     */
    public int updateByPrimaryKeySelective(BnesBrowsingHis record) throws SQLException {
        int rows = sqlMapClient.update("BNES_BROWSING_HIS.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds
     * to the database table BNES_BROWSING_HIS
     *
     * @abatorgenerated Thu Oct 24 16:39:19 CST 2013
     */
    public List selectByExample(BnesBrowsingHisExample example) throws SQLException {
        List list = sqlMapClient.queryForList("BNES_BROWSING_HIS.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds
     * to the database table BNES_BROWSING_HIS
     *
     * @abatorgenerated Thu Oct 24 16:39:19 CST 2013
     */
    public BnesBrowsingHis selectByPrimaryKey(BigDecimal browsingHisId) throws SQLException {
        BnesBrowsingHis key = new BnesBrowsingHis();
        key.setBrowsingHisId(browsingHisId);
        BnesBrowsingHis record = (BnesBrowsingHis) sqlMapClient.queryForObject(
                "BNES_BROWSING_HIS.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds
     * to the database table BNES_BROWSING_HIS
     *
     * @abatorgenerated Thu Oct 24 16:39:19 CST 2013
     */
    public int deleteByExample(BnesBrowsingHisExample example) throws SQLException {
        int rows = sqlMapClient.delete("BNES_BROWSING_HIS.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds
     * to the database table BNES_BROWSING_HIS
     *
     * @abatorgenerated Thu Oct 24 16:39:19 CST 2013
     */
    public int deleteByPrimaryKey(BigDecimal browsingHisId) throws SQLException {
        BnesBrowsingHis key = new BnesBrowsingHis();
        key.setBrowsingHisId(browsingHisId);
        int rows = sqlMapClient.delete("BNES_BROWSING_HIS.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds
     * to the database table BNES_BROWSING_HIS
     *
     * @abatorgenerated Thu Oct 24 16:39:19 CST 2013
     */
    public int countByExample(BnesBrowsingHisExample example) throws SQLException {
        Integer count = (Integer) sqlMapClient.queryForObject("BNES_BROWSING_HIS.abatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds
     * to the database table BNES_BROWSING_HIS
     *
     * @abatorgenerated Thu Oct 24 16:39:19 CST 2013
     */
    public int updateByExampleSelective(BnesBrowsingHis record, BnesBrowsingHisExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("BNES_BROWSING_HIS.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds
     * to the database table BNES_BROWSING_HIS
     *
     * @abatorgenerated Thu Oct 24 16:39:19 CST 2013
     */
    public int updateByExample(BnesBrowsingHis record, BnesBrowsingHisExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("BNES_BROWSING_HIS.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * 根据SKUCode查询总点击量达到10000
     */
    public String count(String skuCode) throws SQLException {
        return (String) sqlMapClient.queryForObject("BNES_BROWSING_HIS.abatorgenerated_count", skuCode);
    }

    /**
     * This class was generated by Abator for iBATIS. This class corresponds to
     * the database table BNES_BROWSING_HIS
     *
     * @abatorgenerated Thu Oct 24 16:39:19 CST 2013
     */
    private static class UpdateByExampleParms extends BnesBrowsingHisExample {
        private Object record;

        public UpdateByExampleParms(Object record, BnesBrowsingHisExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

    /**
     * 查询供应商账户和密码是否一致
     */
    @Override
    public User queryUser(User user) throws SQLException {
        User u = null;
        u = (User) sqlMapClient.queryForObject("BNES_BROWSING_HIS.findUser", user);
        return u;
    }

    /**
     * 获取敏感词
     */
    @Override
    public List<KeyWords> findKeyWords() throws SQLException {

        return sqlMapClient.queryForList("BNES_BROWSING_HIS.Words");
    }

    /**
     * 根据店铺Id查询供应商用户名
     *
     * @param shopId 店铺Id
     */
    @Override
    public String selectBySupplierName(String shopId) throws SQLException {
        return (String) sqlMapClient.queryForObject("BNES_BROWSING_HIS.abatorgenerated_selectBySupplierName", shopId);
    }
}
