package com.pltfm.app.vobject;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PromotionTypeExample implements Serializable {
    private static final long serialVersionUID = 6324541541055138274L;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table PROMOTION_TYPE
     *
     * @abatorgenerated Wed Sep 04 16:24:05 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table PROMOTION_TYPE
     *
     * @abatorgenerated Wed Sep 04 16:24:05 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table PROMOTION_TYPE
     *
     * @abatorgenerated Wed Sep 04 16:24:05 CST 2013
     */
    public PromotionTypeExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table PROMOTION_TYPE
     *
     * @abatorgenerated Wed Sep 04 16:24:05 CST 2013
     */
    protected PromotionTypeExample(PromotionTypeExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table PROMOTION_TYPE
     *
     * @abatorgenerated Wed Sep 04 16:24:05 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table PROMOTION_TYPE
     *
     * @abatorgenerated Wed Sep 04 16:24:05 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table PROMOTION_TYPE
     *
     * @abatorgenerated Wed Sep 04 16:24:05 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table PROMOTION_TYPE
     *
     * @abatorgenerated Wed Sep 04 16:24:05 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table PROMOTION_TYPE
     *
     * @abatorgenerated Wed Sep 04 16:24:05 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table PROMOTION_TYPE
     *
     * @abatorgenerated Wed Sep 04 16:24:05 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table PROMOTION_TYPE
     *
     * @abatorgenerated Wed Sep 04 16:24:05 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table PROMOTION_TYPE
     *
     * @abatorgenerated Wed Sep 04 16:24:05 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                    || criteriaWithSingleValue.size() > 0
                    || criteriaWithListValue.size() > 0
                    || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andPromotionTypeIdIsNull() {
            addCriterion("PROMOTION_TYPE_ID is null");
            return this;
        }

        public Criteria andPromotionTypeIdIsNotNull() {
            addCriterion("PROMOTION_TYPE_ID is not null");
            return this;
        }

        public Criteria andPromotionTypeIdEqualTo(Integer value) {
            addCriterion("PROMOTION_TYPE_ID =", value, "promotionTypeId");
            return this;
        }

        public Criteria andPromotionTypeIdNotEqualTo(Integer value) {
            addCriterion("PROMOTION_TYPE_ID <>", value, "promotionTypeId");
            return this;
        }

        public Criteria andPromotionTypeIdGreaterThan(Integer value) {
            addCriterion("PROMOTION_TYPE_ID >", value, "promotionTypeId");
            return this;
        }

        public Criteria andPromotionTypeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PROMOTION_TYPE_ID >=", value, "promotionTypeId");
            return this;
        }

        public Criteria andPromotionTypeIdLessThan(Integer value) {
            addCriterion("PROMOTION_TYPE_ID <", value, "promotionTypeId");
            return this;
        }

        public Criteria andPromotionTypeIdLessThanOrEqualTo(Integer value) {
            addCriterion("PROMOTION_TYPE_ID <=", value, "promotionTypeId");
            return this;
        }

        public Criteria andPromotionTypeIdIn(List values) {
            addCriterion("PROMOTION_TYPE_ID in", values, "promotionTypeId");
            return this;
        }

        public Criteria andPromotionTypeIdNotIn(List values) {
            addCriterion("PROMOTION_TYPE_ID not in", values, "promotionTypeId");
            return this;
        }

        public Criteria andPromotionTypeIdBetween(Integer value1, Integer value2) {
            addCriterion("PROMOTION_TYPE_ID between", value1, value2, "promotionTypeId");
            return this;
        }

        public Criteria andPromotionTypeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PROMOTION_TYPE_ID not between", value1, value2, "promotionTypeId");
            return this;
        }

        public Criteria andPromotionTypeNameIsNull() {
            addCriterion("PROMOTION_TYPE_NAME is null");
            return this;
        }

        public Criteria andPromotionTypeNameIsNotNull() {
            addCriterion("PROMOTION_TYPE_NAME is not null");
            return this;
        }

        public Criteria andPromotionTypeNameEqualTo(String value) {
            addCriterion("PROMOTION_TYPE_NAME =", value, "promotionTypeName");
            return this;
        }

        public Criteria andPromotionTypeNameNotEqualTo(String value) {
            addCriterion("PROMOTION_TYPE_NAME <>", value, "promotionTypeName");
            return this;
        }

        public Criteria andPromotionTypeNameGreaterThan(String value) {
            addCriterion("PROMOTION_TYPE_NAME >", value, "promotionTypeName");
            return this;
        }

        public Criteria andPromotionTypeNameGreaterThanOrEqualTo(String value) {
            addCriterion("PROMOTION_TYPE_NAME >=", value, "promotionTypeName");
            return this;
        }

        public Criteria andPromotionTypeNameLessThan(String value) {
            addCriterion("PROMOTION_TYPE_NAME <", value, "promotionTypeName");
            return this;
        }

        public Criteria andPromotionTypeNameLessThanOrEqualTo(String value) {
            addCriterion("PROMOTION_TYPE_NAME <=", value, "promotionTypeName");
            return this;
        }

        public Criteria andPromotionTypeNameLike(String value) {
            addCriterion("PROMOTION_TYPE_NAME like", value, "promotionTypeName");
            return this;
        }

        public Criteria andPromotionTypeNameNotLike(String value) {
            addCriterion("PROMOTION_TYPE_NAME not like", value, "promotionTypeName");
            return this;
        }

        public Criteria andPromotionTypeNameIn(List values) {
            addCriterion("PROMOTION_TYPE_NAME in", values, "promotionTypeName");
            return this;
        }

        public Criteria andPromotionTypeNameNotIn(List values) {
            addCriterion("PROMOTION_TYPE_NAME not in", values, "promotionTypeName");
            return this;
        }

        public Criteria andPromotionTypeNameBetween(String value1, String value2) {
            addCriterion("PROMOTION_TYPE_NAME between", value1, value2, "promotionTypeName");
            return this;
        }

        public Criteria andPromotionTypeNameNotBetween(String value1, String value2) {
            addCriterion("PROMOTION_TYPE_NAME not between", value1, value2, "promotionTypeName");
            return this;
        }
    }
}