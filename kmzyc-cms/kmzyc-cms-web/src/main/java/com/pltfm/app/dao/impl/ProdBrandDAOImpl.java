package com.pltfm.app.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.pltfm.app.dao.ProdBrandDAO;
import com.pltfm.app.vobject.ProdBrand;
import com.pltfm.app.vobject.ProdBrandExample;

import org.springframework.stereotype.Component;

import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;

/**
 * 品牌信息DAO接口实现类
 *
 * @author cjm
 * @since 2013-9-10
 */
@Component(value = "prodBrandDAO")
public class ProdBrandDAOImpl implements ProdBrandDAO {
    @Resource(name = "sqlMapClient")
    private SqlMapClient sqlMapClient;

    /**
     * 窗口数据信息总数量
     *
     * @param viewPromotion 窗口数据信息实体
     * @throws SQLException 异常
     * @return 返回值
     */
    @Override
    public Integer countByProdBrand(ProdBrand prodBrand) throws SQLException {
        Integer count = (Integer) sqlMapClient.queryForObject("PROD_BRAND.abatorgenerated_countByProdBrand", prodBrand);
        return count;
    }

    /**
     * 分页查询品牌信息视图
     *
     * @param prodBrand 品牌信息视图实体
     * @throws SQLException 异常
     * @return 返回值
     */
    @Override
    public List queryForPage(ProdBrand prodBrand) throws SQLException {
        return sqlMapClient.queryForList("PROD_BRAND.abatorgenerated_pageByProdBrand", prodBrand);
    }

    /**
     * 根据品牌条件信息查询品牌信息
     *
     * @param brandId 品牌条件信息
     * @throws SQLException sql异常
     * @return 返回值
     */
    @Override
    public List selectByExample(ProdBrandExample example) throws SQLException {
        List list = sqlMapClient.queryForList("PROD_BRAND.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * 根据品牌信息主键查询单条品牌信息
     *
     * @param brandId 品牌信息主键
     * @throws SQLException sql异常
     * @return 返回值
     */
    @Override
    public ProdBrand selectByPrimaryKey(Integer brandId) throws SQLException {
        ProdBrand key = new ProdBrand();
        key.setBrandId(brandId);
        ProdBrand record = (ProdBrand) sqlMapClient.queryForObject("PROD_BRAND.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table PROD_BRAND
     * 实体条件类
     *
     * @abatorgenerated Tue Sep 10 14:08:59 CST 2013
     */
    private static class UpdateByExampleParms extends ProdBrandExample {
        private Object record;

        public UpdateByExampleParms(Object record, ProdBrandExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

    /**
     * 通过类目主键与渠道查询同类品牌信息
     *
     * @param categoryId 类目主键
     * @param channel    渠道
     * @throws Exception 异常信息
     */
    public List<ProdBrand> selectByCategoryIdAndChannel(ProdBrand prodBrand) throws SQLException {
        return sqlMapClient.queryForList("PROD_BRAND.abatorgenerated_selectByCategoryIdAndChannel", prodBrand);
    }

    public SqlMapClient getSqlMapClient() {
        return sqlMapClient;
    }


    public void setSqlMapClient(SqlMapClient sqlMapClient) {
        this.sqlMapClient = sqlMapClient;
    }


}
