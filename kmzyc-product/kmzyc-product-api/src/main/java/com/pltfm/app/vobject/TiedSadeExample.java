package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TiedSadeExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table TIED_SADE
     *
     * @ibatorgenerated Mon Sep 16 09:00:19 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table TIED_SADE
     *
     * @ibatorgenerated Mon Sep 16 09:00:19 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TIED_SADE
     *
     * @ibatorgenerated Mon Sep 16 09:00:19 CST 2013
     */
    public TiedSadeExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TIED_SADE
     *
     * @ibatorgenerated Mon Sep 16 09:00:19 CST 2013
     */
    protected TiedSadeExample(TiedSadeExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TIED_SADE
     *
     * @ibatorgenerated Mon Sep 16 09:00:19 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TIED_SADE
     *
     * @ibatorgenerated Mon Sep 16 09:00:19 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TIED_SADE
     *
     * @ibatorgenerated Mon Sep 16 09:00:19 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TIED_SADE
     *
     * @ibatorgenerated Mon Sep 16 09:00:19 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TIED_SADE
     *
     * @ibatorgenerated Mon Sep 16 09:00:19 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TIED_SADE
     *
     * @ibatorgenerated Mon Sep 16 09:00:19 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TIED_SADE
     *
     * @ibatorgenerated Mon Sep 16 09:00:19 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table TIED_SADE
     *
     * @ibatorgenerated Mon Sep 16 09:00:19 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andTiedSadeIdIsNull() {
            addCriterion("TIED_SADE_ID is null");
            return this;
        }

        public Criteria andTiedSadeIdIsNotNull() {
            addCriterion("TIED_SADE_ID is not null");
            return this;
        }

        public Criteria andTiedSadeIdEqualTo(Long value) {
            addCriterion("TIED_SADE_ID =", value, "tiedSadeId");
            return this;
        }

        public Criteria andTiedSadeIdNotEqualTo(Long value) {
            addCriterion("TIED_SADE_ID <>", value, "tiedSadeId");
            return this;
        }

        public Criteria andTiedSadeIdGreaterThan(Long value) {
            addCriterion("TIED_SADE_ID >", value, "tiedSadeId");
            return this;
        }

        public Criteria andTiedSadeIdGreaterThanOrEqualTo(Long value) {
            addCriterion("TIED_SADE_ID >=", value, "tiedSadeId");
            return this;
        }

        public Criteria andTiedSadeIdLessThan(Long value) {
            addCriterion("TIED_SADE_ID <", value, "tiedSadeId");
            return this;
        }

        public Criteria andTiedSadeIdLessThanOrEqualTo(Long value) {
            addCriterion("TIED_SADE_ID <=", value, "tiedSadeId");
            return this;
        }

        public Criteria andTiedSadeIdIn(List values) {
            addCriterion("TIED_SADE_ID in", values, "tiedSadeId");
            return this;
        }

        public Criteria andTiedSadeIdNotIn(List values) {
            addCriterion("TIED_SADE_ID not in", values, "tiedSadeId");
            return this;
        }

        public Criteria andTiedSadeIdBetween(Long value1, Long value2) {
            addCriterion("TIED_SADE_ID between", value1, value2, "tiedSadeId");
            return this;
        }

        public Criteria andTiedSadeIdNotBetween(Long value1, Long value2) {
            addCriterion("TIED_SADE_ID not between", value1, value2, "tiedSadeId");
            return this;
        }

        public Criteria andMainSkuIsNull() {
            addCriterion("MAIN_SKU is null");
            return this;
        }

        public Criteria andMainSkuIsNotNull() {
            addCriterion("MAIN_SKU is not null");
            return this;
        }

        public Criteria andMainSkuEqualTo(Long value) {
            addCriterion("MAIN_SKU =", value, "mainSku");
            return this;
        }

        public Criteria andMainSkuNotEqualTo(Long value) {
            addCriterion("MAIN_SKU <>", value, "mainSku");
            return this;
        }

        public Criteria andMainSkuGreaterThan(BigDecimal value) {
            addCriterion("MAIN_SKU >", value, "mainSku");
            return this;
        }

        public Criteria andMainSkuGreaterThanOrEqualTo(Long value) {
            addCriterion("MAIN_SKU >=", value, "mainSku");
            return this;
        }

        public Criteria andMainSkuLessThan(Long value) {
            addCriterion("MAIN_SKU <", value, "mainSku");
            return this;
        }

        public Criteria andMainSkuLessThanOrEqualTo(Long value) {
            addCriterion("MAIN_SKU <=", value, "mainSku");
            return this;
        }

        public Criteria andMainSkuIn(List values) {
            addCriterion("MAIN_SKU in", values, "mainSku");
            return this;
        }

        public Criteria andMainSkuNotIn(List values) {
            addCriterion("MAIN_SKU not in", values, "mainSku");
            return this;
        }

        public Criteria andMainSkuBetween(Long value1, Long value2) {
            addCriterion("MAIN_SKU between", value1, value2, "mainSku");
            return this;
        }

        public Criteria andMainSkuNotBetween(Long value1, Long value2) {
            addCriterion("MAIN_SKU not between", value1, value2, "mainSku");
            return this;
        }

        public Criteria andTiedSadeSkuIsNull() {
            addCriterion("TIED_SADE_SKU is null");
            return this;
        }

        public Criteria andTiedSadeSkuIsNotNull() {
            addCriterion("TIED_SADE_SKU is not null");
            return this;
        }

        public Criteria andTiedSadeSkuEqualTo(Long value) {
            addCriterion("TIED_SADE_SKU =", value, "tiedSadeSku");
            return this;
        }

        public Criteria andTiedSadeSkuNotEqualTo(Long value) {
            addCriterion("TIED_SADE_SKU <>", value, "tiedSadeSku");
            return this;
        }

        public Criteria andTiedSadeSkuGreaterThan(Long value) {
            addCriterion("TIED_SADE_SKU >", value, "tiedSadeSku");
            return this;
        }

        public Criteria andTiedSadeSkuGreaterThanOrEqualTo(Long value) {
            addCriterion("TIED_SADE_SKU >=", value, "tiedSadeSku");
            return this;
        }

        public Criteria andTiedSadeSkuLessThan(Long value) {
            addCriterion("TIED_SADE_SKU <", value, "tiedSadeSku");
            return this;
        }

        public Criteria andTiedSadeSkuLessThanOrEqualTo(Long value) {
            addCriterion("TIED_SADE_SKU <=", value, "tiedSadeSku");
            return this;
        }

        public Criteria andTiedSadeSkuIn(List values) {
            addCriterion("TIED_SADE_SKU in", values, "tiedSadeSku");
            return this;
        }

        public Criteria andTiedSadeSkuNotIn(List values) {
            addCriterion("TIED_SADE_SKU not in", values, "tiedSadeSku");
            return this;
        }

        public Criteria andTiedSadeSkuBetween(Long value1, Long value2) {
            addCriterion("TIED_SADE_SKU between", value1, value2, "tiedSadeSku");
            return this;
        }

        public Criteria andTiedSadeSkuNotBetween(Long value1, Long value2) {
            addCriterion("TIED_SADE_SKU not between", value1, value2, "tiedSadeSku");
            return this;
        }

        public Criteria andTiedSadeSkuPriceIsNull() {
            addCriterion("TIED_SADE_SKU_PRICE is null");
            return this;
        }

        public Criteria andTiedSadeSkuPriceIsNotNull() {
            addCriterion("TIED_SADE_SKU_PRICE is not null");
            return this;
        }

        public Criteria andTiedSadeSkuPriceEqualTo(BigDecimal value) {
            addCriterion("TIED_SADE_SKU_PRICE =", value, "tiedSadeSkuPrice");
            return this;
        }

        public Criteria andTiedSadeSkuPriceNotEqualTo(BigDecimal value) {
            addCriterion("TIED_SADE_SKU_PRICE <>", value, "tiedSadeSkuPrice");
            return this;
        }

        public Criteria andTiedSadeSkuPriceGreaterThan(BigDecimal value) {
            addCriterion("TIED_SADE_SKU_PRICE >", value, "tiedSadeSkuPrice");
            return this;
        }

        public Criteria andTiedSadeSkuPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TIED_SADE_SKU_PRICE >=", value, "tiedSadeSkuPrice");
            return this;
        }

        public Criteria andTiedSadeSkuPriceLessThan(BigDecimal value) {
            addCriterion("TIED_SADE_SKU_PRICE <", value, "tiedSadeSkuPrice");
            return this;
        }

        public Criteria andTiedSadeSkuPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TIED_SADE_SKU_PRICE <=", value, "tiedSadeSkuPrice");
            return this;
        }

        public Criteria andTiedSadeSkuPriceIn(List values) {
            addCriterion("TIED_SADE_SKU_PRICE in", values, "tiedSadeSkuPrice");
            return this;
        }

        public Criteria andTiedSadeSkuPriceNotIn(List values) {
            addCriterion("TIED_SADE_SKU_PRICE not in", values, "tiedSadeSkuPrice");
            return this;
        }

        public Criteria andTiedSadeSkuPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TIED_SADE_SKU_PRICE between", value1, value2, "tiedSadeSkuPrice");
            return this;
        }

        public Criteria andTiedSadeSkuPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TIED_SADE_SKU_PRICE not between", value1, value2, "tiedSadeSkuPrice");
            return this;
        }

        public Criteria andTiedSadeTypeIsNull() {
            addCriterion("TIED_SADE_TYPE is null");
            return this;
        }

        public Criteria andTiedSadeTypeIsNotNull() {
            addCriterion("TIED_SADE_TYPE is not null");
            return this;
        }

        public Criteria andTiedSadeTypeEqualTo(Short value) {
            addCriterion("TIED_SADE_TYPE =", value, "tiedSadeType");
            return this;
        }

        public Criteria andTiedSadeTypeNotEqualTo(Short value) {
            addCriterion("TIED_SADE_TYPE <>", value, "tiedSadeType");
            return this;
        }

        public Criteria andTiedSadeTypeGreaterThan(Short value) {
            addCriterion("TIED_SADE_TYPE >", value, "tiedSadeType");
            return this;
        }

        public Criteria andTiedSadeTypeGreaterThanOrEqualTo(Short value) {
            addCriterion("TIED_SADE_TYPE >=", value, "tiedSadeType");
            return this;
        }

        public Criteria andTiedSadeTypeLessThan(Short value) {
            addCriterion("TIED_SADE_TYPE <", value, "tiedSadeType");
            return this;
        }

        public Criteria andTiedSadeTypeLessThanOrEqualTo(Short value) {
            addCriterion("TIED_SADE_TYPE <=", value, "tiedSadeType");
            return this;
        }

        public Criteria andTiedSadeTypeIn(List values) {
            addCriterion("TIED_SADE_TYPE in", values, "tiedSadeType");
            return this;
        }

        public Criteria andTiedSadeTypeNotIn(List values) {
            addCriterion("TIED_SADE_TYPE not in", values, "tiedSadeType");
            return this;
        }

        public Criteria andTiedSadeTypeBetween(Short value1, Short value2) {
            addCriterion("TIED_SADE_TYPE between", value1, value2, "tiedSadeType");
            return this;
        }

        public Criteria andTiedSadeTypeNotBetween(Short value1, Short value2) {
            addCriterion("TIED_SADE_TYPE not between", value1, value2, "tiedSadeType");
            return this;
        }
    }
}