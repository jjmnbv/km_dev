package com.pltfm.app.vobject;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ActivityBrandExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACTIVITY_BRAND
     *
     * @ibatorgenerated Thu Mar 17 15:15:02 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACTIVITY_BRAND
     *
     * @ibatorgenerated Thu Mar 17 15:15:02 CST 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_BRAND
     *
     * @ibatorgenerated Thu Mar 17 15:15:02 CST 2016
     */
    public ActivityBrandExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_BRAND
     *
     * @ibatorgenerated Thu Mar 17 15:15:02 CST 2016
     */
    protected ActivityBrandExample(ActivityBrandExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_BRAND
     *
     * @ibatorgenerated Thu Mar 17 15:15:02 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_BRAND
     *
     * @ibatorgenerated Thu Mar 17 15:15:02 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_BRAND
     *
     * @ibatorgenerated Thu Mar 17 15:15:02 CST 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_BRAND
     *
     * @ibatorgenerated Thu Mar 17 15:15:02 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_BRAND
     *
     * @ibatorgenerated Thu Mar 17 15:15:02 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_BRAND
     *
     * @ibatorgenerated Thu Mar 17 15:15:02 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_BRAND
     *
     * @ibatorgenerated Thu Mar 17 15:15:02 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table ACTIVITY_BRAND
     *
     * @ibatorgenerated Thu Mar 17 15:15:02 CST 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andActivityBrandIdIsNull() {
            addCriterion("ACTIVITY_BRAND_ID is null");
            return this;
        }

        public Criteria andActivityBrandIdIsNotNull() {
            addCriterion("ACTIVITY_BRAND_ID is not null");
            return this;
        }

        public Criteria andActivityBrandIdEqualTo(Long value) {
            addCriterion("ACTIVITY_BRAND_ID =", value, "activityBrandId");
            return this;
        }

        public Criteria andActivityBrandIdNotEqualTo(Long value) {
            addCriterion("ACTIVITY_BRAND_ID <>", value, "activityBrandId");
            return this;
        }

        public Criteria andActivityBrandIdGreaterThan(Long value) {
            addCriterion("ACTIVITY_BRAND_ID >", value, "activityBrandId");
            return this;
        }

        public Criteria andActivityBrandIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ACTIVITY_BRAND_ID >=", value, "activityBrandId");
            return this;
        }

        public Criteria andActivityBrandIdLessThan(Long value) {
            addCriterion("ACTIVITY_BRAND_ID <", value, "activityBrandId");
            return this;
        }

        public Criteria andActivityBrandIdLessThanOrEqualTo(Long value) {
            addCriterion("ACTIVITY_BRAND_ID <=", value, "activityBrandId");
            return this;
        }

        public Criteria andActivityBrandIdIn(List values) {
            addCriterion("ACTIVITY_BRAND_ID in", values, "activityBrandId");
            return this;
        }

        public Criteria andActivityBrandIdNotIn(List values) {
            addCriterion("ACTIVITY_BRAND_ID not in", values, "activityBrandId");
            return this;
        }

        public Criteria andActivityBrandIdBetween(Long value1, Long value2) {
            addCriterion("ACTIVITY_BRAND_ID between", value1, value2, "activityBrandId");
            return this;
        }

        public Criteria andActivityBrandIdNotBetween(Long value1, Long value2) {
            addCriterion("ACTIVITY_BRAND_ID not between", value1, value2, "activityBrandId");
            return this;
        }

        public Criteria andActivityIdIsNull() {
            addCriterion("ACTIVITY_ID is null");
            return this;
        }

        public Criteria andActivityIdIsNotNull() {
            addCriterion("ACTIVITY_ID is not null");
            return this;
        }

        public Criteria andActivityIdEqualTo(Long value) {
            addCriterion("ACTIVITY_ID =", value, "activityId");
            return this;
        }

        public Criteria andActivityIdNotEqualTo(Long value) {
            addCriterion("ACTIVITY_ID <>", value, "activityId");
            return this;
        }

        public Criteria andActivityIdGreaterThan(Long value) {
            addCriterion("ACTIVITY_ID >", value, "activityId");
            return this;
        }

        public Criteria andActivityIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ACTIVITY_ID >=", value, "activityId");
            return this;
        }

        public Criteria andActivityIdLessThan(Long value) {
            addCriterion("ACTIVITY_ID <", value, "activityId");
            return this;
        }

        public Criteria andActivityIdLessThanOrEqualTo(Long value) {
            addCriterion("ACTIVITY_ID <=", value, "activityId");
            return this;
        }

        public Criteria andActivityIdIn(List values) {
            addCriterion("ACTIVITY_ID in", values, "activityId");
            return this;
        }

        public Criteria andActivityIdNotIn(List values) {
            addCriterion("ACTIVITY_ID not in", values, "activityId");
            return this;
        }

        public Criteria andActivityIdBetween(Long value1, Long value2) {
            addCriterion("ACTIVITY_ID between", value1, value2, "activityId");
            return this;
        }

        public Criteria andActivityIdNotBetween(Long value1, Long value2) {
            addCriterion("ACTIVITY_ID not between", value1, value2, "activityId");
            return this;
        }

        public Criteria andBrandIdIsNull() {
            addCriterion("BRAND_ID is null");
            return this;
        }

        public Criteria andBrandIdIsNotNull() {
            addCriterion("BRAND_ID is not null");
            return this;
        }

        public Criteria andBrandIdEqualTo(Long value) {
            addCriterion("BRAND_ID =", value, "brandId");
            return this;
        }

        public Criteria andBrandIdNotEqualTo(Long value) {
            addCriterion("BRAND_ID <>", value, "brandId");
            return this;
        }

        public Criteria andBrandIdGreaterThan(Long value) {
            addCriterion("BRAND_ID >", value, "brandId");
            return this;
        }

        public Criteria andBrandIdGreaterThanOrEqualTo(Long value) {
            addCriterion("BRAND_ID >=", value, "brandId");
            return this;
        }

        public Criteria andBrandIdLessThan(Long value) {
            addCriterion("BRAND_ID <", value, "brandId");
            return this;
        }

        public Criteria andBrandIdLessThanOrEqualTo(Long value) {
            addCriterion("BRAND_ID <=", value, "brandId");
            return this;
        }

        public Criteria andBrandIdIn(List values) {
            addCriterion("BRAND_ID in", values, "brandId");
            return this;
        }

        public Criteria andBrandIdNotIn(List values) {
            addCriterion("BRAND_ID not in", values, "brandId");
            return this;
        }

        public Criteria andBrandIdBetween(Long value1, Long value2) {
            addCriterion("BRAND_ID between", value1, value2, "brandId");
            return this;
        }

        public Criteria andBrandIdNotBetween(Long value1, Long value2) {
            addCriterion("BRAND_ID not between", value1, value2, "brandId");
            return this;
        }
    }
}