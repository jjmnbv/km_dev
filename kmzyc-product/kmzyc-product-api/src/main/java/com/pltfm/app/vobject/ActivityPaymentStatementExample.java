package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.sql.Timestamp;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ActivityPaymentStatementExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACTIVITY_PAYMENT_STATEMENT
     *
     * @ibatorgenerated Thu Mar 17 15:54:29 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACTIVITY_PAYMENT_STATEMENT
     *
     * @ibatorgenerated Thu Mar 17 15:54:29 CST 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_STATEMENT
     *
     * @ibatorgenerated Thu Mar 17 15:54:29 CST 2016
     */
    public ActivityPaymentStatementExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_STATEMENT
     *
     * @ibatorgenerated Thu Mar 17 15:54:29 CST 2016
     */
    protected ActivityPaymentStatementExample(ActivityPaymentStatementExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_STATEMENT
     *
     * @ibatorgenerated Thu Mar 17 15:54:29 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_STATEMENT
     *
     * @ibatorgenerated Thu Mar 17 15:54:29 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_STATEMENT
     *
     * @ibatorgenerated Thu Mar 17 15:54:29 CST 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_STATEMENT
     *
     * @ibatorgenerated Thu Mar 17 15:54:29 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_STATEMENT
     *
     * @ibatorgenerated Thu Mar 17 15:54:29 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_STATEMENT
     *
     * @ibatorgenerated Thu Mar 17 15:54:29 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_PAYMENT_STATEMENT
     *
     * @ibatorgenerated Thu Mar 17 15:54:29 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table ACTIVITY_PAYMENT_STATEMENT
     *
     * @ibatorgenerated Thu Mar 17 15:54:29 CST 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andStatementIdIsNull() {
            addCriterion("STATEMENT_ID is null");
            return this;
        }

        public Criteria andStatementIdIsNotNull() {
            addCriterion("STATEMENT_ID is not null");
            return this;
        }

        public Criteria andStatementIdEqualTo(Long value) {
            addCriterion("STATEMENT_ID =", value, "statementId");
            return this;
        }

        public Criteria andStatementIdNotEqualTo(Long value) {
            addCriterion("STATEMENT_ID <>", value, "statementId");
            return this;
        }

        public Criteria andStatementIdGreaterThan(Long value) {
            addCriterion("STATEMENT_ID >", value, "statementId");
            return this;
        }

        public Criteria andStatementIdGreaterThanOrEqualTo(Long value) {
            addCriterion("STATEMENT_ID >=", value, "statementId");
            return this;
        }

        public Criteria andStatementIdLessThan(Long value) {
            addCriterion("STATEMENT_ID <", value, "statementId");
            return this;
        }

        public Criteria andStatementIdLessThanOrEqualTo(Long value) {
            addCriterion("STATEMENT_ID <=", value, "statementId");
            return this;
        }

        public Criteria andStatementIdIn(List values) {
            addCriterion("STATEMENT_ID in", values, "statementId");
            return this;
        }

        public Criteria andStatementIdNotIn(List values) {
            addCriterion("STATEMENT_ID not in", values, "statementId");
            return this;
        }

        public Criteria andStatementIdBetween(Long value1, Long value2) {
            addCriterion("STATEMENT_ID between", value1, value2, "statementId");
            return this;
        }

        public Criteria andStatementIdNotBetween(Long value1, Long value2) {
            addCriterion("STATEMENT_ID not between", value1, value2, "statementId");
            return this;
        }

        public Criteria andActivityPaymentIdIsNull() {
            addCriterion("ACTIVITY_PAYMENT_ID is null");
            return this;
        }

        public Criteria andActivityPaymentIdIsNotNull() {
            addCriterion("ACTIVITY_PAYMENT_ID is not null");
            return this;
        }

        public Criteria andActivityPaymentIdEqualTo(Long value) {
            addCriterion("ACTIVITY_PAYMENT_ID =", value, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdNotEqualTo(Long value) {
            addCriterion("ACTIVITY_PAYMENT_ID <>", value, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdGreaterThan(Long value) {
            addCriterion("ACTIVITY_PAYMENT_ID >", value, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ACTIVITY_PAYMENT_ID >=", value, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdLessThan(Long value) {
            addCriterion("ACTIVITY_PAYMENT_ID <", value, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdLessThanOrEqualTo(Long value) {
            addCriterion("ACTIVITY_PAYMENT_ID <=", value, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdIn(List values) {
            addCriterion("ACTIVITY_PAYMENT_ID in", values, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdNotIn(List values) {
            addCriterion("ACTIVITY_PAYMENT_ID not in", values, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdBetween(Long value1, Long value2) {
            addCriterion("ACTIVITY_PAYMENT_ID between", value1, value2, "activityPaymentId");
            return this;
        }

        public Criteria andActivityPaymentIdNotBetween(Long value1, Long value2) {
            addCriterion("ACTIVITY_PAYMENT_ID not between", value1, value2, "activityPaymentId");
            return this;
        }

        public Criteria andStatementCodeIsNull() {
            addCriterion("STATEMENT_CODE is null");
            return this;
        }

        public Criteria andStatementCodeIsNotNull() {
            addCriterion("STATEMENT_CODE is not null");
            return this;
        }

        public Criteria andStatementCodeEqualTo(String value) {
            addCriterion("STATEMENT_CODE =", value, "statementCode");
            return this;
        }

        public Criteria andStatementCodeNotEqualTo(String value) {
            addCriterion("STATEMENT_CODE <>", value, "statementCode");
            return this;
        }

        public Criteria andStatementCodeGreaterThan(String value) {
            addCriterion("STATEMENT_CODE >", value, "statementCode");
            return this;
        }

        public Criteria andStatementCodeGreaterThanOrEqualTo(String value) {
            addCriterion("STATEMENT_CODE >=", value, "statementCode");
            return this;
        }

        public Criteria andStatementCodeLessThan(String value) {
            addCriterion("STATEMENT_CODE <", value, "statementCode");
            return this;
        }

        public Criteria andStatementCodeLessThanOrEqualTo(String value) {
            addCriterion("STATEMENT_CODE <=", value, "statementCode");
            return this;
        }

        public Criteria andStatementCodeLike(String value) {
            addCriterion("STATEMENT_CODE like", value, "statementCode");
            return this;
        }

        public Criteria andStatementCodeNotLike(String value) {
            addCriterion("STATEMENT_CODE not like", value, "statementCode");
            return this;
        }

        public Criteria andStatementCodeIn(List values) {
            addCriterion("STATEMENT_CODE in", values, "statementCode");
            return this;
        }

        public Criteria andStatementCodeNotIn(List values) {
            addCriterion("STATEMENT_CODE not in", values, "statementCode");
            return this;
        }

        public Criteria andStatementCodeBetween(String value1, String value2) {
            addCriterion("STATEMENT_CODE between", value1, value2, "statementCode");
            return this;
        }

        public Criteria andStatementCodeNotBetween(String value1, String value2) {
            addCriterion("STATEMENT_CODE not between", value1, value2, "statementCode");
            return this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("PRICE is null");
            return this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("PRICE is not null");
            return this;
        }

        public Criteria andPriceEqualTo(BigDecimal value) {
            addCriterion("PRICE =", value, "price");
            return this;
        }

        public Criteria andPriceNotEqualTo(BigDecimal value) {
            addCriterion("PRICE <>", value, "price");
            return this;
        }

        public Criteria andPriceGreaterThan(BigDecimal value) {
            addCriterion("PRICE >", value, "price");
            return this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PRICE >=", value, "price");
            return this;
        }

        public Criteria andPriceLessThan(BigDecimal value) {
            addCriterion("PRICE <", value, "price");
            return this;
        }

        public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PRICE <=", value, "price");
            return this;
        }

        public Criteria andPriceIn(List values) {
            addCriterion("PRICE in", values, "price");
            return this;
        }

        public Criteria andPriceNotIn(List values) {
            addCriterion("PRICE not in", values, "price");
            return this;
        }

        public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRICE between", value1, value2, "price");
            return this;
        }

        public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRICE not between", value1, value2, "price");
            return this;
        }

        public Criteria andOperatorIsNull() {
            addCriterion("OPERATOR is null");
            return this;
        }

        public Criteria andOperatorIsNotNull() {
            addCriterion("OPERATOR is not null");
            return this;
        }

        public Criteria andOperatorEqualTo(Long value) {
            addCriterion("OPERATOR =", value, "operator");
            return this;
        }

        public Criteria andOperatorNotEqualTo(Long value) {
            addCriterion("OPERATOR <>", value, "operator");
            return this;
        }

        public Criteria andOperatorGreaterThan(Long value) {
            addCriterion("OPERATOR >", value, "operator");
            return this;
        }

        public Criteria andOperatorGreaterThanOrEqualTo(Long value) {
            addCriterion("OPERATOR >=", value, "operator");
            return this;
        }

        public Criteria andOperatorLessThan(Long value) {
            addCriterion("OPERATOR <", value, "operator");
            return this;
        }

        public Criteria andOperatorLessThanOrEqualTo(Long value) {
            addCriterion("OPERATOR <=", value, "operator");
            return this;
        }

        public Criteria andOperatorIn(List values) {
            addCriterion("OPERATOR in", values, "operator");
            return this;
        }

        public Criteria andOperatorNotIn(List values) {
            addCriterion("OPERATOR not in", values, "operator");
            return this;
        }

        public Criteria andOperatorBetween(Long value1, Long value2) {
            addCriterion("OPERATOR between", value1, value2, "operator");
            return this;
        }

        public Criteria andOperatorNotBetween(Long value1, Long value2) {
            addCriterion("OPERATOR not between", value1, value2, "operator");
            return this;
        }

        public Criteria andOperationTimeIsNull() {
            addCriterion("OPERATION_TIME is null");
            return this;
        }

        public Criteria andOperationTimeIsNotNull() {
            addCriterion("OPERATION_TIME is not null");
            return this;
        }

        public Criteria andOperationTimeEqualTo(Timestamp value) {
            addCriterion("OPERATION_TIME =", value, "operationTime");
            return this;
        }

        public Criteria andOperationTimeNotEqualTo(Timestamp value) {
            addCriterion("OPERATION_TIME <>", value, "operationTime");
            return this;
        }

        public Criteria andOperationTimeGreaterThan(Timestamp value) {
            addCriterion("OPERATION_TIME >", value, "operationTime");
            return this;
        }

        public Criteria andOperationTimeGreaterThanOrEqualTo(Timestamp value) {
            addCriterion("OPERATION_TIME >=", value, "operationTime");
            return this;
        }

        public Criteria andOperationTimeLessThan(Timestamp value) {
            addCriterion("OPERATION_TIME <", value, "operationTime");
            return this;
        }

        public Criteria andOperationTimeLessThanOrEqualTo(Timestamp value) {
            addCriterion("OPERATION_TIME <=", value, "operationTime");
            return this;
        }

        public Criteria andOperationTimeIn(List values) {
            addCriterion("OPERATION_TIME in", values, "operationTime");
            return this;
        }

        public Criteria andOperationTimeNotIn(List values) {
            addCriterion("OPERATION_TIME not in", values, "operationTime");
            return this;
        }

        public Criteria andOperationTimeBetween(Timestamp value1, Timestamp value2) {
            addCriterion("OPERATION_TIME between", value1, value2, "operationTime");
            return this;
        }

        public Criteria andOperationTimeNotBetween(Timestamp value1, Timestamp value2) {
            addCriterion("OPERATION_TIME not between", value1, value2, "operationTime");
            return this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("REMARK is null");
            return this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("REMARK is not null");
            return this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("REMARK =", value, "remark");
            return this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("REMARK <>", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("REMARK >", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK >=", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("REMARK <", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("REMARK <=", value, "remark");
            return this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("REMARK like", value, "remark");
            return this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("REMARK not like", value, "remark");
            return this;
        }

        public Criteria andRemarkIn(List values) {
            addCriterion("REMARK in", values, "remark");
            return this;
        }

        public Criteria andRemarkNotIn(List values) {
            addCriterion("REMARK not in", values, "remark");
            return this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("REMARK between", value1, value2, "remark");
            return this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("REMARK not between", value1, value2, "remark");
            return this;
        }

        public Criteria andStatementTypeIsNull() {
            addCriterion("STATEMENT_TYPE is null");
            return this;
        }

        public Criteria andStatementTypeIsNotNull() {
            addCriterion("STATEMENT_TYPE is not null");
            return this;
        }

        public Criteria andStatementTypeEqualTo(Integer value) {
            addCriterion("STATEMENT_TYPE =", value, "statementType");
            return this;
        }

        public Criteria andStatementTypeNotEqualTo(Integer value) {
            addCriterion("STATEMENT_TYPE <>", value, "statementType");
            return this;
        }

        public Criteria andStatementTypeGreaterThan(Integer value) {
            addCriterion("STATEMENT_TYPE >", value, "statementType");
            return this;
        }

        public Criteria andStatementTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("STATEMENT_TYPE >=", value, "statementType");
            return this;
        }

        public Criteria andStatementTypeLessThan(Integer value) {
            addCriterion("STATEMENT_TYPE <", value, "statementType");
            return this;
        }

        public Criteria andStatementTypeLessThanOrEqualTo(Integer value) {
            addCriterion("STATEMENT_TYPE <=", value, "statementType");
            return this;
        }

        public Criteria andStatementTypeIn(List values) {
            addCriterion("STATEMENT_TYPE in", values, "statementType");
            return this;
        }

        public Criteria andStatementTypeNotIn(List values) {
            addCriterion("STATEMENT_TYPE not in", values, "statementType");
            return this;
        }

        public Criteria andStatementTypeBetween(Integer value1, Integer value2) {
            addCriterion("STATEMENT_TYPE between", value1, value2, "statementType");
            return this;
        }

        public Criteria andStatementTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("STATEMENT_TYPE not between", value1, value2, "statementType");
            return this;
        }
    }
}