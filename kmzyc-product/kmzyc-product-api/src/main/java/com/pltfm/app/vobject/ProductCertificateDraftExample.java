package com.pltfm.app.vobject;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProductCertificateDraftExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table PRODUCT_CERTIFICATE_DRAFT
     *
     * @ibatorgenerated Wed Apr 09 15:13:51 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table PRODUCT_CERTIFICATE_DRAFT
     *
     * @ibatorgenerated Wed Apr 09 15:13:51 CST 2014
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_CERTIFICATE_DRAFT
     *
     * @ibatorgenerated Wed Apr 09 15:13:51 CST 2014
     */
    public ProductCertificateDraftExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_CERTIFICATE_DRAFT
     *
     * @ibatorgenerated Wed Apr 09 15:13:51 CST 2014
     */
    protected ProductCertificateDraftExample(ProductCertificateDraftExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_CERTIFICATE_DRAFT
     *
     * @ibatorgenerated Wed Apr 09 15:13:51 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_CERTIFICATE_DRAFT
     *
     * @ibatorgenerated Wed Apr 09 15:13:51 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_CERTIFICATE_DRAFT
     *
     * @ibatorgenerated Wed Apr 09 15:13:51 CST 2014
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_CERTIFICATE_DRAFT
     *
     * @ibatorgenerated Wed Apr 09 15:13:51 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_CERTIFICATE_DRAFT
     *
     * @ibatorgenerated Wed Apr 09 15:13:51 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_CERTIFICATE_DRAFT
     *
     * @ibatorgenerated Wed Apr 09 15:13:51 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_CERTIFICATE_DRAFT
     *
     * @ibatorgenerated Wed Apr 09 15:13:51 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table PRODUCT_CERTIFICATE_DRAFT
     *
     * @ibatorgenerated Wed Apr 09 15:13:51 CST 2014
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andPscIdIsNull() {
            addCriterion("PSC_ID is null");
            return this;
        }

        public Criteria andPscIdIsNotNull() {
            addCriterion("PSC_ID is not null");
            return this;
        }

        public Criteria andPscIdEqualTo(Long value) {
            addCriterion("PSC_ID =", value, "pscId");
            return this;
        }

        public Criteria andPscIdNotEqualTo(Long value) {
            addCriterion("PSC_ID <>", value, "pscId");
            return this;
        }

        public Criteria andPscIdGreaterThan(Long value) {
            addCriterion("PSC_ID >", value, "pscId");
            return this;
        }

        public Criteria andPscIdGreaterThanOrEqualTo(Long value) {
            addCriterion("PSC_ID >=", value, "pscId");
            return this;
        }

        public Criteria andPscIdLessThan(Long value) {
            addCriterion("PSC_ID <", value, "pscId");
            return this;
        }

        public Criteria andPscIdLessThanOrEqualTo(Long value) {
            addCriterion("PSC_ID <=", value, "pscId");
            return this;
        }

        public Criteria andPscIdIn(List values) {
            addCriterion("PSC_ID in", values, "pscId");
            return this;
        }

        public Criteria andPscIdNotIn(List values) {
            addCriterion("PSC_ID not in", values, "pscId");
            return this;
        }

        public Criteria andPscIdBetween(Long value1, Long value2) {
            addCriterion("PSC_ID between", value1, value2, "pscId");
            return this;
        }

        public Criteria andPscIdNotBetween(Long value1, Long value2) {
            addCriterion("PSC_ID not between", value1, value2, "pscId");
            return this;
        }

        public Criteria andProductIdIsNull() {
            addCriterion("PRODUCT_ID is null");
            return this;
        }

        public Criteria andProductIdIsNotNull() {
            addCriterion("PRODUCT_ID is not null");
            return this;
        }

        public Criteria andProductIdEqualTo(Long value) {
            addCriterion("PRODUCT_ID =", value, "productId");
            return this;
        }

        public Criteria andProductIdNotEqualTo(Long value) {
            addCriterion("PRODUCT_ID <>", value, "productId");
            return this;
        }

        public Criteria andProductIdGreaterThan(Long value) {
            addCriterion("PRODUCT_ID >", value, "productId");
            return this;
        }

        public Criteria andProductIdGreaterThanOrEqualTo(Long value) {
            addCriterion("PRODUCT_ID >=", value, "productId");
            return this;
        }

        public Criteria andProductIdLessThan(Long value) {
            addCriterion("PRODUCT_ID <", value, "productId");
            return this;
        }

        public Criteria andProductIdLessThanOrEqualTo(Long value) {
            addCriterion("PRODUCT_ID <=", value, "productId");
            return this;
        }

        public Criteria andProductIdIn(List values) {
            addCriterion("PRODUCT_ID in", values, "productId");
            return this;
        }

        public Criteria andProductIdNotIn(List values) {
            addCriterion("PRODUCT_ID not in", values, "productId");
            return this;
        }

        public Criteria andProductIdBetween(Long value1, Long value2) {
            addCriterion("PRODUCT_ID between", value1, value2, "productId");
            return this;
        }

        public Criteria andProductIdNotBetween(Long value1, Long value2) {
            addCriterion("PRODUCT_ID not between", value1, value2, "productId");
            return this;
        }

        public Criteria andFileTypeIsNull() {
            addCriterion("FILE_TYPE is null");
            return this;
        }

        public Criteria andFileTypeIsNotNull() {
            addCriterion("FILE_TYPE is not null");
            return this;
        }

        public Criteria andFileTypeEqualTo(Short value) {
            addCriterion("FILE_TYPE =", value, "fileType");
            return this;
        }

        public Criteria andFileTypeNotEqualTo(Short value) {
            addCriterion("FILE_TYPE <>", value, "fileType");
            return this;
        }

        public Criteria andFileTypeGreaterThan(Short value) {
            addCriterion("FILE_TYPE >", value, "fileType");
            return this;
        }

        public Criteria andFileTypeGreaterThanOrEqualTo(Short value) {
            addCriterion("FILE_TYPE >=", value, "fileType");
            return this;
        }

        public Criteria andFileTypeLessThan(Short value) {
            addCriterion("FILE_TYPE <", value, "fileType");
            return this;
        }

        public Criteria andFileTypeLessThanOrEqualTo(Short value) {
            addCriterion("FILE_TYPE <=", value, "fileType");
            return this;
        }

        public Criteria andFileTypeIn(List values) {
            addCriterion("FILE_TYPE in", values, "fileType");
            return this;
        }

        public Criteria andFileTypeNotIn(List values) {
            addCriterion("FILE_TYPE not in", values, "fileType");
            return this;
        }

        public Criteria andFileTypeBetween(Short value1, Short value2) {
            addCriterion("FILE_TYPE between", value1, value2, "fileType");
            return this;
        }

        public Criteria andFileTypeNotBetween(Short value1, Short value2) {
            addCriterion("FILE_TYPE not between", value1, value2, "fileType");
            return this;
        }

        public Criteria andFileNameIsNull() {
            addCriterion("FILE_NAME is null");
            return this;
        }

        public Criteria andFileNameIsNotNull() {
            addCriterion("FILE_NAME is not null");
            return this;
        }

        public Criteria andFileNameEqualTo(String value) {
            addCriterion("FILE_NAME =", value, "fileName");
            return this;
        }

        public Criteria andFileNameNotEqualTo(String value) {
            addCriterion("FILE_NAME <>", value, "fileName");
            return this;
        }

        public Criteria andFileNameGreaterThan(String value) {
            addCriterion("FILE_NAME >", value, "fileName");
            return this;
        }

        public Criteria andFileNameGreaterThanOrEqualTo(String value) {
            addCriterion("FILE_NAME >=", value, "fileName");
            return this;
        }

        public Criteria andFileNameLessThan(String value) {
            addCriterion("FILE_NAME <", value, "fileName");
            return this;
        }

        public Criteria andFileNameLessThanOrEqualTo(String value) {
            addCriterion("FILE_NAME <=", value, "fileName");
            return this;
        }

        public Criteria andFileNameLike(String value) {
            addCriterion("FILE_NAME like", value, "fileName");
            return this;
        }

        public Criteria andFileNameNotLike(String value) {
            addCriterion("FILE_NAME not like", value, "fileName");
            return this;
        }

        public Criteria andFileNameIn(List values) {
            addCriterion("FILE_NAME in", values, "fileName");
            return this;
        }

        public Criteria andFileNameNotIn(List values) {
            addCriterion("FILE_NAME not in", values, "fileName");
            return this;
        }

        public Criteria andFileNameBetween(String value1, String value2) {
            addCriterion("FILE_NAME between", value1, value2, "fileName");
            return this;
        }

        public Criteria andFileNameNotBetween(String value1, String value2) {
            addCriterion("FILE_NAME not between", value1, value2, "fileName");
            return this;
        }

        public Criteria andFilePathIsNull() {
            addCriterion("FILE_PATH is null");
            return this;
        }

        public Criteria andFilePathIsNotNull() {
            addCriterion("FILE_PATH is not null");
            return this;
        }

        public Criteria andFilePathEqualTo(String value) {
            addCriterion("FILE_PATH =", value, "filePath");
            return this;
        }

        public Criteria andFilePathNotEqualTo(String value) {
            addCriterion("FILE_PATH <>", value, "filePath");
            return this;
        }

        public Criteria andFilePathGreaterThan(String value) {
            addCriterion("FILE_PATH >", value, "filePath");
            return this;
        }

        public Criteria andFilePathGreaterThanOrEqualTo(String value) {
            addCriterion("FILE_PATH >=", value, "filePath");
            return this;
        }

        public Criteria andFilePathLessThan(String value) {
            addCriterion("FILE_PATH <", value, "filePath");
            return this;
        }

        public Criteria andFilePathLessThanOrEqualTo(String value) {
            addCriterion("FILE_PATH <=", value, "filePath");
            return this;
        }

        public Criteria andFilePathLike(String value) {
            addCriterion("FILE_PATH like", value, "filePath");
            return this;
        }

        public Criteria andFilePathNotLike(String value) {
            addCriterion("FILE_PATH not like", value, "filePath");
            return this;
        }

        public Criteria andFilePathIn(List values) {
            addCriterion("FILE_PATH in", values, "filePath");
            return this;
        }

        public Criteria andFilePathNotIn(List values) {
            addCriterion("FILE_PATH not in", values, "filePath");
            return this;
        }

        public Criteria andFilePathBetween(String value1, String value2) {
            addCriterion("FILE_PATH between", value1, value2, "filePath");
            return this;
        }

        public Criteria andFilePathNotBetween(String value1, String value2) {
            addCriterion("FILE_PATH not between", value1, value2, "filePath");
            return this;
        }
    }
}