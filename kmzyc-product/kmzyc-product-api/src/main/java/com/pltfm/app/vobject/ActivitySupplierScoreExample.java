package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ActivitySupplierScoreExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACTIVITY_SUPPLIER_SCORE
     *
     * @ibatorgenerated Thu Mar 17 15:13:38 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACTIVITY_SUPPLIER_SCORE
     *
     * @ibatorgenerated Thu Mar 17 15:13:38 CST 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_SUPPLIER_SCORE
     *
     * @ibatorgenerated Thu Mar 17 15:13:38 CST 2016
     */
    public ActivitySupplierScoreExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_SUPPLIER_SCORE
     *
     * @ibatorgenerated Thu Mar 17 15:13:38 CST 2016
     */
    protected ActivitySupplierScoreExample(ActivitySupplierScoreExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_SUPPLIER_SCORE
     *
     * @ibatorgenerated Thu Mar 17 15:13:38 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_SUPPLIER_SCORE
     *
     * @ibatorgenerated Thu Mar 17 15:13:38 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_SUPPLIER_SCORE
     *
     * @ibatorgenerated Thu Mar 17 15:13:38 CST 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_SUPPLIER_SCORE
     *
     * @ibatorgenerated Thu Mar 17 15:13:38 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_SUPPLIER_SCORE
     *
     * @ibatorgenerated Thu Mar 17 15:13:38 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_SUPPLIER_SCORE
     *
     * @ibatorgenerated Thu Mar 17 15:13:38 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_SUPPLIER_SCORE
     *
     * @ibatorgenerated Thu Mar 17 15:13:38 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table ACTIVITY_SUPPLIER_SCORE
     *
     * @ibatorgenerated Thu Mar 17 15:13:38 CST 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andsupplierScoreIdIsNull() {
            addCriterion("supplierScoreId is null");
            return this;
        }

        public Criteria andsupplierScoreIdIsNotNull() {
            addCriterion("supplierScoreId is not null");
            return this;
        }

        public Criteria andsupplierScoreIdEqualTo(Long value) {
            addCriterion("supplierScoreId =", value, "supplierScoreId");
            return this;
        }

        public Criteria andsupplierScoreIdNotEqualTo(Long value) {
            addCriterion("supplierScoreId <>", value, "supplierScoreId");
            return this;
        }

        public Criteria andsupplierScoreIdGreaterThan(Long value) {
            addCriterion("supplierScoreId >", value, "supplierScoreId");
            return this;
        }

        public Criteria andsupplierScoreIdGreaterThanOrEqualTo(Long value) {
            addCriterion("supplierScoreId >=", value, "supplierScoreId");
            return this;
        }

        public Criteria andsupplierScoreIdLessThan(Long value) {
            addCriterion("supplierScoreId <", value, "supplierScoreId");
            return this;
        }

        public Criteria andsupplierScoreIdLessThanOrEqualTo(Long value) {
            addCriterion("supplierScoreId <=", value, "supplierScoreId");
            return this;
        }

        public Criteria andsupplierScoreIdIn(List values) {
            addCriterion("supplierScoreId in", values, "supplierScoreId");
            return this;
        }

        public Criteria andsupplierScoreIdNotIn(List values) {
            addCriterion("supplierScoreId not in", values, "supplierScoreId");
            return this;
        }

        public Criteria andsupplierScoreIdBetween(Long value1, Long value2) {
            addCriterion("supplierScoreId between", value1, value2, "supplierScoreId");
            return this;
        }

        public Criteria andsupplierScoreIdNotBetween(Long value1, Long value2) {
            addCriterion("supplierScoreId not between", value1, value2, "supplierScoreId");
            return this;
        }

        public Criteria andActivityIdIsNull() {
            addCriterion("ACTIVITY_ID is null");
            return this;
        }

        public Criteria andActivityIdIsNotNull() {
            addCriterion("ACTIVITY_ID is not null");
            return this;
        }

        public Criteria andActivityIdEqualTo(Long value) {
            addCriterion("ACTIVITY_ID =", value, "activityId");
            return this;
        }

        public Criteria andActivityIdNotEqualTo(Long value) {
            addCriterion("ACTIVITY_ID <>", value, "activityId");
            return this;
        }

        public Criteria andActivityIdGreaterThan(Long value) {
            addCriterion("ACTIVITY_ID >", value, "activityId");
            return this;
        }

        public Criteria andActivityIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ACTIVITY_ID >=", value, "activityId");
            return this;
        }

        public Criteria andActivityIdLessThan(Long value) {
            addCriterion("ACTIVITY_ID <", value, "activityId");
            return this;
        }

        public Criteria andActivityIdLessThanOrEqualTo(Long value) {
            addCriterion("ACTIVITY_ID <=", value, "activityId");
            return this;
        }

        public Criteria andActivityIdIn(List values) {
            addCriterion("ACTIVITY_ID in", values, "activityId");
            return this;
        }

        public Criteria andActivityIdNotIn(List values) {
            addCriterion("ACTIVITY_ID not in", values, "activityId");
            return this;
        }

        public Criteria andActivityIdBetween(Long value1, Long value2) {
            addCriterion("ACTIVITY_ID between", value1, value2, "activityId");
            return this;
        }

        public Criteria andActivityIdNotBetween(Long value1, Long value2) {
            addCriterion("ACTIVITY_ID not between", value1, value2, "activityId");
            return this;
        }

        public Criteria andGreatEqualPointIsNull() {
            addCriterion("GREAT_EQUAL_POINT is null");
            return this;
        }

        public Criteria andGreatEqualPointIsNotNull() {
            addCriterion("GREAT_EQUAL_POINT is not null");
            return this;
        }

        public Criteria andGreatEqualPointEqualTo(BigDecimal value) {
            addCriterion("GREAT_EQUAL_POINT =", value, "greatEqualPoint");
            return this;
        }

        public Criteria andGreatEqualPointNotEqualTo(BigDecimal value) {
            addCriterion("GREAT_EQUAL_POINT <>", value, "greatEqualPoint");
            return this;
        }

        public Criteria andGreatEqualPointGreaterThan(BigDecimal value) {
            addCriterion("GREAT_EQUAL_POINT >", value, "greatEqualPoint");
            return this;
        }

        public Criteria andGreatEqualPointGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("GREAT_EQUAL_POINT >=", value, "greatEqualPoint");
            return this;
        }

        public Criteria andGreatEqualPointLessThan(BigDecimal value) {
            addCriterion("GREAT_EQUAL_POINT <", value, "greatEqualPoint");
            return this;
        }

        public Criteria andGreatEqualPointLessThanOrEqualTo(BigDecimal value) {
            addCriterion("GREAT_EQUAL_POINT <=", value, "greatEqualPoint");
            return this;
        }

        public Criteria andGreatEqualPointIn(List values) {
            addCriterion("GREAT_EQUAL_POINT in", values, "greatEqualPoint");
            return this;
        }

        public Criteria andGreatEqualPointNotIn(List values) {
            addCriterion("GREAT_EQUAL_POINT not in", values, "greatEqualPoint");
            return this;
        }

        public Criteria andGreatEqualPointBetween(BigDecimal value1, Long value2) {
            addCriterion("GREAT_EQUAL_POINT between", value1, value2, "greatEqualPoint");
            return this;
        }

        public Criteria andGreatEqualPointNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("GREAT_EQUAL_POINT not between", value1, value2, "greatEqualPoint");
            return this;
        }
    }
}