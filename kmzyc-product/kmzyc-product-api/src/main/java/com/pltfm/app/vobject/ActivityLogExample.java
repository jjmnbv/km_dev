package com.pltfm.app.vobject;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ActivityLogExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACTIVITY_LOG
     *
     * @ibatorgenerated Fri Mar 18 17:32:06 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ACTIVITY_LOG
     *
     * @ibatorgenerated Fri Mar 18 17:32:06 CST 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_LOG
     *
     * @ibatorgenerated Fri Mar 18 17:32:06 CST 2016
     */
    public ActivityLogExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_LOG
     *
     * @ibatorgenerated Fri Mar 18 17:32:06 CST 2016
     */
    protected ActivityLogExample(ActivityLogExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_LOG
     *
     * @ibatorgenerated Fri Mar 18 17:32:06 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_LOG
     *
     * @ibatorgenerated Fri Mar 18 17:32:06 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_LOG
     *
     * @ibatorgenerated Fri Mar 18 17:32:06 CST 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_LOG
     *
     * @ibatorgenerated Fri Mar 18 17:32:06 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_LOG
     *
     * @ibatorgenerated Fri Mar 18 17:32:06 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_LOG
     *
     * @ibatorgenerated Fri Mar 18 17:32:06 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ACTIVITY_LOG
     *
     * @ibatorgenerated Fri Mar 18 17:32:06 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table ACTIVITY_LOG
     *
     * @ibatorgenerated Fri Mar 18 17:32:06 CST 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andLogIdIsNull() {
            addCriterion("LOG_ID is null");
            return this;
        }

        public Criteria andLogIdIsNotNull() {
            addCriterion("LOG_ID is not null");
            return this;
        }

        public Criteria andLogIdEqualTo(Long value) {
            addCriterion("LOG_ID =", value, "logId");
            return this;
        }

        public Criteria andLogIdNotEqualTo(Long value) {
            addCriterion("LOG_ID <>", value, "logId");
            return this;
        }

        public Criteria andLogIdGreaterThan(Long value) {
            addCriterion("LOG_ID >", value, "logId");
            return this;
        }

        public Criteria andLogIdGreaterThanOrEqualTo(Long value) {
            addCriterion("LOG_ID >=", value, "logId");
            return this;
        }

        public Criteria andLogIdLessThan(Long value) {
            addCriterion("LOG_ID <", value, "logId");
            return this;
        }

        public Criteria andLogIdLessThanOrEqualTo(Long value) {
            addCriterion("LOG_ID <=", value, "logId");
            return this;
        }

        public Criteria andLogIdIn(List values) {
            addCriterion("LOG_ID in", values, "logId");
            return this;
        }

        public Criteria andLogIdNotIn(List values) {
            addCriterion("LOG_ID not in", values, "logId");
            return this;
        }

        public Criteria andLogIdBetween(Long value1, Long value2) {
            addCriterion("LOG_ID between", value1, value2, "logId");
            return this;
        }

        public Criteria andLogIdNotBetween(Long value1, Long value2) {
            addCriterion("LOG_ID not between", value1, value2, "logId");
            return this;
        }

        public Criteria andLogTypeIsNull() {
            addCriterion("LOG_TYPE is null");
            return this;
        }

        public Criteria andLogTypeIsNotNull() {
            addCriterion("LOG_TYPE is not null");
            return this;
        }

        public Criteria andLogTypeEqualTo(String value) {
            addCriterion("LOG_TYPE =", value, "logType");
            return this;
        }

        public Criteria andLogTypeNotEqualTo(String value) {
            addCriterion("LOG_TYPE <>", value, "logType");
            return this;
        }

        public Criteria andLogTypeGreaterThan(String value) {
            addCriterion("LOG_TYPE >", value, "logType");
            return this;
        }

        public Criteria andLogTypeGreaterThanOrEqualTo(String value) {
            addCriterion("LOG_TYPE >=", value, "logType");
            return this;
        }

        public Criteria andLogTypeLessThan(String value) {
            addCriterion("LOG_TYPE <", value, "logType");
            return this;
        }

        public Criteria andLogTypeLessThanOrEqualTo(String value) {
            addCriterion("LOG_TYPE <=", value, "logType");
            return this;
        }

        public Criteria andLogTypeLike(String value) {
            addCriterion("LOG_TYPE like", value, "logType");
            return this;
        }

        public Criteria andLogTypeNotLike(String value) {
            addCriterion("LOG_TYPE not like", value, "logType");
            return this;
        }

        public Criteria andLogTypeIn(List values) {
            addCriterion("LOG_TYPE in", values, "logType");
            return this;
        }

        public Criteria andLogTypeNotIn(List values) {
            addCriterion("LOG_TYPE not in", values, "logType");
            return this;
        }

        public Criteria andLogTypeBetween(String value1, String value2) {
            addCriterion("LOG_TYPE between", value1, value2, "logType");
            return this;
        }

        public Criteria andLogTypeNotBetween(String value1, String value2) {
            addCriterion("LOG_TYPE not between", value1, value2, "logType");
            return this;
        }

        public Criteria andLogContentIsNull() {
            addCriterion("LOG_CONTENT is null");
            return this;
        }

        public Criteria andLogContentIsNotNull() {
            addCriterion("LOG_CONTENT is not null");
            return this;
        }

        public Criteria andLogContentEqualTo(String value) {
            addCriterion("LOG_CONTENT =", value, "logContent");
            return this;
        }

        public Criteria andLogContentNotEqualTo(String value) {
            addCriterion("LOG_CONTENT <>", value, "logContent");
            return this;
        }

        public Criteria andLogContentGreaterThan(String value) {
            addCriterion("LOG_CONTENT >", value, "logContent");
            return this;
        }

        public Criteria andLogContentGreaterThanOrEqualTo(String value) {
            addCriterion("LOG_CONTENT >=", value, "logContent");
            return this;
        }

        public Criteria andLogContentLessThan(String value) {
            addCriterion("LOG_CONTENT <", value, "logContent");
            return this;
        }

        public Criteria andLogContentLessThanOrEqualTo(String value) {
            addCriterion("LOG_CONTENT <=", value, "logContent");
            return this;
        }

        public Criteria andLogContentLike(String value) {
            addCriterion("LOG_CONTENT like", value, "logContent");
            return this;
        }

        public Criteria andLogContentNotLike(String value) {
            addCriterion("LOG_CONTENT not like", value, "logContent");
            return this;
        }

        public Criteria andLogContentIn(List values) {
            addCriterion("LOG_CONTENT in", values, "logContent");
            return this;
        }

        public Criteria andLogContentNotIn(List values) {
            addCriterion("LOG_CONTENT not in", values, "logContent");
            return this;
        }

        public Criteria andLogContentBetween(String value1, String value2) {
            addCriterion("LOG_CONTENT between", value1, value2, "logContent");
            return this;
        }

        public Criteria andLogContentNotBetween(String value1, String value2) {
            addCriterion("LOG_CONTENT not between", value1, value2, "logContent");
            return this;
        }

        public Criteria andLogOperatorIsNull() {
            addCriterion("LOG_OPERATOR is null");
            return this;
        }

        public Criteria andLogOperatorIsNotNull() {
            addCriterion("LOG_OPERATOR is not null");
            return this;
        }

        public Criteria andLogOperatorEqualTo(Long value) {
            addCriterion("LOG_OPERATOR =", value, "logOperator");
            return this;
        }

        public Criteria andLogOperatorNotEqualTo(Long value) {
            addCriterion("LOG_OPERATOR <>", value, "logOperator");
            return this;
        }

        public Criteria andLogOperatorGreaterThan(Long value) {
            addCriterion("LOG_OPERATOR >", value, "logOperator");
            return this;
        }

        public Criteria andLogOperatorGreaterThanOrEqualTo(Long value) {
            addCriterion("LOG_OPERATOR >=", value, "logOperator");
            return this;
        }

        public Criteria andLogOperatorLessThan(Long value) {
            addCriterion("LOG_OPERATOR <", value, "logOperator");
            return this;
        }

        public Criteria andLogOperatorLessThanOrEqualTo(Long value) {
            addCriterion("LOG_OPERATOR <=", value, "logOperator");
            return this;
        }

        public Criteria andLogOperatorIn(List values) {
            addCriterion("LOG_OPERATOR in", values, "logOperator");
            return this;
        }

        public Criteria andLogOperatorNotIn(List values) {
            addCriterion("LOG_OPERATOR not in", values, "logOperator");
            return this;
        }

        public Criteria andLogOperatorBetween(Long value1, Long value2) {
            addCriterion("LOG_OPERATOR between", value1, value2, "logOperator");
            return this;
        }

        public Criteria andLogOperatorNotBetween(Long value1, Long value2) {
            addCriterion("LOG_OPERATOR not between", value1, value2, "logOperator");
            return this;
        }

        public Criteria andLogOperationTimeIsNull() {
            addCriterion("LOG_OPERATION_TIME is null");
            return this;
        }

        public Criteria andLogOperationTimeIsNotNull() {
            addCriterion("LOG_OPERATION_TIME is not null");
            return this;
        }

        public Criteria andLogOperationTimeEqualTo(Date value) {
            addCriterion("LOG_OPERATION_TIME =", value, "logOperationTime");
            return this;
        }

        public Criteria andLogOperationTimeNotEqualTo(Date value) {
            addCriterion("LOG_OPERATION_TIME <>", value, "logOperationTime");
            return this;
        }

        public Criteria andLogOperationTimeGreaterThan(Date value) {
            addCriterion("LOG_OPERATION_TIME >", value, "logOperationTime");
            return this;
        }

        public Criteria andLogOperationTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("LOG_OPERATION_TIME >=", value, "logOperationTime");
            return this;
        }

        public Criteria andLogOperationTimeLessThan(Date value) {
            addCriterion("LOG_OPERATION_TIME <", value, "logOperationTime");
            return this;
        }

        public Criteria andLogOperationTimeLessThanOrEqualTo(Date value) {
            addCriterion("LOG_OPERATION_TIME <=", value, "logOperationTime");
            return this;
        }

        public Criteria andLogOperationTimeIn(List values) {
            addCriterion("LOG_OPERATION_TIME in", values, "logOperationTime");
            return this;
        }

        public Criteria andLogOperationTimeNotIn(List values) {
            addCriterion("LOG_OPERATION_TIME not in", values, "logOperationTime");
            return this;
        }

        public Criteria andLogOperationTimeBetween(Date value1, Date value2) {
            addCriterion("LOG_OPERATION_TIME between", value1, value2, "logOperationTime");
            return this;
        }

        public Criteria andLogOperationTimeNotBetween(Date value1, Date value2) {
            addCriterion("LOG_OPERATION_TIME not between", value1, value2, "logOperationTime");
            return this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("REMARK is null");
            return this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("REMARK is not null");
            return this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("REMARK =", value, "remark");
            return this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("REMARK <>", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("REMARK >", value, "remark");
            return this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK >=", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("REMARK <", value, "remark");
            return this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("REMARK <=", value, "remark");
            return this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("REMARK like", value, "remark");
            return this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("REMARK not like", value, "remark");
            return this;
        }

        public Criteria andRemarkIn(List values) {
            addCriterion("REMARK in", values, "remark");
            return this;
        }

        public Criteria andRemarkNotIn(List values) {
            addCriterion("REMARK not in", values, "remark");
            return this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("REMARK between", value1, value2, "remark");
            return this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("REMARK not between", value1, value2, "remark");
            return this;
        }
    }
}