package com.pltfm.app.vobject;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CouponProductExample  implements Serializable {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table COUPON_PRODUCT
     *
     * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table COUPON_PRODUCT
     *
     * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COUPON_PRODUCT
     *
     * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
     */
    public CouponProductExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COUPON_PRODUCT
     *
     * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
     */
    protected CouponProductExample(CouponProductExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COUPON_PRODUCT
     *
     * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COUPON_PRODUCT
     *
     * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COUPON_PRODUCT
     *
     * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COUPON_PRODUCT
     *
     * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COUPON_PRODUCT
     *
     * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COUPON_PRODUCT
     *
     * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table COUPON_PRODUCT
     *
     * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table COUPON_PRODUCT
     *
     * @ibatorgenerated Wed Aug 21 08:58:33 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCouponProductIdIsNull() {
            addCriterion("COUPON_PRODUCT_ID is null");
            return this;
        }

        public Criteria andCouponProductIdIsNotNull() {
            addCriterion("COUPON_PRODUCT_ID is not null");
            return this;
        }

        public Criteria andCouponProductIdEqualTo(BigDecimal value) {
            addCriterion("COUPON_PRODUCT_ID =", value, "couponProductId");
            return this;
        }

        public Criteria andCouponProductIdNotEqualTo(BigDecimal value) {
            addCriterion("COUPON_PRODUCT_ID <>", value, "couponProductId");
            return this;
        }

        public Criteria andCouponProductIdGreaterThan(BigDecimal value) {
            addCriterion("COUPON_PRODUCT_ID >", value, "couponProductId");
            return this;
        }

        public Criteria andCouponProductIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("COUPON_PRODUCT_ID >=", value, "couponProductId");
            return this;
        }

        public Criteria andCouponProductIdLessThan(BigDecimal value) {
            addCriterion("COUPON_PRODUCT_ID <", value, "couponProductId");
            return this;
        }

        public Criteria andCouponProductIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("COUPON_PRODUCT_ID <=", value, "couponProductId");
            return this;
        }

        public Criteria andCouponProductIdIn(List values) {
            addCriterion("COUPON_PRODUCT_ID in", values, "couponProductId");
            return this;
        }

        public Criteria andCouponProductIdNotIn(List values) {
            addCriterion("COUPON_PRODUCT_ID not in", values, "couponProductId");
            return this;
        }

        public Criteria andCouponProductIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COUPON_PRODUCT_ID between", value1, value2, "couponProductId");
            return this;
        }

        public Criteria andCouponProductIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COUPON_PRODUCT_ID not between", value1, value2, "couponProductId");
            return this;
        }

        public Criteria andCouponIdIsNull() {
            addCriterion("COUPON_ID is null");
            return this;
        }

        public Criteria andCouponIdIsNotNull() {
            addCriterion("COUPON_ID is not null");
            return this;
        }

        public Criteria andCouponIdEqualTo(Long value) {
            addCriterion("COUPON_ID =", value, "couponId");
            return this;
        }

        public Criteria andCouponIdNotEqualTo(BigDecimal value) {
            addCriterion("COUPON_ID <>", value, "couponId");
            return this;
        }

        public Criteria andCouponIdGreaterThan(BigDecimal value) {
            addCriterion("COUPON_ID >", value, "couponId");
            return this;
        }

        public Criteria andCouponIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("COUPON_ID >=", value, "couponId");
            return this;
        }

        public Criteria andCouponIdLessThan(BigDecimal value) {
            addCriterion("COUPON_ID <", value, "couponId");
            return this;
        }

        public Criteria andCouponIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("COUPON_ID <=", value, "couponId");
            return this;
        }

        public Criteria andCouponIdIn(List values) {
            addCriterion("COUPON_ID in", values, "couponId");
            return this;
        }

        public Criteria andCouponIdNotIn(List values) {
            addCriterion("COUPON_ID not in", values, "couponId");
            return this;
        }

        public Criteria andCouponIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COUPON_ID between", value1, value2, "couponId");
            return this;
        }

        public Criteria andCouponIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COUPON_ID not between", value1, value2, "couponId");
            return this;
        }

        public Criteria andRelatedIdIsNull() {
            addCriterion("RELATED_ID is null");
            return this;
        }

        public Criteria andRelatedIdIsNotNull() {
            addCriterion("RELATED_ID is not null");
            return this;
        }

        public Criteria andRelatedIdEqualTo(BigDecimal value) {
            addCriterion("RELATED_ID =", value, "relatedId");
            return this;
        }

        public Criteria andRelatedIdNotEqualTo(BigDecimal value) {
            addCriterion("RELATED_ID <>", value, "relatedId");
            return this;
        }

        public Criteria andRelatedIdGreaterThan(BigDecimal value) {
            addCriterion("RELATED_ID >", value, "relatedId");
            return this;
        }

        public Criteria andRelatedIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("RELATED_ID >=", value, "relatedId");
            return this;
        }

        public Criteria andRelatedIdLessThan(BigDecimal value) {
            addCriterion("RELATED_ID <", value, "relatedId");
            return this;
        }

        public Criteria andRelatedIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("RELATED_ID <=", value, "relatedId");
            return this;
        }

        public Criteria andRelatedIdIn(List values) {
            addCriterion("RELATED_ID in", values, "relatedId");
            return this;
        }

        public Criteria andRelatedIdNotIn(List values) {
            addCriterion("RELATED_ID not in", values, "relatedId");
            return this;
        }

        public Criteria andRelatedIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RELATED_ID between", value1, value2, "relatedId");
            return this;
        }

        public Criteria andRelatedIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RELATED_ID not between", value1, value2, "relatedId");
            return this;
        }

        public Criteria andRelatedTypeIsNull() {
            addCriterion("RELATED_TYPE is null");
            return this;
        }

        public Criteria andRelatedTypeIsNotNull() {
            addCriterion("RELATED_TYPE is not null");
            return this;
        }

        public Criteria andRelatedTypeEqualTo(BigDecimal value) {
            addCriterion("RELATED_TYPE =", value, "relatedType");
            return this;
        }

        public Criteria andRelatedTypeNotEqualTo(BigDecimal value) {
            addCriterion("RELATED_TYPE <>", value, "relatedType");
            return this;
        }

        public Criteria andRelatedTypeGreaterThan(BigDecimal value) {
            addCriterion("RELATED_TYPE >", value, "relatedType");
            return this;
        }

        public Criteria andRelatedTypeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("RELATED_TYPE >=", value, "relatedType");
            return this;
        }

        public Criteria andRelatedTypeLessThan(BigDecimal value) {
            addCriterion("RELATED_TYPE <", value, "relatedType");
            return this;
        }

        public Criteria andRelatedTypeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("RELATED_TYPE <=", value, "relatedType");
            return this;
        }

        public Criteria andRelatedTypeIn(List values) {
            addCriterion("RELATED_TYPE in", values, "relatedType");
            return this;
        }

        public Criteria andRelatedTypeNotIn(List values) {
            addCriterion("RELATED_TYPE not in", values, "relatedType");
            return this;
        }

        public Criteria andRelatedTypeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RELATED_TYPE between", value1, value2, "relatedType");
            return this;
        }

        public Criteria andRelatedTypeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RELATED_TYPE not between", value1, value2, "relatedType");
            return this;
        }
    }
}