package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProductSkuQuantityExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table PRODUCT_SKU_QUANTITY
     *
     * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table PRODUCT_SKU_QUANTITY
     *
     * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU_QUANTITY
     *
     * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
     */
    public ProductSkuQuantityExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU_QUANTITY
     *
     * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
     */
    protected ProductSkuQuantityExample(ProductSkuQuantityExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU_QUANTITY
     *
     * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU_QUANTITY
     *
     * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU_QUANTITY
     *
     * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU_QUANTITY
     *
     * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU_QUANTITY
     *
     * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU_QUANTITY
     *
     * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PRODUCT_SKU_QUANTITY
     *
     * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table PRODUCT_SKU_QUANTITY
     *
     * @ibatorgenerated Tue Nov 19 09:29:19 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andProductSkuQuantityIdIsNull() {
            addCriterion("PRODUCT_SKU_QUANTITY_ID is null");
            return this;
        }

        public Criteria andProductSkuQuantityIdIsNotNull() {
            addCriterion("PRODUCT_SKU_QUANTITY_ID is not null");
            return this;
        }

        public Criteria andProductSkuQuantityIdEqualTo(BigDecimal value) {
            addCriterion("PRODUCT_SKU_QUANTITY_ID =", value, "productSkuQuantityId");
            return this;
        }

        public Criteria andProductSkuQuantityIdNotEqualTo(BigDecimal value) {
            addCriterion("PRODUCT_SKU_QUANTITY_ID <>", value, "productSkuQuantityId");
            return this;
        }

        public Criteria andProductSkuQuantityIdGreaterThan(BigDecimal value) {
            addCriterion("PRODUCT_SKU_QUANTITY_ID >", value, "productSkuQuantityId");
            return this;
        }

        public Criteria andProductSkuQuantityIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PRODUCT_SKU_QUANTITY_ID >=", value, "productSkuQuantityId");
            return this;
        }

        public Criteria andProductSkuQuantityIdLessThan(Long value) {
            addCriterion("PRODUCT_SKU_QUANTITY_ID <", value, "productSkuQuantityId");
            return this;
        }

        public Criteria andProductSkuQuantityIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PRODUCT_SKU_QUANTITY_ID <=", value, "productSkuQuantityId");
            return this;
        }

        public Criteria andProductSkuQuantityIdIn(List values) {
            addCriterion("PRODUCT_SKU_QUANTITY_ID in", values, "productSkuQuantityId");
            return this;
        }

        public Criteria andProductSkuQuantityIdNotIn(List values) {
            addCriterion("PRODUCT_SKU_QUANTITY_ID not in", values, "productSkuQuantityId");
            return this;
        }

        public Criteria andProductSkuQuantityIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRODUCT_SKU_QUANTITY_ID between", value1, value2, "productSkuQuantityId");
            return this;
        }

        public Criteria andProductSkuQuantityIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRODUCT_SKU_QUANTITY_ID not between", value1, value2, "productSkuQuantityId");
            return this;
        }

        public Criteria andProductSkuIdIsNull() {
            addCriterion("PRODUCT_SKU_ID is null");
            return this;
        }

        public Criteria andProductSkuIdIsNotNull() {
            addCriterion("PRODUCT_SKU_ID is not null");
            return this;
        }

        public Criteria andProductSkuIdEqualTo(BigDecimal value) {
            addCriterion("PRODUCT_SKU_ID =", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdNotEqualTo(BigDecimal value) {
            addCriterion("PRODUCT_SKU_ID <>", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdGreaterThan(BigDecimal value) {
            addCriterion("PRODUCT_SKU_ID >", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PRODUCT_SKU_ID >=", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdLessThan(BigDecimal value) {
            addCriterion("PRODUCT_SKU_ID <", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PRODUCT_SKU_ID <=", value, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdIn(List values) {
            addCriterion("PRODUCT_SKU_ID in", values, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdNotIn(List values) {
            addCriterion("PRODUCT_SKU_ID not in", values, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRODUCT_SKU_ID between", value1, value2, "productSkuId");
            return this;
        }

        public Criteria andProductSkuIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PRODUCT_SKU_ID not between", value1, value2, "productSkuId");
            return this;
        }

        public Criteria andSaleQuantityIsNull() {
            addCriterion("SALE_QUANTITY is null");
            return this;
        }

        public Criteria andSaleQuantityIsNotNull() {
            addCriterion("SALE_QUANTITY is not null");
            return this;
        }

        public Criteria andSaleQuantityEqualTo(BigDecimal value) {
            addCriterion("SALE_QUANTITY =", value, "saleQuantity");
            return this;
        }

        public Criteria andSaleQuantityNotEqualTo(BigDecimal value) {
            addCriterion("SALE_QUANTITY <>", value, "saleQuantity");
            return this;
        }

        public Criteria andSaleQuantityGreaterThan(BigDecimal value) {
            addCriterion("SALE_QUANTITY >", value, "saleQuantity");
            return this;
        }

        public Criteria andSaleQuantityGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SALE_QUANTITY >=", value, "saleQuantity");
            return this;
        }

        public Criteria andSaleQuantityLessThan(BigDecimal value) {
            addCriterion("SALE_QUANTITY <", value, "saleQuantity");
            return this;
        }

        public Criteria andSaleQuantityLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SALE_QUANTITY <=", value, "saleQuantity");
            return this;
        }

        public Criteria andSaleQuantityIn(List values) {
            addCriterion("SALE_QUANTITY in", values, "saleQuantity");
            return this;
        }

        public Criteria andSaleQuantityNotIn(List values) {
            addCriterion("SALE_QUANTITY not in", values, "saleQuantity");
            return this;
        }

        public Criteria andSaleQuantityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SALE_QUANTITY between", value1, value2, "saleQuantity");
            return this;
        }

        public Criteria andSaleQuantityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SALE_QUANTITY not between", value1, value2, "saleQuantity");
            return this;
        }

        public Criteria andBrowseQuantityIsNull() {
            addCriterion("BROWSE_QUANTITY is null");
            return this;
        }

        public Criteria andBrowseQuantityIsNotNull() {
            addCriterion("BROWSE_QUANTITY is not null");
            return this;
        }

        public Criteria andBrowseQuantityEqualTo(BigDecimal value) {
            addCriterion("BROWSE_QUANTITY =", value, "browseQuantity");
            return this;
        }

        public Criteria andBrowseQuantityNotEqualTo(BigDecimal value) {
            addCriterion("BROWSE_QUANTITY <>", value, "browseQuantity");
            return this;
        }

        public Criteria andBrowseQuantityGreaterThan(BigDecimal value) {
            addCriterion("BROWSE_QUANTITY >", value, "browseQuantity");
            return this;
        }

        public Criteria andBrowseQuantityGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("BROWSE_QUANTITY >=", value, "browseQuantity");
            return this;
        }

        public Criteria andBrowseQuantityLessThan(BigDecimal value) {
            addCriterion("BROWSE_QUANTITY <", value, "browseQuantity");
            return this;
        }

        public Criteria andBrowseQuantityLessThanOrEqualTo(BigDecimal value) {
            addCriterion("BROWSE_QUANTITY <=", value, "browseQuantity");
            return this;
        }

        public Criteria andBrowseQuantityIn(List values) {
            addCriterion("BROWSE_QUANTITY in", values, "browseQuantity");
            return this;
        }

        public Criteria andBrowseQuantityNotIn(List values) {
            addCriterion("BROWSE_QUANTITY not in", values, "browseQuantity");
            return this;
        }

        public Criteria andBrowseQuantityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BROWSE_QUANTITY between", value1, value2, "browseQuantity");
            return this;
        }

        public Criteria andBrowseQuantityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BROWSE_QUANTITY not between", value1, value2, "browseQuantity");
            return this;
        }

        public Criteria andCommentQuantityIsNull() {
            addCriterion("COMMENT_QUANTITY is null");
            return this;
        }

        public Criteria andCommentQuantityIsNotNull() {
            addCriterion("COMMENT_QUANTITY is not null");
            return this;
        }

        public Criteria andCommentQuantityEqualTo(BigDecimal value) {
            addCriterion("COMMENT_QUANTITY =", value, "commentQuantity");
            return this;
        }

        public Criteria andCommentQuantityNotEqualTo(BigDecimal value) {
            addCriterion("COMMENT_QUANTITY <>", value, "commentQuantity");
            return this;
        }

        public Criteria andCommentQuantityGreaterThan(BigDecimal value) {
            addCriterion("COMMENT_QUANTITY >", value, "commentQuantity");
            return this;
        }

        public Criteria andCommentQuantityGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("COMMENT_QUANTITY >=", value, "commentQuantity");
            return this;
        }

        public Criteria andCommentQuantityLessThan(BigDecimal value) {
            addCriterion("COMMENT_QUANTITY <", value, "commentQuantity");
            return this;
        }

        public Criteria andCommentQuantityLessThanOrEqualTo(BigDecimal value) {
            addCriterion("COMMENT_QUANTITY <=", value, "commentQuantity");
            return this;
        }

        public Criteria andCommentQuantityIn(List values) {
            addCriterion("COMMENT_QUANTITY in", values, "commentQuantity");
            return this;
        }

        public Criteria andCommentQuantityNotIn(List values) {
            addCriterion("COMMENT_QUANTITY not in", values, "commentQuantity");
            return this;
        }

        public Criteria andCommentQuantityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COMMENT_QUANTITY between", value1, value2, "commentQuantity");
            return this;
        }

        public Criteria andCommentQuantityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COMMENT_QUANTITY not between", value1, value2, "commentQuantity");
            return this;
        }

        public Criteria andFavoritesQuantityIsNull() {
            addCriterion("FAVORITES_QUANTITY is null");
            return this;
        }

        public Criteria andFavoritesQuantityIsNotNull() {
            addCriterion("FAVORITES_QUANTITY is not null");
            return this;
        }

        public Criteria andFavoritesQuantityEqualTo(BigDecimal value) {
            addCriterion("FAVORITES_QUANTITY =", value, "favoritesQuantity");
            return this;
        }

        public Criteria andFavoritesQuantityNotEqualTo(BigDecimal value) {
            addCriterion("FAVORITES_QUANTITY <>", value, "favoritesQuantity");
            return this;
        }

        public Criteria andFavoritesQuantityGreaterThan(BigDecimal value) {
            addCriterion("FAVORITES_QUANTITY >", value, "favoritesQuantity");
            return this;
        }

        public Criteria andFavoritesQuantityGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FAVORITES_QUANTITY >=", value, "favoritesQuantity");
            return this;
        }

        public Criteria andFavoritesQuantityLessThan(BigDecimal value) {
            addCriterion("FAVORITES_QUANTITY <", value, "favoritesQuantity");
            return this;
        }

        public Criteria andFavoritesQuantityLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FAVORITES_QUANTITY <=", value, "favoritesQuantity");
            return this;
        }

        public Criteria andFavoritesQuantityIn(List values) {
            addCriterion("FAVORITES_QUANTITY in", values, "favoritesQuantity");
            return this;
        }

        public Criteria andFavoritesQuantityNotIn(List values) {
            addCriterion("FAVORITES_QUANTITY not in", values, "favoritesQuantity");
            return this;
        }

        public Criteria andFavoritesQuantityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FAVORITES_QUANTITY between", value1, value2, "favoritesQuantity");
            return this;
        }

        public Criteria andFavoritesQuantityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FAVORITES_QUANTITY not between", value1, value2, "favoritesQuantity");
            return this;
        }
    }
}