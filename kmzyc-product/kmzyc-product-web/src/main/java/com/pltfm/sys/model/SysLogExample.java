package com.pltfm.sys.model;


import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class SysLogExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table SYS_LOG
     *
     * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table SYS_LOG
     *
     * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_LOG
     *
     * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
     */
    public SysLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_LOG
     *
     * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
     */
    protected SysLogExample(SysLogExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_LOG
     *
     * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_LOG
     *
     * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_LOG
     *
     * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_LOG
     *
     * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_LOG
     *
     * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_LOG
     *
     * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_LOG
     *
     * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table SYS_LOG
     *
     * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andSyslogIdIsNull() {
            addCriterion("SYSLOG_ID is null");
            return this;
        }

        public Criteria andSyslogIdIsNotNull() {
            addCriterion("SYSLOG_ID is not null");
            return this;
        }

        public Criteria andSyslogIdEqualTo(Integer value) {
            addCriterion("SYSLOG_ID =", value, "syslogId");
            return this;
        }

        public Criteria andSyslogIdNotEqualTo(Integer value) {
            addCriterion("SYSLOG_ID <>", value, "syslogId");
            return this;
        }

        public Criteria andSyslogIdGreaterThan(Integer value) {
            addCriterion("SYSLOG_ID >", value, "syslogId");
            return this;
        }

        public Criteria andSyslogIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("SYSLOG_ID >=", value, "syslogId");
            return this;
        }

        public Criteria andSyslogIdLessThan(Integer value) {
            addCriterion("SYSLOG_ID <", value, "syslogId");
            return this;
        }

        public Criteria andSyslogIdLessThanOrEqualTo(Integer value) {
            addCriterion("SYSLOG_ID <=", value, "syslogId");
            return this;
        }

        public Criteria andSyslogIdIn(List<Integer> values) {
            addCriterion("SYSLOG_ID in", values, "syslogId");
            return this;
        }

        public Criteria andSyslogIdNotIn(List<Integer> values) {
            addCriterion("SYSLOG_ID not in", values, "syslogId");
            return this;
        }

        public Criteria andSyslogIdBetween(Integer value1, Integer value2) {
            addCriterion("SYSLOG_ID between", value1, value2, "syslogId");
            return this;
        }

        public Criteria andSyslogIdNotBetween(Integer value1, Integer value2) {
            addCriterion("SYSLOG_ID not between", value1, value2, "syslogId");
            return this;
        }

        public Criteria andSyslogTimeIsNull() {
            addCriterion("SYSLOG_TIME is null");
            return this;
        }

        public Criteria andSyslogTimeIsNotNull() {
            addCriterion("SYSLOG_TIME is not null");
            return this;
        }

        public Criteria andSyslogTimeEqualTo(Date value) {
            addCriterionForJDBCDate("SYSLOG_TIME =", value, "syslogTime");
            return this;
        }

        public Criteria andSyslogTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("SYSLOG_TIME <>", value, "syslogTime");
            return this;
        }

        public Criteria andSyslogTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("SYSLOG_TIME >", value, "syslogTime");
            return this;
        }

        public Criteria andSyslogTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("SYSLOG_TIME >=", value, "syslogTime");
            return this;
        }

        public Criteria andSyslogTimeLessThan(Date value) {
            addCriterionForJDBCDate("SYSLOG_TIME <", value, "syslogTime");
            return this;
        }

        public Criteria andSyslogTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("SYSLOG_TIME <=", value, "syslogTime");
            return this;
        }

        public Criteria andSyslogTimeIn(List<Date> values) {
            addCriterionForJDBCDate("SYSLOG_TIME in", values, "syslogTime");
            return this;
        }

        public Criteria andSyslogTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("SYSLOG_TIME not in", values, "syslogTime");
            return this;
        }

        public Criteria andSyslogTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("SYSLOG_TIME between", value1, value2, "syslogTime");
            return this;
        }

        public Criteria andSyslogTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("SYSLOG_TIME not between", value1, value2, "syslogTime");
            return this;
        }

        public Criteria andSyslogUserIsNull() {
            addCriterion("SYSLOG_USER is null");
            return this;
        }

        public Criteria andSyslogUserIsNotNull() {
            addCriterion("SYSLOG_USER is not null");
            return this;
        }

        public Criteria andSyslogUserEqualTo(Integer value) {
            addCriterion("SYSLOG_USER =", value, "syslogUser");
            return this;
        }

        public Criteria andSyslogUserNotEqualTo(Integer value) {
            addCriterion("SYSLOG_USER <>", value, "syslogUser");
            return this;
        }

        public Criteria andSyslogUserGreaterThan(Integer value) {
            addCriterion("SYSLOG_USER >", value, "syslogUser");
            return this;
        }

        public Criteria andSyslogUserGreaterThanOrEqualTo(Integer value) {
            addCriterion("SYSLOG_USER >=", value, "syslogUser");
            return this;
        }

        public Criteria andSyslogUserLessThan(Integer value) {
            addCriterion("SYSLOG_USER <", value, "syslogUser");
            return this;
        }

        public Criteria andSyslogUserLessThanOrEqualTo(Integer value) {
            addCriterion("SYSLOG_USER <=", value, "syslogUser");
            return this;
        }

        public Criteria andSyslogUserIn(List<Integer> values) {
            addCriterion("SYSLOG_USER in", values, "syslogUser");
            return this;
        }

        public Criteria andSyslogUserNotIn(List<Integer> values) {
            addCriterion("SYSLOG_USER not in", values, "syslogUser");
            return this;
        }

        public Criteria andSyslogUserBetween(Integer value1, Integer value2) {
            addCriterion("SYSLOG_USER between", value1, value2, "syslogUser");
            return this;
        }

        public Criteria andSyslogUserNotBetween(Integer value1, Integer value2) {
            addCriterion("SYSLOG_USER not between", value1, value2, "syslogUser");
            return this;
        }

        public Criteria andSyslogTypeIsNull() {
            addCriterion("SYSLOG_TYPE is null");
            return this;
        }

        public Criteria andSyslogTypeIsNotNull() {
            addCriterion("SYSLOG_TYPE is not null");
            return this;
        }

        public Criteria andSyslogTypeEqualTo(String value) {
            addCriterion("SYSLOG_TYPE =", value, "syslogType");
            return this;
        }

        public Criteria andSyslogTypeNotEqualTo(String value) {
            addCriterion("SYSLOG_TYPE <>", value, "syslogType");
            return this;
        }

        public Criteria andSyslogTypeGreaterThan(String value) {
            addCriterion("SYSLOG_TYPE >", value, "syslogType");
            return this;
        }

        public Criteria andSyslogTypeGreaterThanOrEqualTo(String value) {
            addCriterion("SYSLOG_TYPE >=", value, "syslogType");
            return this;
        }

        public Criteria andSyslogTypeLessThan(String value) {
            addCriterion("SYSLOG_TYPE <", value, "syslogType");
            return this;
        }

        public Criteria andSyslogTypeLessThanOrEqualTo(String value) {
            addCriterion("SYSLOG_TYPE <=", value, "syslogType");
            return this;
        }

        public Criteria andSyslogTypeLike(String value) {
            addCriterion("SYSLOG_TYPE like", value, "syslogType");
            return this;
        }

        public Criteria andSyslogTypeNotLike(String value) {
            addCriterion("SYSLOG_TYPE not like", value, "syslogType");
            return this;
        }

        public Criteria andSyslogTypeIn(List<String> values) {
            addCriterion("SYSLOG_TYPE in", values, "syslogType");
            return this;
        }

        public Criteria andSyslogTypeNotIn(List<String> values) {
            addCriterion("SYSLOG_TYPE not in", values, "syslogType");
            return this;
        }

        public Criteria andSyslogTypeBetween(String value1, String value2) {
            addCriterion("SYSLOG_TYPE between", value1, value2, "syslogType");
            return this;
        }

        public Criteria andSyslogTypeNotBetween(String value1, String value2) {
            addCriterion("SYSLOG_TYPE not between", value1, value2, "syslogType");
            return this;
        }

        public Criteria andSyslogDiscrpIsNull() {
            addCriterion("SYSLOG_DISCRP is null");
            return this;
        }

        public Criteria andSyslogDiscrpIsNotNull() {
            addCriterion("SYSLOG_DISCRP is not null");
            return this;
        }

        public Criteria andSyslogDiscrpEqualTo(String value) {
            addCriterion("SYSLOG_DISCRP =", value, "syslogDiscrp");
            return this;
        }

        public Criteria andSyslogDiscrpNotEqualTo(String value) {
            addCriterion("SYSLOG_DISCRP <>", value, "syslogDiscrp");
            return this;
        }

        public Criteria andSyslogDiscrpGreaterThan(String value) {
            addCriterion("SYSLOG_DISCRP >", value, "syslogDiscrp");
            return this;
        }

        public Criteria andSyslogDiscrpGreaterThanOrEqualTo(String value) {
            addCriterion("SYSLOG_DISCRP >=", value, "syslogDiscrp");
            return this;
        }

        public Criteria andSyslogDiscrpLessThan(String value) {
            addCriterion("SYSLOG_DISCRP <", value, "syslogDiscrp");
            return this;
        }

        public Criteria andSyslogDiscrpLessThanOrEqualTo(String value) {
            addCriterion("SYSLOG_DISCRP <=", value, "syslogDiscrp");
            return this;
        }

        public Criteria andSyslogDiscrpLike(String value) {
            addCriterion("SYSLOG_DISCRP like", value, "syslogDiscrp");
            return this;
        }

        public Criteria andSyslogDiscrpNotLike(String value) {
            addCriterion("SYSLOG_DISCRP not like", value, "syslogDiscrp");
            return this;
        }

        public Criteria andSyslogDiscrpIn(List<String> values) {
            addCriterion("SYSLOG_DISCRP in", values, "syslogDiscrp");
            return this;
        }

        public Criteria andSyslogDiscrpNotIn(List<String> values) {
            addCriterion("SYSLOG_DISCRP not in", values, "syslogDiscrp");
            return this;
        }

        public Criteria andSyslogDiscrpBetween(String value1, String value2) {
            addCriterion("SYSLOG_DISCRP between", value1, value2, "syslogDiscrp");
            return this;
        }

        public Criteria andSyslogDiscrpNotBetween(String value1, String value2) {
            addCriterion("SYSLOG_DISCRP not between", value1, value2, "syslogDiscrp");
            return this;
        }

        public Criteria andTableNameIsNull() {
            addCriterion("TABLE_NAME is null");
            return this;
        }

        public Criteria andTableNameIsNotNull() {
            addCriterion("TABLE_NAME is not null");
            return this;
        }

        public Criteria andTableNameEqualTo(String value) {
            addCriterion("TABLE_NAME =", value, "tableName");
            return this;
        }

        public Criteria andTableNameNotEqualTo(String value) {
            addCriterion("TABLE_NAME <>", value, "tableName");
            return this;
        }

        public Criteria andTableNameGreaterThan(String value) {
            addCriterion("TABLE_NAME >", value, "tableName");
            return this;
        }

        public Criteria andTableNameGreaterThanOrEqualTo(String value) {
            addCriterion("TABLE_NAME >=", value, "tableName");
            return this;
        }

        public Criteria andTableNameLessThan(String value) {
            addCriterion("TABLE_NAME <", value, "tableName");
            return this;
        }

        public Criteria andTableNameLessThanOrEqualTo(String value) {
            addCriterion("TABLE_NAME <=", value, "tableName");
            return this;
        }

        public Criteria andTableNameLike(String value) {
            addCriterion("TABLE_NAME like", value, "tableName");
            return this;
        }

        public Criteria andTableNameNotLike(String value) {
            addCriterion("TABLE_NAME not like", value, "tableName");
            return this;
        }

        public Criteria andTableNameIn(List<String> values) {
            addCriterion("TABLE_NAME in", values, "tableName");
            return this;
        }

        public Criteria andTableNameNotIn(List<String> values) {
            addCriterion("TABLE_NAME not in", values, "tableName");
            return this;
        }

        public Criteria andTableNameBetween(String value1, String value2) {
            addCriterion("TABLE_NAME between", value1, value2, "tableName");
            return this;
        }

        public Criteria andTableNameNotBetween(String value1, String value2) {
            addCriterion("TABLE_NAME not between", value1, value2, "tableName");
            return this;
        }

        public Criteria andTableIdIsNull() {
            addCriterion("TABLE_ID is null");
            return this;
        }

        public Criteria andTableIdIsNotNull() {
            addCriterion("TABLE_ID is not null");
            return this;
        }

        public Criteria andTableIdEqualTo(Integer value) {
            addCriterion("TABLE_ID =", value, "tableId");
            return this;
        }

        public Criteria andTableIdNotEqualTo(Integer value) {
            addCriterion("TABLE_ID <>", value, "tableId");
            return this;
        }

        public Criteria andTableIdGreaterThan(Integer value) {
            addCriterion("TABLE_ID >", value, "tableId");
            return this;
        }

        public Criteria andTableIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TABLE_ID >=", value, "tableId");
            return this;
        }

        public Criteria andTableIdLessThan(Integer value) {
            addCriterion("TABLE_ID <", value, "tableId");
            return this;
        }

        public Criteria andTableIdLessThanOrEqualTo(Integer value) {
            addCriterion("TABLE_ID <=", value, "tableId");
            return this;
        }

        public Criteria andTableIdIn(List<Integer> values) {
            addCriterion("TABLE_ID in", values, "tableId");
            return this;
        }

        public Criteria andTableIdNotIn(List<Integer> values) {
            addCriterion("TABLE_ID not in", values, "tableId");
            return this;
        }

        public Criteria andTableIdBetween(Integer value1, Integer value2) {
            addCriterion("TABLE_ID between", value1, value2, "tableId");
            return this;
        }

        public Criteria andTableIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TABLE_ID not between", value1, value2, "tableId");
            return this;
        }
    }
}