<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="LOGIN_INFO" >
  <resultMap id="abatorgenerated_LoginInfoResult" class="com.pltfm.app.vobject.LoginInfo" >
    <result column="N_LOGIN_ID" property="n_LoginId" />
    <result column="N_LEVEL_ID" property="n_LevelId" />
    <result column="N_CUSTOMER_TYPE_ID" property="n_CustomerTypeId" />
    <result column="LOGIN_ACCOUNT" property="loginAccount"  />
    <result column="LOGIN_PASSWORD" property="loginPassword" />
    <result column="MOBILE" property="mobile"  />
    <result column="EMAIL" property="email"  />
    <result column="N_STATUS" property="n_Status" />
    <result column="D_CREATE_DATE" property="d_CreateDate"  />
    <result column="N_CREATED" property="n_Created"  />
    <result column="D_MODIFY_DATE" property="d_ModifyDate" />
    <result column="N_MODIFIED" property="n_Modified"  />
  </resultMap>
  <!-- 客户基本信息访问实体Map -->
   <resultMap id="abatorgenerated_userinfoResultMap" class="com.pltfm.app.dataobject.UserInfoDO" >
           <result column="loginId" property="loginId"  />
            <result column="levelId" property="levelId"  />
           <result column="customerTypeId" property="customerTypeId"  />
           <result column="name" property="name"  />
            <result column="loginAccount" property="loginAccount"  />
            <result column="customerTypeName" property="customerTypeName"  />
           <result column="email" property="email"  />
            <result column="mobile" property="mobile" />
           <result column="status" property="status"  />
            <result column="loginPassword" property="loginPassword" />
           
    </resultMap>
  <resultMap id="ibatorgenerated_CountResult" class="com.pltfm.sys.model.SysModelUtil">
    <result column="the_count" property="theCount"  />
  </resultMap>
  <sql id="abatorgenerated_Example_Where_Clause" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Jul 09 16:19:36 CST 2013.
    -->
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
   <select id="selectUserInfoDOByLoginId" resultMap="abatorgenerated_userinfoResultMap" parameterClass="com.pltfm.app.dataobject.UserInfoDO" >
  
    SELECT T.N_LOGIN_ID loginId,
					       T.N_LEVEL_ID levelId,
					       T.N_CUSTOMER_TYPE_ID customerTypeId,
					       T.LOGIN_ACCOUNT loginAccount,
					        T.LOGIN_ACCOUNT name,
					       C.NAME  customerTypeName,
					        T.LOGIN_PASSWORD loginPassword,
					       A.MOBILE mobile,
					       A.EMAIL email,
					       T.N_STATUS status   
					  FROM LOGIN_INFO T,ACCOUNT_INFO A,BNES_CUSTOMER_TYPE C
            
              <dynamic prepend="where">
              T.N_LOGIN_ID=A.N_LOGIN_ID
              AND T.N_CUSTOMER_TYPE_ID =C.CUSTOMER_TYPE_ID
					      <isNotNull property="loginId">
							  <isNotEmpty property="loginId">
								AND T.N_LOGIN_ID =#loginId#
							  </isNotEmpty>
						  </isNotNull>
						   <isNotNull property="status">
							  <isNotEmpty property="status">
								AND T.N_STATUS =#status#
							  </isNotEmpty>
						  </isNotNull>
						  <isNotNull property="levelId">
							  <isNotEmpty property="levelId">
								AND T.N_LEVEL_ID =#levelId#
							  </isNotEmpty>
						  </isNotNull>
						   <isNotNull property="loginAccount">
							  <isNotEmpty property="loginAccount">
								AND T.LOGIN_ACCOUNT =#loginAccount#
							  </isNotEmpty>
						  </isNotNull>
					</dynamic>
  </select>
  <select id="abatorgenerated_selectByPrimaryKey" resultMap="abatorgenerated_LoginInfoResult" parameterClass="com.pltfm.app.vobject.LoginInfo" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Jul 09 16:19:36 CST 2013.
    -->
    select N_LOGIN_ID, N_LEVEL_ID, N_CUSTOMER_TYPE_ID, LOGIN_ACCOUNT, LOGIN_PASSWORD, MOBILE, EMAIL,
      N_STATUS, D_CREATE_DATE, N_CREATED, D_MODIFY_DATE, N_MODIFIED
    from LOGIN_INFO
    where N_LOGIN_ID = #n_LoginId:DECIMAL#
  </select>
    <!--
               跟据客户类型id查询
    -->
    <select id="abatorgenerated_selectCustomerTypeId" resultMap="abatorgenerated_LoginInfoResult" parameterClass="com.pltfm.app.vobject.LoginInfo" >
  
    select N_LOGIN_ID, N_LEVEL_ID, N_CUSTOMER_TYPE_ID, LOGIN_ACCOUNT, LOGIN_PASSWORD, MOBILE, EMAIL,
      N_STATUS, D_CREATE_DATE, N_CREATED, D_MODIFY_DATE, N_MODIFIED
    from LOGIN_INFO
    where N_CUSTOMER_TYPE_ID = #n_CustomerTypeId:DECIMAL#
  </select>
  
  <select id="abatorgenerated_selectByExample" resultMap="abatorgenerated_LoginInfoResult" parameterClass="com.pltfm.app.vobject.LoginInfoExample" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Jul 09 16:19:36 CST 2013.
    -->
    select N_LOGIN_ID, N_LEVEL_ID, N_CUSTOMER_TYPE_ID, LOGIN_ACCOUNT, LOGIN_PASSWORD, MOBILE, EMAIL,
      N_STATUS, D_CREATE_DATE, N_CREATED, D_MODIFY_DATE, N_MODIFIED
    from LOGIN_INFO
    <isParameterPresent >
      <include refid="LOGIN_INFO.abatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <delete id="abatorgenerated_deleteByPrimaryKey" parameterClass="com.pltfm.app.vobject.LoginInfo" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Jul 09 16:19:36 CST 2013.
    -->
    delete from LOGIN_INFO
    where N_LOGIN_ID = #n_LoginId:DECIMAL#
  </delete>
  <delete id="abatorgenerated_deleteByExample" parameterClass="com.pltfm.app.vobject.LoginInfoExample" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Jul 09 16:19:36 CST 2013.
    -->
    delete from LOGIN_INFO
    <include refid="LOGIN_INFO.abatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="abatorgenerated_insert" parameterClass="com.pltfm.app.vobject.LoginInfo" >
     <selectKey resultClass="java.lang.Integer" keyProperty="n_LoginId" >
           select seq_app_login.nextval from dual
      </selectKey>
    
    insert into LOGIN_INFO (N_LOGIN_ID, N_CUSTOMER_TYPE_ID, LOGIN_ACCOUNT,
      LOGIN_PASSWORD, MOBILE, EMAIL, N_STATUS, D_CREATE_DATE, N_CREATED, D_MODIFY_DATE, N_MODIFIED,CARD_NUM)
    values (#n_LoginId#,  #n_CustomerTypeId#,
      #loginAccount#, #loginPassword#, #mobile#, #email#,
      #n_Status#, #d_CreateDate#, #n_Created#, #d_ModifyDate#,
      #n_Modified#,
     <isEmpty property="cardNum"> seq_sync_to_base_user_cardnum.nextval</isEmpty>
     <isNotEmpty property="cardNum">#cardNum#</isNotEmpty>
      )
  </insert>
  <update id="abatorgenerated_updateByPrimaryKey" parameterClass="com.pltfm.app.vobject.LoginInfo" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Jul 09 16:19:36 CST 2013.
    -->
    update LOGIN_INFO
    <dynamic prepend="set" >
      <isNotNull prepend="," property="n_LevelId" >
      N_LEVEL_ID = #n_LevelId#
      </isNotNull>
      <isNotNull prepend="," property="n_CustomerTypeId" >
      N_CUSTOMER_TYPE_ID = #n_CustomerTypeId#
      </isNotNull>
      <isNotNull prepend="," property="loginAccount" >
      LOGIN_ACCOUNT = #loginAccount#
      </isNotNull>
      <isNotNull prepend="," property="loginPassword" >
      LOGIN_PASSWORD = #loginPassword#
      </isNotNull>
     <isNotNull prepend="," property="mobile" >
      MOBILE = #mobile#
      </isNotNull>
      <isNotNull prepend="," property="email" >
      EMAIL = #email#
      </isNotNull>
      <isNotNull prepend="," property="n_Status" >
      N_STATUS = #n_Status#
      </isNotNull>
      <isNotNull prepend="," property="d_ModifyDate" >
      D_MODIFY_DATE = #d_ModifyDate#
      </isNotNull>
      <isNotNull prepend="," property="n_Modified" >
      N_MODIFIED = #n_Modified#
      </isNotNull>
      </dynamic>
    where N_LOGIN_ID = #n_LoginId# 
  </update>
  <update id="abatorgenerated_updateByPrimaryKeySelective" parameterClass="com.pltfm.app.vobject.LoginInfo" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Jul 09 16:19:36 CST 2013.
    -->
    update LOGIN_INFO
    <dynamic prepend="set" >
      <isNotNull prepend="," property="n_LevelId" >
        N_LEVEL_ID = #n_LevelId#
      </isNotNull>
      <isNotNull prepend="," property="n_CustomerTypeId" >
        N_CUSTOMER_TYPE_ID = #n_CustomerTypeId#
      </isNotNull>
      <isNotNull prepend="," property="loginAccount" >
        LOGIN_ACCOUNT = #loginAccount#
        
      </isNotNull>
      <isNotNull prepend="," property="loginPassword" >
        LOGIN_PASSWORD = #loginPassword#
      </isNotNull>
      <isNotNull prepend="," property="mobile" >
        MOBILE = #mobile#
      </isNotNull>
      <isNotNull prepend="," property="email" >
        EMAIL = #email#
      </isNotNull>
      <isNotNull prepend="," property="n_Status" >
        N_STATUS = #n_Status#
      </isNotNull>
      <isNotNull prepend="," property="d_CreateDate" >
        D_CREATE_DATE = #d_CreateDate#
      </isNotNull>
      <isNotNull prepend="," property="n_Created" >
        N_CREATED = #n_Created#
      </isNotNull>
      <isNotNull prepend="," property="d_ModifyDate" >
        D_MODIFY_DATE = #d_ModifyDate#
      </isNotNull>
      <isNotNull prepend="," property="n_Modified" >
        N_MODIFIED = #n_Modified#
      </isNotNull>
    </dynamic>
    where N_LOGIN_ID = #n_LoginId#
  </update>
  <select id="abatorgenerated_countByExample" parameterClass="com.pltfm.app.vobject.LoginInfoExample" resultClass="java.lang.Integer" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Jul 09 16:19:36 CST 2013.
    -->
    select count(*) from LOGIN_INFO
    <include refid="LOGIN_INFO.abatorgenerated_Example_Where_Clause" />
  </select>
  <update id="abatorgenerated_updateByExampleSelective" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Jul 09 16:19:36 CST 2013.
    -->
    update LOGIN_INFO
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.n_LoginId" >
        N_LOGIN_ID = #record.n_LoginId#
      </isNotNull>
      <isNotNull prepend="," property="record.n_LevelId" >
        N_LEVEL_ID = #record.n_LevelId#
      </isNotNull>
      <isNotNull prepend="," property="record.n_CustomerTypeId" >
        N_CUSTOMER_TYPE_ID = #record.n_CustomerTypeId#
      </isNotNull>
      <isNotNull prepend="," property="record.loginAccount" >
        LOGIN_ACCOUNT = #record.loginAccount#
      </isNotNull>
      <isNotNull prepend="," property="record.loginPassword" >
        LOGIN_PASSWORD = #record.loginPassword#
      </isNotNull>
      <isNotNull prepend="," property="record.mobile" >
        MOBILE = #record.mobile#
      </isNotNull>
      <isNotNull prepend="," property="record.email" >
        EMAIL = #record.email#
      </isNotNull>
      <isNotNull prepend="," property="record.n_Status" >
        N_STATUS = #record.n_Status#
      </isNotNull>
      <isNotNull prepend="," property="record.d_CreateDate" >
        D_CREATE_DATE = #record.d_CreateDate#
      </isNotNull>
      <isNotNull prepend="," property="record.n_Created" >
        N_CREATED = #record.n_Created#
      </isNotNull>
      <isNotNull prepend="," property="record.d_ModifyDate" >
        D_MODIFY_DATE = #record.d_ModifyDate#
      </isNotNull>
      <isNotNull prepend="," property="record.n_Modified" >
        N_MODIFIED = #record.n_Modified#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="LOGIN_INFO.abatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="abatorgenerated_updateByExample" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Tue Jul 09 16:19:36 CST 2013.
    -->
    update LOGIN_INFO
    set N_LOGIN_ID = #record.n_LoginId#,
      N_LEVEL_ID = #record.n_LevelId#,
      N_CUSTOMER_TYPE_ID = #record.n_CustomerTypeId#,
      LOGIN_ACCOUNT = #record.loginAccount#,
      LOGIN_PASSWORD = #record.loginPassword#,
      MOBILE = #record.mobile#,
      EMAIL = #record.email#,
      N_STATUS = #record.n_Status#,
      D_CREATE_DATE = #record.d_CreateDate#,
      N_CREATED = #record.n_Created#,
      D_MODIFY_DATE = #record.d_ModifyDate#,
      N_MODIFIED = #record.n_Modified#
    <isParameterPresent >
      <include refid="LOGIN_INFO.abatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
 
<!-- 登录信息列表 -->
  <select id="searchPageByVo" resultMap="abatorgenerated_LoginInfoResult" parameterClass="com.pltfm.app.vobject.LoginInfo">
		select N_LOGIN_ID, N_LEVEL_ID, N_CUSTOMER_TYPE_ID, LOGIN_ACCOUNT, LOGIN_PASSWORD, MOBILE, EMAIL,
      N_STATUS, D_CREATE_DATE, N_CREATED, D_MODIFY_DATE, N_MODIFIED
    FROM (
    select  ROW_NUMBER() OVER(order by N_LOGIN_ID desc) as view_row_number, tt.* from LOGIN_INFO tt
    where N_LOGIN_ID  in (select N_LOGIN_ID from login_info where N_CUSTOMER_TYPE_ID=#n_CustomerTypeId:Integer# ) 
     <isNotNull property="loginAccount">
			  <isNotEmpty prepend="and" property="loginAccount">
				   LOGIN_ACCOUNT like '%loginAccount%'
			  </isNotEmpty>
		  </isNotNull>
    )
    <![CDATA[ where view_row_number <= #max# and view_row_number > #skip# ]]>
	</select>
	
 <!-- **************** search user's roleList by vo  ****************  -->
  <select id="selectCountByVo" parameterClass="com.pltfm.app.vobject.LoginInfo" resultMap="ibatorgenerated_CountResult">
     select count(1) the_count from LOGIN_INFO 
       where N_LOGIN_ID  in (select N_LOGIN_ID from login_info where N_CUSTOMER_TYPE_ID=#n_CustomerTypeId:Integer# ) 
		   <isNotNull property="loginAccount">
			  <isNotEmpty prepend="and" property="loginAccount">
				   LOGIN_ACCOUNT like '%loginAccount%'
			  </isNotEmpty>
		  </isNotNull>
  </select>
  
  <!-- 冻结 取得登录id 登录帐户名 姓名 -->
  <select id="getLoginAll" resultMap="abatorgenerated_LoginInfoResult" parameterClass="com.pltfm.app.vobject.LoginInfo">
		select N_LOGIN_ID, N_LEVEL_ID, N_CUSTOMER_TYPE_ID, LOGIN_ACCOUNT, LOGIN_PASSWORD, MOBILE, EMAIL,
      N_STATUS, D_CREATE_DATE, N_CREATED, D_MODIFY_DATE, N_MODIFIED FROM LOGIN_INFO 
	</select>
	
	
	  <select id="getAllMobileUser" resultMap="abatorgenerated_LoginInfoResult" parameterClass="com.pltfm.app.vobject.LoginInfo">
		select N_LOGIN_ID, N_LEVEL_ID, N_CUSTOMER_TYPE_ID, LOGIN_ACCOUNT, LOGIN_PASSWORD, MOBILE, EMAIL,
      N_STATUS, D_CREATE_DATE, N_CREATED, D_MODIFY_DATE, N_MODIFIED FROM LOGIN_INFO 
	</select>
	
	
	
	
	<!-- 客户基本信息查询 -->
	<select id="abatorgenerated_pageByUserInfo"  resultMap="abatorgenerated_userinfoResultMap" parameterClass="com.pltfm.app.dataobject.UserInfoDO">
	  select * from (
		        select  ROW_NUMBER() OVER(order by loginId desc) as view_row_number, t.* from  (
				select  l.n_level_id levelId,l.n_login_id loginId,l.login_account loginAccount,l.n_customer_type_id customerTypeId,t.name customerTypeName,p.name name,l.email email,l.n_status status,l.mobile mobile,l.login_password loginPassword
					 from PERSONAL_BASIC_INFO p inner join LOGIN_INFO l on  l.N_LOGIN_ID =p.N_LOGIN_ID
					 left join BNES_CUSTOMER_TYPE t on l.n_customer_type_id =t.customer_type_id  where l.n_status=1
					   )t
				   <dynamic prepend="where">
					      <isNotNull property="loginAccount">
							  <isNotEmpty prepend="and" property="loginAccount">
								loginAccount like '%$loginAccount$%'
							  </isNotEmpty>
						  </isNotNull>
						  <isNotNull property="customerTypeId">
							<isNotEmpty prepend="and" property="customerTypeId">
								customerTypeId = #customerTypeId:INTEGER#
							</isNotEmpty>
						</isNotNull>
						  <isNotNull property="name">
							<isNotEmpty prepend="and" property="name">
								name  like '%$name$%'
							</isNotEmpty>
						</isNotNull>
						<isNotNull property="mobile">
							  <isNotEmpty prepend="and" property="mobile">
								mobile =#mobile#
							  </isNotEmpty>
						</isNotNull>
					</dynamic>
			)
		  <![CDATA[ where view_row_number <= #endIndex# and view_row_number > #startIndex# ]]>
	</select>
	<!-- 客户基本信息总数 -->
	<select id="abatorgenerated_byCountUserInfo"  resultClass="java.lang.Integer"  parameterClass="com.pltfm.app.dataobject.UserInfoDO">
		  select  count(*) from  (
				select  l.n_level_id levelId,l.n_login_id loginId,l.login_account loginAccount,l.n_customer_type_id customerTypeId,t.name customerTypeName,p.name name,l.email email,l.n_status status,l.mobile mobile,l.login_password loginPassword
					 from PERSONAL_BASIC_INFO p inner join LOGIN_INFO l on  l.N_LOGIN_ID =p.N_LOGIN_ID
					 left join BNES_CUSTOMER_TYPE t on l.n_customer_type_id =t.customer_type_id where l.n_status=1
					   )t
					    <dynamic prepend="where">
					      <isNotNull property="loginAccount">
							  <isNotEmpty prepend="and" property="loginAccount">
								loginAccount like '%$loginAccount$%'
							  </isNotEmpty>
						  </isNotNull>
						  <isNotNull property="customerTypeId">
							<isNotEmpty prepend="and" property="customerTypeId">
								customerTypeId = #customerTypeId:INTEGER#
							</isNotEmpty>
						</isNotNull>
						  <isNotNull property="name">
							<isNotEmpty prepend="and" property="name">
								name  like '%$name$%'
							</isNotEmpty>
						</isNotNull>
						<isNotNull property="mobile">
							  <isNotEmpty prepend="and" property="mobile">
								mobile =#mobile#
							  </isNotEmpty>
						  </isNotNull>
					</dynamic>
	</select>
	<select id="abatorgenerated_selectByLoginId"  resultMap="abatorgenerated_userinfoResultMap" parameterClass="com.pltfm.app.dataobject.UserInfoDO">
	  select * from (
		        select  ROW_NUMBER() OVER(order by loginId desc) as view_row_number, t.* from  (
				select  l.n_level_id levelId,l.n_login_id loginId,l.login_account loginAccount,l.n_customer_type_id customerTypeId,t.name customerTypeName,p.name name,l.email email,l.n_status status,l.mobile mobile,l.login_password loginPassword
					 from PERSONAL_BASIC_INFO p inner join LOGIN_INFO l on  l.N_LOGIN_ID =p.N_LOGIN_ID
					 left join BNES_CUSTOMER_TYPE t on l.n_customer_type_id =t.customer_type_id  and l.n_status=1
					)t
				   <dynamic prepend="where">
					      <isNotNull property="loginId">
							  <isNotEmpty prepend="and" property="loginId">
								loginId =#loginId:INTEGER#
							  </isNotEmpty>
						  </isNotNull>
						  <isNotNull property="loginAccount">
							  <isNotEmpty prepend="and" property="loginAccount">
								loginAccount =#loginAccount#
							  </isNotEmpty>
						  </isNotNull>
						   <isNotNull property="email">
							  <isNotEmpty prepend="and" property="email">
								email =#email#
							  </isNotEmpty>
						  </isNotNull>
						   <isNotNull property="customerTypeId">
							  <isNotEmpty prepend="and" property="customerTypeId">
								customerTypeId =#customerTypeId#
							  </isNotEmpty>
						  </isNotNull>
						   <isNotNull property="mobile">
							  <isNotEmpty prepend="and" property="mobile">
								mobile =#mobile#
							  </isNotEmpty>
						  </isNotNull>
					</dynamic>
			)
	</select>
	<!-- 通过客户等级主键查询客户信息 -->
	<select id="abatorgenerated_selectByUserLevelId"  resultMap="abatorgenerated_userinfoResultMap" parameterClass="com.pltfm.app.dataobject.UserInfoDO">
	  select * from (
		        select  ROW_NUMBER() OVER(order by loginId desc) as view_row_number, t.* from  (
				select  l.n_level_id levelId,l.n_login_id loginId,l.login_account loginAccount,l.n_customer_type_id customerTypeId,t.name customerTypeName,p.name name,l.email email,l.n_status status,l.mobile mobile,l.login_password loginPassword
					 from PERSONAL_BASIC_INFO p inner join LOGIN_INFO l on  l.N_LOGIN_ID =p.N_LOGIN_ID
					 left join BNES_CUSTOMER_TYPE t on l.n_customer_type_id =t.customer_type_id  and l.n_status=1
					  )t
				   <dynamic prepend="where">
					      <isNotNull property="levelId">
							  <isNotEmpty prepend="and" property="levelId">
								levelId =#levelId#
							  </isNotEmpty>
						  </isNotNull>
					</dynamic>
			)
	</select>
	
		<!-- 登录信息查询 -->
	<select id="login_ByInfo"  resultMap="abatorgenerated_LoginInfoResult" parameterClass="com.pltfm.app.dataobject.UserInfoDO">
						SELECT T.N_LOGIN_ID,
					       T.N_LEVEL_ID,
					       T.N_CUSTOMER_TYPE_ID,
					       T.LOGIN_ACCOUNT,
					       T.LOGIN_PASSWORD,
					       T.MOBILE,
					       T.EMAIL,
					       T.N_STATUS,
					       T.D_CREATE_DATE,
					       T.N_CREATED,
					       T.D_MODIFY_DATE,
					       T.N_MODIFIED
					  FROM LOGIN_INFO T
				   <dynamic prepend="where">
					      <isNotNull property="loginAccount">
							  <isNotEmpty prepend="and" property="loginAccount">
								T.LOGIN_ACCOUNT like '%$loginAccount$%'
							  </isNotEmpty>
						  </isNotNull>
						  
					</dynamic>
			
	</select>
	<select id="generateUserCardNum"  resultClass="java.lang.String" >
		select seq_sync_to_base_user_cardnum.nextval from dual;
	</select>
	
	<select id="queryUserCardNumByLoginAccount"  resultClass="java.lang.String" parameterClass="java.lang.String">
		select l.card_num from login_info l where l.login_account = #accountLogin# ;
	</select>

	   <!-- 查询是否存在等级  -->
  <select id="selectUserLevel" resultClass="java.lang.Integer" parameterClass="java.lang.Integer" >
     select count(1) the_count from LOGIN_INFO where N_LEVEL_ID = #n_LevelId#
  </select>
    <!-- 查询邮件是否重复 -->
   <select id="countByEmail" resultClass="java.lang.Integer"  parameterClass="com.pltfm.app.dataobject.UserInfoDO" >
    SELECT COUNT(1) FROM (SELECT L.N_LOGIN_ID,L.EMAIL, A.EMAIL AS AEMAIL
  FROM LOGIN_INFO L, ACCOUNT_INFO A
   <dynamic prepend="where">
   L.N_LOGIN_ID = A.N_LOGIN_ID
		<isNotNull property="loginId">
			<isNotEmpty prepend="and" property="loginId">
				<![CDATA[ AND	L.N_LOGIN_ID<> #loginId#  ]]>
			</isNotEmpty>
		</isNotNull>
					</dynamic>
        )
         <dynamic prepend="where">
  
		<isNotNull property="email">
		EMAIL =#email#
			<isNotEmpty prepend="or" property="email">
				or AEMAIL=#email#
			</isNotEmpty>
		</isNotNull>
	</dynamic>  
  </select> 
  
  <select id="countByMobile" resultClass="java.lang.Integer"  parameterClass="com.pltfm.app.dataobject.UserInfoDO" >
    SELECT COUNT(1) FROM (SELECT L.N_LOGIN_ID,L.mobile
  FROM LOGIN_INFO L
   <dynamic prepend="where">
		<isNotNull property="loginId">
			<isNotEmpty prepend="and" property="loginId">
				<![CDATA[ L.N_LOGIN_ID<> #loginId#  ]]>
			</isNotEmpty>
		</isNotNull>
					</dynamic>
        )
         <dynamic prepend="where">
		<isNotNull property="mobile">
			<isNotEmpty prepend="and" property="mobile">
				mobile=#mobile#
			</isNotEmpty>
		</isNotNull>
	</dynamic>  
  </select> 
  
  
		<!-- 根据登录名查询用户信息 -->
  	<select id="SQL_QUERY_USER_INFO_BY_LOGIN_ACCOUNT" resultMap="abatorgenerated_LoginInfoResult" parameterClass="string">
  		select n_login_id,
		       n_level_id,
		       n_customer_type_id,
		       login_account,
		       login_password,
		       mobile,
		       email,
		       n_status,
		       d_create_date,
		       n_created,
		       d_modify_date,
		       n_modified
		  from login_info li
		 where li.login_account = #loginAccount:VARCHAR# and rownum=1
  	</select>
  	
  	<!-- 根据用户ID查询用户信息 -->
  	<select id="SQL_GET_USER_INFO" resultMap="abatorgenerated_LoginInfoResult" parameterClass="long">
  		select n_login_id,
		       n_level_id,
		       n_customer_type_id,
		       login_account,
		       login_password,
		       mobile,
		       email,
		       n_status,
		       d_create_date,
		       n_created,
		       d_modify_date,
		       n_modified
		  from login_info li
		 where li.n_login_id = #loginId:DECIMAL#
  	</select>
  <select id="queryUserInfoPrimaryKeyByCardNum" resultClass="java.util.HashMap" parameterClass="java.lang.String">
	 select l.n_login_id,
        p.n_personal_id,
        h.n_health_ygeneric_id,
        c.n_account_id
   from login_info           l,
        personal_basic_info  p,
        account_info         c,
        health_ygeneric_info h
  where l.n_login_id = p.n_login_id
    and p.n_login_id = c.n_login_id
    and c.n_login_id = h.n_login_id
    and l.card_num=#cardNum#
  </select>
 
   
  <select id="SQL_QUERY_USER_BY_LOGIN_ID" parameterClass="java.lang.Long"  resultClass="com.pltfm.app.dataobject.UserInfoDO" >  
   	select li.card_num             cardNum,
	       li.login_account        loginAccount,
	       ac.name                 name,
	       p.sex                   sex,
	       li.mobile               mobile,
	       p.d_birthday            birthday,
	       h.n_marital_status      maritalStatus,
	       p.province              province,
	       p.city                  city,
	       p.area                  area,
	       p.detailedaddress       detailedaddress,
	       li.email                email,
	       li.d_create_date        d_CreateDate,
	       pi.n_available_integral n_AvailableIntegral
	  from  login_info           li,
	        account_info         ac,
	        personal_basic_info  p,
	        health_ygeneric_info h,
	        personality_info     pi
	 where ac.n_login_id = li.n_login_id
	   and p.n_login_id = li.n_login_id
	   and h.n_login_id = li.n_login_id
	   and pi.n_login_id = li.n_login_id
      and li.n_login_id=#loginId:DECIMAL#  
 </select>  
   
   
   <select id="queryUserLoginPassword" parameterClass="com.kmzyc.b2b.vo.UserBaseInfo" resultClass="com.kmzyc.b2b.vo.UserBaseInfo">
       select
        li.n_login_id loginId,
        li.login_account loginAccount,
        li.mobile mobile,
        li.login_password password
       from
        login_info li where li.login_password = #password:VARCHAR#
       <isNotEmpty property="loginId">AND LI.N_LOGIN_ID= #loginId:DECIMAL#</isNotEmpty>
       <isNotEmpty property="loginAccount">AND LI.LOGIN_ACCOUNT= #loginAccount:VARCHAR#</isNotEmpty>
       <isNotEmpty property="mobile">AND LI.MOBILE= #mobile:VARCHAR#</isNotEmpty>
   </select>
   
    <insert id="insertOrUpdate_loginInfo" parameterClass="com.pltfm.app.vobject.LoginInfo" >
     <selectKey resultClass="java.lang.Integer" keyProperty="n_LoginId" >
           select seq_app_login.nextval from dual
      </selectKey>
   	 MERGE INTO LOGIN_INFO li
   	 USING(select #loginAccount# loginAccount from dual) temp_li
   	 ON(li.LOGIN_ACCOUNT = temp_li.loginAccount)
   	 WHEN NOT MATCHED THEN
   	  
	    insert (N_LOGIN_ID, N_CUSTOMER_TYPE_ID, LOGIN_ACCOUNT,
	      LOGIN_PASSWORD, MOBILE, EMAIL, N_STATUS, D_CREATE_DATE, N_CREATED, D_MODIFY_DATE, N_MODIFIED,CARD_NUM)
	    values (#n_LoginId#,  #n_CustomerTypeId#,
	      #loginAccount#, #loginPassword#, #mobile#, #email#,
	      #n_Status#, sysdate, #n_Created#, #d_ModifyDate#,
	      #n_Modified#,
	     <isEmpty property="cardNum"> seq_sync_to_base_user_cardnum.nextval</isEmpty>
	     <isNotEmpty property="cardNum">#cardNum#</isNotEmpty>
	      )
	 WHEN MATCHED THEN     
       update
    <dynamic prepend="set" >
      <isNotNull prepend="," property="n_LevelId" >
      N_LEVEL_ID = #n_LevelId#
      </isNotNull>
      <isNotNull prepend="," property="n_CustomerTypeId" >
      N_CUSTOMER_TYPE_ID = #n_CustomerTypeId#
      </isNotNull>
      <isNotNull prepend="," property="loginPassword" >
      LOGIN_PASSWORD = #loginPassword#
      </isNotNull>
     <isNotNull prepend="," property="mobile" >
      MOBILE = #mobile#
      </isNotNull>
      <isNotNull prepend="," property="email" >
      EMAIL = #email#
      </isNotNull>
      <isNotNull prepend="," property="n_Status" >
      N_STATUS = #n_Status#
      </isNotNull>
      <isNotNull prepend="," property="n_Modified" >
      N_MODIFIED = #n_Modified#
      </isNotNull>
       
      D_MODIFY_DATE = sysdate
     
      </dynamic>
    where LOGIN_ACCOUNT = #loginAccount#
      
  </insert>
  
</sqlMap>