<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<!-- 开启注解扫描 -->
	<context:annotation-config />
	<context:component-scan base-package="com" />

	<bean id="propertyConfigurer"
		class="com.kmzyc.zkconfig.ZKPropertyPlaceholderConfigurer">
		<constructor-arg ref="zkClient" />
		<property name="zkPaths">
			<list>
				<value>/kmconfig/km-user/jdbc</value>
				<value>/kmconfig/km-user/memcached</value>
				<value>/kmconfig/km-user/redis</value>
				<!--删除 <value>/kmconfig/km-user/mongo</value> -->
				<value>/kmconfig/km-user/pathConfig</value>
				<value>/kmconfig/km-user/kmibport</value>
				<value>/kmconfig/km-user/util</value>
				<value>/kmconfig/km-user/crowd</value>
				<value>/kmconfig/km-user/microActive</value>
				<value>/kmconfig/km-user/dubbo</value>
				<value>/kmconfig/commons/mq.properties</value>
				<value>/kmconfig/commons/redis.properties</value>
				<value>/kmconfig/commons/common.properties</value>
			</list>
		</property>
	</bean>

	<bean id="zkClient" class="com.kmzyc.zkconfig.CuratorFrameworkFactoryBean" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="maxActive" value="${maxActive}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="poolPreparedStatements" value="${poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${maxPoolPreparedStatementPerConnectionSize}" />
		<property name="filters" value="stat" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="300" />
		<property name="logAbandoned" value="true" />
	</bean>

	<bean id="sqlMapClientSys" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation"
			value="classpath:com/pltfm/sys/sqlmap/sql-map-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- spring工具类方便在非spring管理环境中获取bean -->
	<bean id="springUtils" class="com.kmzyc.util.SpringUtils" />


	<!-- Spring提供的iBatis的SqlMap配置 -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation"
			value="classpath:com/pltfm/app/sqlmap/sql-map-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 添加事物注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- spring 发送邮件配置 -->
	<!--删除邮件，mongo  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.163.com" />
		<property name="port" value="25" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>

	replica-set 用,隔开多个mongo
	<mongo:mongo id="replicaSetMongo" replica-set="${dbparam.host}">
		<mongo:options connections-per-host="${dbparam.poolSize}"
			threads-allowed-to-block-for-connection-multiplier="${dbparam.blockNum}"
			connect-timeout="${dbparam.connectTimeout}" max-wait-time="${dbparam.maxWaitTime}"
			auto-connect-retry="${dbparam.autoConnectRetry}" socket-keep-alive="${dbparam.socketKeepAlive}"
			socket-timeout="${dbparam.socketTimeout}" slave-ok="${dbparam.slaveOk}"
			write-number="1" write-timeout="0" write-fsync="true" />
	</mongo:mongo> 

	参数库
	<bean id="dbparamUserInfo" class="org.springframework.data.authentication.UserCredentials">
		<constructor-arg index="0" value="${dbparam.uname}" />
		<constructor-arg index="1" value="${dbparam.upass}" />
	</bean>
	<bean id="paramMongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg index="0" ref="replicaSetMongo" />
		<constructor-arg index="1" value="${dbparam.dbname}" />
		<constructor-arg index="2" ref="dbparamUserInfo" />
	</bean> -->
	<!-- 参数库 -->
	<!-- mongo -->
	<!-- spring发送邮件配置结束 -->


	<!-- 线程池 -->
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 线程池维护线程的最少数量 -->
		<property name="corePoolSize" value="5" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="3000" />
		<!-- 线程池维护线程的最大数量 -->
		<property name="maxPoolSize" value="50" />
		<!-- 线程池所使用的缓冲队列 -->
		<property name="queueCapacity" value="800" />
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
</beans>
