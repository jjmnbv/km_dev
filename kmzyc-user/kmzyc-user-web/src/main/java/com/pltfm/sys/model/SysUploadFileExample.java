package com.pltfm.sys.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SysUploadFileExample implements Serializable {
  /**
   * 
   */
  private static final long serialVersionUID = 67469811919934886L;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * sys_upload_file
   *
   * @ibatorgenerated Wed Dec 30 18:19:34 CST 2009
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * sys_upload_file
   *
   * @ibatorgenerated Wed Dec 30 18:19:34 CST 2009
   */
  protected List<Criteria> oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_upload_file
   *
   * @ibatorgenerated Wed Dec 30 18:19:34 CST 2009
   */
  public SysUploadFileExample() {
    oredCriteria = new ArrayList<Criteria>();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_upload_file
   *
   * @ibatorgenerated Wed Dec 30 18:19:34 CST 2009
   */
  protected SysUploadFileExample(SysUploadFileExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_upload_file
   *
   * @ibatorgenerated Wed Dec 30 18:19:34 CST 2009
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_upload_file
   *
   * @ibatorgenerated Wed Dec 30 18:19:34 CST 2009
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_upload_file
   *
   * @ibatorgenerated Wed Dec 30 18:19:34 CST 2009
   */
  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_upload_file
   *
   * @ibatorgenerated Wed Dec 30 18:19:34 CST 2009
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_upload_file
   *
   * @ibatorgenerated Wed Dec 30 18:19:34 CST 2009
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_upload_file
   *
   * @ibatorgenerated Wed Dec 30 18:19:34 CST 2009
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_upload_file
   *
   * @ibatorgenerated Wed Dec 30 18:19:34 CST 2009
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * sys_upload_file
   *
   * @ibatorgenerated Wed Dec 30 18:19:34 CST 2009
   */
  public static class Criteria implements Serializable {
    protected List<String> criteriaWithoutValue;

    protected List<Map<String, Object>> criteriaWithSingleValue;

    protected List<Map<String, Object>> criteriaWithListValue;

    protected List<Map<String, Object>> criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList<String>();
      criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
      criteriaWithListValue = new ArrayList<Map<String, Object>>();
      criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List<String> getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List<Map<String, Object>> getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List<Map<String, Object>> getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List<Map<String, Object>> getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map<String, Object> map = new HashMap<String, Object>();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List<? extends Object> values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map<String, Object> map = new HashMap<String, Object>();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List<Object> list = new ArrayList<Object>();
      list.add(value1);
      list.add(value2);
      Map<String, Object> map = new HashMap<String, Object>();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    public Criteria andFileIdIsNull() {
      addCriterion("file_id is null");
      return this;
    }

    public Criteria andFileIdIsNotNull() {
      addCriterion("file_id is not null");
      return this;
    }

    public Criteria andFileIdEqualTo(Integer value) {
      addCriterion("file_id =", value, "fileId");
      return this;
    }

    public Criteria andFileIdNotEqualTo(Integer value) {
      addCriterion("file_id <>", value, "fileId");
      return this;
    }

    public Criteria andFileIdGreaterThan(Integer value) {
      addCriterion("file_id >", value, "fileId");
      return this;
    }

    public Criteria andFileIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("file_id >=", value, "fileId");
      return this;
    }

    public Criteria andFileIdLessThan(Integer value) {
      addCriterion("file_id <", value, "fileId");
      return this;
    }

    public Criteria andFileIdLessThanOrEqualTo(Integer value) {
      addCriterion("file_id <=", value, "fileId");
      return this;
    }

    public Criteria andFileIdIn(List<Integer> values) {
      addCriterion("file_id in", values, "fileId");
      return this;
    }

    public Criteria andFileIdNotIn(List<Integer> values) {
      addCriterion("file_id not in", values, "fileId");
      return this;
    }

    public Criteria andFileIdBetween(Integer value1, Integer value2) {
      addCriterion("file_id between", value1, value2, "fileId");
      return this;
    }

    public Criteria andFileIdNotBetween(Integer value1, Integer value2) {
      addCriterion("file_id not between", value1, value2, "fileId");
      return this;
    }

    public Criteria andFileNameIsNull() {
      addCriterion("file_name is null");
      return this;
    }

    public Criteria andFileNameIsNotNull() {
      addCriterion("file_name is not null");
      return this;
    }

    public Criteria andFileNameEqualTo(String value) {
      addCriterion("file_name =", value, "fileName");
      return this;
    }

    public Criteria andFileNameNotEqualTo(String value) {
      addCriterion("file_name <>", value, "fileName");
      return this;
    }

    public Criteria andFileNameGreaterThan(String value) {
      addCriterion("file_name >", value, "fileName");
      return this;
    }

    public Criteria andFileNameGreaterThanOrEqualTo(String value) {
      addCriterion("file_name >=", value, "fileName");
      return this;
    }

    public Criteria andFileNameLessThan(String value) {
      addCriterion("file_name <", value, "fileName");
      return this;
    }

    public Criteria andFileNameLessThanOrEqualTo(String value) {
      addCriterion("file_name <=", value, "fileName");
      return this;
    }

    public Criteria andFileNameLike(String value) {
      addCriterion("file_name like", value, "fileName");
      return this;
    }

    public Criteria andFileNameNotLike(String value) {
      addCriterion("file_name not like", value, "fileName");
      return this;
    }

    public Criteria andFileNameIn(List<String> values) {
      addCriterion("file_name in", values, "fileName");
      return this;
    }

    public Criteria andFileNameNotIn(List<String> values) {
      addCriterion("file_name not in", values, "fileName");
      return this;
    }

    public Criteria andFileNameBetween(String value1, String value2) {
      addCriterion("file_name between", value1, value2, "fileName");
      return this;
    }

    public Criteria andFileNameNotBetween(String value1, String value2) {
      addCriterion("file_name not between", value1, value2, "fileName");
      return this;
    }

    public Criteria andFileUrlIsNull() {
      addCriterion("file_url is null");
      return this;
    }

    public Criteria andFileUrlIsNotNull() {
      addCriterion("file_url is not null");
      return this;
    }

    public Criteria andFileUrlEqualTo(String value) {
      addCriterion("file_url =", value, "fileUrl");
      return this;
    }

    public Criteria andFileUrlNotEqualTo(String value) {
      addCriterion("file_url <>", value, "fileUrl");
      return this;
    }

    public Criteria andFileUrlGreaterThan(String value) {
      addCriterion("file_url >", value, "fileUrl");
      return this;
    }

    public Criteria andFileUrlGreaterThanOrEqualTo(String value) {
      addCriterion("file_url >=", value, "fileUrl");
      return this;
    }

    public Criteria andFileUrlLessThan(String value) {
      addCriterion("file_url <", value, "fileUrl");
      return this;
    }

    public Criteria andFileUrlLessThanOrEqualTo(String value) {
      addCriterion("file_url <=", value, "fileUrl");
      return this;
    }

    public Criteria andFileUrlLike(String value) {
      addCriterion("file_url like", value, "fileUrl");
      return this;
    }

    public Criteria andFileUrlNotLike(String value) {
      addCriterion("file_url not like", value, "fileUrl");
      return this;
    }

    public Criteria andFileUrlIn(List<String> values) {
      addCriterion("file_url in", values, "fileUrl");
      return this;
    }

    public Criteria andFileUrlNotIn(List<String> values) {
      addCriterion("file_url not in", values, "fileUrl");
      return this;
    }

    public Criteria andFileUrlBetween(String value1, String value2) {
      addCriterion("file_url between", value1, value2, "fileUrl");
      return this;
    }

    public Criteria andFileUrlNotBetween(String value1, String value2) {
      addCriterion("file_url not between", value1, value2, "fileUrl");
      return this;
    }

    public Criteria andFileTypeIsNull() {
      addCriterion("file_type is null");
      return this;
    }

    public Criteria andFileTypeIsNotNull() {
      addCriterion("file_type is not null");
      return this;
    }

    public Criteria andFileTypeEqualTo(String value) {
      addCriterion("file_type =", value, "fileType");
      return this;
    }

    public Criteria andFileTypeNotEqualTo(String value) {
      addCriterion("file_type <>", value, "fileType");
      return this;
    }

    public Criteria andFileTypeGreaterThan(String value) {
      addCriterion("file_type >", value, "fileType");
      return this;
    }

    public Criteria andFileTypeGreaterThanOrEqualTo(String value) {
      addCriterion("file_type >=", value, "fileType");
      return this;
    }

    public Criteria andFileTypeLessThan(String value) {
      addCriterion("file_type <", value, "fileType");
      return this;
    }

    public Criteria andFileTypeLessThanOrEqualTo(String value) {
      addCriterion("file_type <=", value, "fileType");
      return this;
    }

    public Criteria andFileTypeLike(String value) {
      addCriterion("file_type like", value, "fileType");
      return this;
    }

    public Criteria andFileTypeNotLike(String value) {
      addCriterion("file_type not like", value, "fileType");
      return this;
    }

    public Criteria andFileTypeIn(List<String> values) {
      addCriterion("file_type in", values, "fileType");
      return this;
    }

    public Criteria andFileTypeNotIn(List<String> values) {
      addCriterion("file_type not in", values, "fileType");
      return this;
    }

    public Criteria andFileTypeBetween(String value1, String value2) {
      addCriterion("file_type between", value1, value2, "fileType");
      return this;
    }

    public Criteria andFileTypeNotBetween(String value1, String value2) {
      addCriterion("file_type not between", value1, value2, "fileType");
      return this;
    }

    public Criteria andFileSizeIsNull() {
      addCriterion("file_size is null");
      return this;
    }

    public Criteria andFileSizeIsNotNull() {
      addCriterion("file_size is not null");
      return this;
    }

    public Criteria andFileSizeEqualTo(Double value) {
      addCriterion("file_size =", value, "fileSize");
      return this;
    }

    public Criteria andFileSizeNotEqualTo(Double value) {
      addCriterion("file_size <>", value, "fileSize");
      return this;
    }

    public Criteria andFileSizeGreaterThan(Double value) {
      addCriterion("file_size >", value, "fileSize");
      return this;
    }

    public Criteria andFileSizeGreaterThanOrEqualTo(Double value) {
      addCriterion("file_size >=", value, "fileSize");
      return this;
    }

    public Criteria andFileSizeLessThan(Double value) {
      addCriterion("file_size <", value, "fileSize");
      return this;
    }

    public Criteria andFileSizeLessThanOrEqualTo(Double value) {
      addCriterion("file_size <=", value, "fileSize");
      return this;
    }

    public Criteria andFileSizeIn(List<Double> values) {
      addCriterion("file_size in", values, "fileSize");
      return this;
    }

    public Criteria andFileSizeNotIn(List<Double> values) {
      addCriterion("file_size not in", values, "fileSize");
      return this;
    }

    public Criteria andFileSizeBetween(Double value1, Double value2) {
      addCriterion("file_size between", value1, value2, "fileSize");
      return this;
    }

    public Criteria andFileSizeNotBetween(Double value1, Double value2) {
      addCriterion("file_size not between", value1, value2, "fileSize");
      return this;
    }

    public Criteria andUploadTimeIsNull() {
      addCriterion("upload_time is null");
      return this;
    }

    public Criteria andUploadTimeIsNotNull() {
      addCriterion("upload_time is not null");
      return this;
    }

    public Criteria andUploadTimeEqualTo(Date value) {
      addCriterion("upload_time =", value, "uploadTime");
      return this;
    }

    public Criteria andUploadTimeNotEqualTo(Date value) {
      addCriterion("upload_time <>", value, "uploadTime");
      return this;
    }

    public Criteria andUploadTimeGreaterThan(Date value) {
      addCriterion("upload_time >", value, "uploadTime");
      return this;
    }

    public Criteria andUploadTimeGreaterThanOrEqualTo(Date value) {
      addCriterion("upload_time >=", value, "uploadTime");
      return this;
    }

    public Criteria andUploadTimeLessThan(Date value) {
      addCriterion("upload_time <", value, "uploadTime");
      return this;
    }

    public Criteria andUploadTimeLessThanOrEqualTo(Date value) {
      addCriterion("upload_time <=", value, "uploadTime");
      return this;
    }

    public Criteria andUploadTimeIn(List<Date> values) {
      addCriterion("upload_time in", values, "uploadTime");
      return this;
    }

    public Criteria andUploadTimeNotIn(List<Date> values) {
      addCriterion("upload_time not in", values, "uploadTime");
      return this;
    }

    public Criteria andUploadTimeBetween(Date value1, Date value2) {
      addCriterion("upload_time between", value1, value2, "uploadTime");
      return this;
    }

    public Criteria andUploadTimeNotBetween(Date value1, Date value2) {
      addCriterion("upload_time not between", value1, value2, "uploadTime");
      return this;
    }

    public Criteria andUploadUserIsNull() {
      addCriterion("upload_user is null");
      return this;
    }

    public Criteria andUploadUserIsNotNull() {
      addCriterion("upload_user is not null");
      return this;
    }

    public Criteria andUploadUserEqualTo(Integer value) {
      addCriterion("upload_user =", value, "uploadUser");
      return this;
    }

    public Criteria andUploadUserNotEqualTo(Integer value) {
      addCriterion("upload_user <>", value, "uploadUser");
      return this;
    }

    public Criteria andUploadUserGreaterThan(Integer value) {
      addCriterion("upload_user >", value, "uploadUser");
      return this;
    }

    public Criteria andUploadUserGreaterThanOrEqualTo(Integer value) {
      addCriterion("upload_user >=", value, "uploadUser");
      return this;
    }

    public Criteria andUploadUserLessThan(Integer value) {
      addCriterion("upload_user <", value, "uploadUser");
      return this;
    }

    public Criteria andUploadUserLessThanOrEqualTo(Integer value) {
      addCriterion("upload_user <=", value, "uploadUser");
      return this;
    }

    public Criteria andUploadUserIn(List<Integer> values) {
      addCriterion("upload_user in", values, "uploadUser");
      return this;
    }

    public Criteria andUploadUserNotIn(List<Integer> values) {
      addCriterion("upload_user not in", values, "uploadUser");
      return this;
    }

    public Criteria andUploadUserBetween(Integer value1, Integer value2) {
      addCriterion("upload_user between", value1, value2, "uploadUser");
      return this;
    }

    public Criteria andUploadUserNotBetween(Integer value1, Integer value2) {
      addCriterion("upload_user not between", value1, value2, "uploadUser");
      return this;
    }

    public Criteria andRemarkIsNull() {
      addCriterion("remark is null");
      return this;
    }

    public Criteria andRemarkIsNotNull() {
      addCriterion("remark is not null");
      return this;
    }

    public Criteria andRemarkEqualTo(String value) {
      addCriterion("remark =", value, "remark");
      return this;
    }

    public Criteria andRemarkNotEqualTo(String value) {
      addCriterion("remark <>", value, "remark");
      return this;
    }

    public Criteria andRemarkGreaterThan(String value) {
      addCriterion("remark >", value, "remark");
      return this;
    }

    public Criteria andRemarkGreaterThanOrEqualTo(String value) {
      addCriterion("remark >=", value, "remark");
      return this;
    }

    public Criteria andRemarkLessThan(String value) {
      addCriterion("remark <", value, "remark");
      return this;
    }

    public Criteria andRemarkLessThanOrEqualTo(String value) {
      addCriterion("remark <=", value, "remark");
      return this;
    }

    public Criteria andRemarkLike(String value) {
      addCriterion("remark like", value, "remark");
      return this;
    }

    public Criteria andRemarkNotLike(String value) {
      addCriterion("remark not like", value, "remark");
      return this;
    }

    public Criteria andRemarkIn(List<String> values) {
      addCriterion("remark in", values, "remark");
      return this;
    }

    public Criteria andRemarkNotIn(List<String> values) {
      addCriterion("remark not in", values, "remark");
      return this;
    }

    public Criteria andRemarkBetween(String value1, String value2) {
      addCriterion("remark between", value1, value2, "remark");
      return this;
    }

    public Criteria andRemarkNotBetween(String value1, String value2) {
      addCriterion("remark not between", value1, value2, "remark");
      return this;
    }

    public Criteria andFileDataIsNull() {
      addCriterion("file_data is null");
      return this;
    }

    public Criteria andFileDataIsNotNull() {
      addCriterion("file_data is not null");
      return this;
    }

    public Criteria andFileDataEqualTo(String value) {
      addCriterion("file_data =", value, "fileData");
      return this;
    }

    public Criteria andFileDataNotEqualTo(String value) {
      addCriterion("file_data <>", value, "fileData");
      return this;
    }

    public Criteria andFileDataGreaterThan(String value) {
      addCriterion("file_data >", value, "fileData");
      return this;
    }

    public Criteria andFileDataGreaterThanOrEqualTo(String value) {
      addCriterion("file_data >=", value, "fileData");
      return this;
    }

    public Criteria andFileDataLessThan(String value) {
      addCriterion("file_data <", value, "fileData");
      return this;
    }

    public Criteria andFileDataLessThanOrEqualTo(String value) {
      addCriterion("file_data <=", value, "fileData");
      return this;
    }

    public Criteria andFileDataLike(String value) {
      addCriterion("file_data like", value, "fileData");
      return this;
    }

    public Criteria andFileDataNotLike(String value) {
      addCriterion("file_data not like", value, "fileData");
      return this;
    }

    public Criteria andFileDataIn(List<String> values) {
      addCriterion("file_data in", values, "fileData");
      return this;
    }

    public Criteria andFileDataNotIn(List<String> values) {
      addCriterion("file_data not in", values, "fileData");
      return this;
    }

    public Criteria andFileDataBetween(String value1, String value2) {
      addCriterion("file_data between", value1, value2, "fileData");
      return this;
    }

    public Criteria andFileDataNotBetween(String value1, String value2) {
      addCriterion("file_data not between", value1, value2, "fileData");
      return this;
    }
  }
}
