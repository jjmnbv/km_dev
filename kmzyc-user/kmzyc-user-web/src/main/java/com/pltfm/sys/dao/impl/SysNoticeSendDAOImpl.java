package com.pltfm.sys.dao.impl;

import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.pltfm.sys.dao.SysNoticeSendDAO;
import com.pltfm.sys.model.SysNoticeSend;
import com.pltfm.sys.model.SysNoticeSendExample;
import com.pltfm.sys.model.SysNoticeSendKey;

@Component(value = "sysNoticeSendDAO")
public class SysNoticeSendDAOImpl implements SysNoticeSendDAO {
  @Resource(name = "sqlMapClient")
  /**
   * 数据库操作对象
   */
  private SqlMapClient sqlMapClient;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_notice_send
   *
   * @ibatorgenerated Wed Jan 27 15:44:06 CST 2010
   */
  public int countByExample(SysNoticeSendExample example) throws SQLException {
    Integer count = (Integer) sqlMapClient
        .queryForObject("sys_notice_send.ibatorgenerated_countByExample", example);
    return count;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_notice_send
   *
   * @ibatorgenerated Wed Jan 27 15:44:06 CST 2010
   */
  public int deleteByExample(SysNoticeSendExample example) throws SQLException {
    int rows = sqlMapClient.delete("sys_notice_send.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_notice_send
   *
   * @ibatorgenerated Wed Jan 27 15:44:06 CST 2010
   */
  public int deleteByPrimaryKey(SysNoticeSendKey key) throws SQLException {
    int rows = sqlMapClient.delete("sys_notice_send.ibatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_notice_send
   *
   * @ibatorgenerated Wed Jan 27 15:44:06 CST 2010
   */
  public void insert(SysNoticeSend record) throws SQLException {
    sqlMapClient.insert("sys_notice_send.ibatorgenerated_insert", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_notice_send
   *
   * @ibatorgenerated Wed Jan 27 15:44:06 CST 2010
   */
  public void insertSelective(SysNoticeSend record) throws SQLException {
    sqlMapClient.insert("sys_notice_send.ibatorgenerated_insertSelective", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_notice_send
   *
   * @ibatorgenerated Wed Jan 27 15:44:06 CST 2010
   */
  @SuppressWarnings("unchecked")
  public List<SysNoticeSend> selectByExample(SysNoticeSendExample example) throws SQLException {
    List<SysNoticeSend> list =
        sqlMapClient.queryForList("sys_notice_send.ibatorgenerated_selectByExample", example);
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_notice_send
   *
   * @ibatorgenerated Wed Jan 27 15:44:06 CST 2010
   */
  public SysNoticeSend selectByPrimaryKey(SysNoticeSendKey key) throws SQLException {
    SysNoticeSend record = (SysNoticeSend) sqlMapClient
        .queryForObject("sys_notice_send.ibatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_notice_send
   *
   * @ibatorgenerated Wed Jan 27 15:44:06 CST 2010
   */
  public int updateByExampleSelective(SysNoticeSend record, SysNoticeSendExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows =
        sqlMapClient.update("sys_notice_send.ibatorgenerated_updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_notice_send
   *
   * @ibatorgenerated Wed Jan 27 15:44:06 CST 2010
   */
  public int updateByExample(SysNoticeSend record, SysNoticeSendExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("sys_notice_send.ibatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_notice_send
   *
   * @ibatorgenerated Wed Jan 27 15:44:06 CST 2010
   */
  public int updateByPrimaryKeySelective(SysNoticeSend record) throws SQLException {
    int rows =
        sqlMapClient.update("sys_notice_send.ibatorgenerated_updateByPrimaryKeySelective", record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table sys_notice_send
   *
   * @ibatorgenerated Wed Jan 27 15:44:06 CST 2010
   */
  public int updateByPrimaryKey(SysNoticeSend record) throws SQLException {
    int rows = sqlMapClient.update("sys_notice_send.ibatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * sys_notice_send
   *
   * @ibatorgenerated Wed Jan 27 15:44:06 CST 2010
   */
  private static class UpdateByExampleParms extends SysNoticeSendExample {
    private Object record;

    public UpdateByExampleParms(Object record, SysNoticeSendExample example) {
      super(example);
      this.record = record;
    }

    public Object getRecord() {
      return record;
    }
  }



  /**
   * select sendList by noticdId
   *
   * @param Integer
   * @return List
   * @exception SQLException
   */
  public List selectSendListByNotice(Integer noticeId) throws SQLException {
    List list = sqlMapClient.queryForList("sys_notice_send.selectSendListByNotice", noticeId);
    return list;
  }
}
