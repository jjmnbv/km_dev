package com.pltfm.app.dao.impl;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.pltfm.app.dao.AllergySymptomsInfoDAO;
import com.pltfm.app.vobject.AllergySymptomsInfo;
import com.pltfm.app.vobject.AllergySymptomsInfoExample;

public class AllergySymptomsInfoDAOImpl implements AllergySymptomsInfoDAO {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  private SqlMapClient sqlMapClient;



  public SqlMapClient getSqlMapClient() {
    return sqlMapClient;
  }

  public void setSqlMapClient(SqlMapClient sqlMapClient) {
    this.sqlMapClient = sqlMapClient;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public int countByExample(AllergySymptomsInfoExample example) throws SQLException {
    Integer count = (Integer) sqlMapClient
        .queryForObject("ALLERGY_SYMPTOMS_INFO.ibatorgenerated_countByExample", example);
    return count.intValue();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public int deleteByExample(AllergySymptomsInfoExample example) throws SQLException {
    int rows =
        sqlMapClient.delete("ALLERGY_SYMPTOMS_INFO.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public int deleteByPrimaryKey(Integer nAllergySymptomsId) throws SQLException {
    AllergySymptomsInfo key = new AllergySymptomsInfo();
    key.setnAllergySymptomsId(nAllergySymptomsId);
    int rows = sqlMapClient.delete("ALLERGY_SYMPTOMS_INFO.ibatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public void insert(AllergySymptomsInfo record) throws SQLException {
    sqlMapClient.insert("ALLERGY_SYMPTOMS_INFO.ibatorgenerated_insert", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public void insertSelective(AllergySymptomsInfo record) throws SQLException {
    sqlMapClient.insert("ALLERGY_SYMPTOMS_INFO.ibatorgenerated_insertSelective", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public List selectByExample(AllergySymptomsInfoExample example) throws SQLException {
    List list =
        sqlMapClient.queryForList("ALLERGY_SYMPTOMS_INFO.ibatorgenerated_selectByExample", example);
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public AllergySymptomsInfo selectByPrimaryKey(Integer nAllergySymptomsId) throws SQLException {
    AllergySymptomsInfo key = new AllergySymptomsInfo();
    key.setnAllergySymptomsId(nAllergySymptomsId);
    AllergySymptomsInfo record = (AllergySymptomsInfo) sqlMapClient
        .queryForObject("ALLERGY_SYMPTOMS_INFO.ibatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public int updateByExampleSelective(AllergySymptomsInfo record,
      AllergySymptomsInfoExample example) throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("ALLERGY_SYMPTOMS_INFO.ibatorgenerated_updateByExampleSelective",
        parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public int updateByExample(AllergySymptomsInfo record, AllergySymptomsInfoExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("ALLERGY_SYMPTOMS_INFO.ibatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public int updateByPrimaryKeySelective(AllergySymptomsInfo record) throws SQLException {
    int rows = sqlMapClient
        .update("ALLERGY_SYMPTOMS_INFO.ibatorgenerated_updateByPrimaryKeySelective", record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public int updateByPrimaryKey(AllergySymptomsInfo record) throws SQLException {
    int rows =
        sqlMapClient.update("ALLERGY_SYMPTOMS_INFO.ibatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  private static class UpdateByExampleParms extends AllergySymptomsInfoExample {
    private Object record;

    public UpdateByExampleParms(Object record, AllergySymptomsInfoExample example) {
      super(example);
      this.record = record;
    }

    public Object getRecord() {
      return record;
    }
  }
}
