package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

/**
 * 个人基本信息条件类
 * 
 * @author cjm
 * @since 2013-7-10
 */
public class PersonalBasicInfoExample {
  /**
   * This field was generated by Abator for iBATIS. This field corresponds to the database table
   * PERSONAL_BASIC_INFO
   *
   * @abatorgenerated Tue Jul 09 16:32:51 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Abator for iBATIS. This field corresponds to the database table
   * PERSONAL_BASIC_INFO
   *
   * @abatorgenerated Tue Jul 09 16:32:51 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * PERSONAL_BASIC_INFO
   *
   * @abatorgenerated Tue Jul 09 16:32:51 CST 2013
   */
  public PersonalBasicInfoExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * PERSONAL_BASIC_INFO
   *
   * @abatorgenerated Tue Jul 09 16:32:51 CST 2013
   */
  protected PersonalBasicInfoExample(PersonalBasicInfoExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * PERSONAL_BASIC_INFO
   *
   * @abatorgenerated Tue Jul 09 16:32:51 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * PERSONAL_BASIC_INFO
   *
   * @abatorgenerated Tue Jul 09 16:32:51 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * PERSONAL_BASIC_INFO
   *
   * @abatorgenerated Tue Jul 09 16:32:51 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * PERSONAL_BASIC_INFO
   *
   * @abatorgenerated Tue Jul 09 16:32:51 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * PERSONAL_BASIC_INFO
   *
   * @abatorgenerated Tue Jul 09 16:32:51 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * PERSONAL_BASIC_INFO
   *
   * @abatorgenerated Tue Jul 09 16:32:51 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * PERSONAL_BASIC_INFO
   *
   * @abatorgenerated Tue Jul 09 16:32:51 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Abator for iBATIS. This class corresponds to the database table
   * PERSONAL_BASIC_INFO
   *
   * @abatorgenerated Tue Jul 09 16:32:51 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()),
          new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andn_PersonalIdIsNull() {
      addCriterion("N_PERSONAL_ID is null");
      return this;
    }

    public Criteria andn_PersonalIdIsNotNull() {
      addCriterion("N_PERSONAL_ID is not null");
      return this;
    }

    public Criteria andn_PersonalIdEqualTo(BigDecimal value) {
      addCriterion("N_PERSONAL_ID =", value, "n_PersonalId");
      return this;
    }

    public Criteria andn_PersonalIdNotEqualTo(BigDecimal value) {
      addCriterion("N_PERSONAL_ID <>", value, "n_PersonalId");
      return this;
    }

    public Criteria andn_PersonalIdGreaterThan(BigDecimal value) {
      addCriterion("N_PERSONAL_ID >", value, "n_PersonalId");
      return this;
    }

    public Criteria andn_PersonalIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_PERSONAL_ID >=", value, "n_PersonalId");
      return this;
    }

    public Criteria andn_PersonalIdLessThan(BigDecimal value) {
      addCriterion("N_PERSONAL_ID <", value, "n_PersonalId");
      return this;
    }

    public Criteria andn_PersonalIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_PERSONAL_ID <=", value, "n_PersonalId");
      return this;
    }

    public Criteria andn_PersonalIdIn(List values) {
      addCriterion("N_PERSONAL_ID in", values, "n_PersonalId");
      return this;
    }

    public Criteria andn_PersonalIdNotIn(List values) {
      addCriterion("N_PERSONAL_ID not in", values, "n_PersonalId");
      return this;
    }

    public Criteria andn_PersonalIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_PERSONAL_ID between", value1, value2, "n_PersonalId");
      return this;
    }

    public Criteria andn_PersonalIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_PERSONAL_ID not between", value1, value2, "n_PersonalId");
      return this;
    }

    public Criteria andn_LoginIdIsNull() {
      addCriterion("N_LOGIN_ID is null");
      return this;
    }

    public Criteria andn_LoginIdIsNotNull() {
      addCriterion("N_LOGIN_ID is not null");
      return this;
    }

    public Criteria andn_LoginIdEqualTo(BigDecimal value) {
      addCriterion("N_LOGIN_ID =", value, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdNotEqualTo(BigDecimal value) {
      addCriterion("N_LOGIN_ID <>", value, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdGreaterThan(BigDecimal value) {
      addCriterion("N_LOGIN_ID >", value, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_LOGIN_ID >=", value, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdLessThan(BigDecimal value) {
      addCriterion("N_LOGIN_ID <", value, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_LOGIN_ID <=", value, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdIn(List values) {
      addCriterion("N_LOGIN_ID in", values, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdNotIn(List values) {
      addCriterion("N_LOGIN_ID not in", values, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_LOGIN_ID between", value1, value2, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_LOGIN_ID not between", value1, value2, "n_LoginId");
      return this;
    }

    public Criteria andNameIsNull() {
      addCriterion("NAME is null");
      return this;
    }

    public Criteria andNameIsNotNull() {
      addCriterion("NAME is not null");
      return this;
    }

    public Criteria andNameEqualTo(String value) {
      addCriterion("NAME =", value, "name");
      return this;
    }

    public Criteria andNameNotEqualTo(String value) {
      addCriterion("NAME <>", value, "name");
      return this;
    }

    public Criteria andNameGreaterThan(String value) {
      addCriterion("NAME >", value, "name");
      return this;
    }

    public Criteria andNameGreaterThanOrEqualTo(String value) {
      addCriterion("NAME >=", value, "name");
      return this;
    }

    public Criteria andNameLessThan(String value) {
      addCriterion("NAME <", value, "name");
      return this;
    }

    public Criteria andNameLessThanOrEqualTo(String value) {
      addCriterion("NAME <=", value, "name");
      return this;
    }

    public Criteria andNameLike(String value) {
      addCriterion("NAME like", value, "name");
      return this;
    }

    public Criteria andNameNotLike(String value) {
      addCriterion("NAME not like", value, "name");
      return this;
    }

    public Criteria andNameIn(List values) {
      addCriterion("NAME in", values, "name");
      return this;
    }

    public Criteria andNameNotIn(List values) {
      addCriterion("NAME not in", values, "name");
      return this;
    }

    public Criteria andNameBetween(String value1, String value2) {
      addCriterion("NAME between", value1, value2, "name");
      return this;
    }

    public Criteria andNameNotBetween(String value1, String value2) {
      addCriterion("NAME not between", value1, value2, "name");
      return this;
    }

    public Criteria andSexIsNull() {
      addCriterion("SEX is null");
      return this;
    }

    public Criteria andSexIsNotNull() {
      addCriterion("SEX is not null");
      return this;
    }

    public Criteria andSexEqualTo(String value) {
      addCriterion("SEX =", value, "sex");
      return this;
    }

    public Criteria andSexNotEqualTo(String value) {
      addCriterion("SEX <>", value, "sex");
      return this;
    }

    public Criteria andSexGreaterThan(String value) {
      addCriterion("SEX >", value, "sex");
      return this;
    }

    public Criteria andSexGreaterThanOrEqualTo(String value) {
      addCriterion("SEX >=", value, "sex");
      return this;
    }

    public Criteria andSexLessThan(String value) {
      addCriterion("SEX <", value, "sex");
      return this;
    }

    public Criteria andSexLessThanOrEqualTo(String value) {
      addCriterion("SEX <=", value, "sex");
      return this;
    }

    public Criteria andSexLike(String value) {
      addCriterion("SEX like", value, "sex");
      return this;
    }

    public Criteria andSexNotLike(String value) {
      addCriterion("SEX not like", value, "sex");
      return this;
    }

    public Criteria andSexIn(List values) {
      addCriterion("SEX in", values, "sex");
      return this;
    }

    public Criteria andSexNotIn(List values) {
      addCriterion("SEX not in", values, "sex");
      return this;
    }

    public Criteria andSexBetween(String value1, String value2) {
      addCriterion("SEX between", value1, value2, "sex");
      return this;
    }

    public Criteria andSexNotBetween(String value1, String value2) {
      addCriterion("SEX not between", value1, value2, "sex");
      return this;
    }

    public Criteria andn_AgeIsNull() {
      addCriterion("N_AGE is null");
      return this;
    }

    public Criteria andn_AgeIsNotNull() {
      addCriterion("N_AGE is not null");
      return this;
    }

    public Criteria andn_AgeEqualTo(BigDecimal value) {
      addCriterion("N_AGE =", value, "n_Age");
      return this;
    }

    public Criteria andn_AgeNotEqualTo(BigDecimal value) {
      addCriterion("N_AGE <>", value, "n_Age");
      return this;
    }

    public Criteria andn_AgeGreaterThan(BigDecimal value) {
      addCriterion("N_AGE >", value, "n_Age");
      return this;
    }

    public Criteria andn_AgeGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_AGE >=", value, "n_Age");
      return this;
    }

    public Criteria andn_AgeLessThan(BigDecimal value) {
      addCriterion("N_AGE <", value, "n_Age");
      return this;
    }

    public Criteria andn_AgeLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_AGE <=", value, "n_Age");
      return this;
    }

    public Criteria andn_AgeIn(List values) {
      addCriterion("N_AGE in", values, "n_Age");
      return this;
    }

    public Criteria andn_AgeNotIn(List values) {
      addCriterion("N_AGE not in", values, "n_Age");
      return this;
    }

    public Criteria andn_AgeBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_AGE between", value1, value2, "n_Age");
      return this;
    }

    public Criteria andn_AgeNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_AGE not between", value1, value2, "n_Age");
      return this;
    }

    public Criteria andd_BirthdayIsNull() {
      addCriterion("D_BIRTHDAY is null");
      return this;
    }

    public Criteria andd_BirthdayIsNotNull() {
      addCriterion("D_BIRTHDAY is not null");
      return this;
    }

    public Criteria andd_BirthdayEqualTo(Date value) {
      addCriterionForJDBCDate("D_BIRTHDAY =", value, "d_Birthday");
      return this;
    }

    public Criteria andd_BirthdayNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_BIRTHDAY <>", value, "d_Birthday");
      return this;
    }

    public Criteria andd_BirthdayGreaterThan(Date value) {
      addCriterionForJDBCDate("D_BIRTHDAY >", value, "d_Birthday");
      return this;
    }

    public Criteria andd_BirthdayGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_BIRTHDAY >=", value, "d_Birthday");
      return this;
    }

    public Criteria andd_BirthdayLessThan(Date value) {
      addCriterionForJDBCDate("D_BIRTHDAY <", value, "d_Birthday");
      return this;
    }

    public Criteria andd_BirthdayLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_BIRTHDAY <=", value, "d_Birthday");
      return this;
    }

    public Criteria andd_BirthdayIn(List values) {
      addCriterionForJDBCDate("D_BIRTHDAY in", values, "d_Birthday");
      return this;
    }

    public Criteria andd_BirthdayNotIn(List values) {
      addCriterionForJDBCDate("D_BIRTHDAY not in", values, "d_Birthday");
      return this;
    }

    public Criteria andd_BirthdayBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_BIRTHDAY between", value1, value2, "d_Birthday");
      return this;
    }

    public Criteria andd_BirthdayNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_BIRTHDAY not between", value1, value2, "d_Birthday");
      return this;
    }

    public Criteria andMobileIsNull() {
      addCriterion("MOBILE is null");
      return this;
    }

    public Criteria andMobileIsNotNull() {
      addCriterion("MOBILE is not null");
      return this;
    }

    public Criteria andMobileEqualTo(String value) {
      addCriterion("MOBILE =", value, "mobile");
      return this;
    }

    public Criteria andMobileNotEqualTo(String value) {
      addCriterion("MOBILE <>", value, "mobile");
      return this;
    }

    public Criteria andMobileGreaterThan(String value) {
      addCriterion("MOBILE >", value, "mobile");
      return this;
    }

    public Criteria andMobileGreaterThanOrEqualTo(String value) {
      addCriterion("MOBILE >=", value, "mobile");
      return this;
    }

    public Criteria andMobileLessThan(String value) {
      addCriterion("MOBILE <", value, "mobile");
      return this;
    }

    public Criteria andMobileLessThanOrEqualTo(String value) {
      addCriterion("MOBILE <=", value, "mobile");
      return this;
    }

    public Criteria andMobileLike(String value) {
      addCriterion("MOBILE like", value, "mobile");
      return this;
    }

    public Criteria andMobileNotLike(String value) {
      addCriterion("MOBILE not like", value, "mobile");
      return this;
    }

    public Criteria andMobileIn(List values) {
      addCriterion("MOBILE in", values, "mobile");
      return this;
    }

    public Criteria andMobileNotIn(List values) {
      addCriterion("MOBILE not in", values, "mobile");
      return this;
    }

    public Criteria andMobileBetween(String value1, String value2) {
      addCriterion("MOBILE between", value1, value2, "mobile");
      return this;
    }

    public Criteria andMobileNotBetween(String value1, String value2) {
      addCriterion("MOBILE not between", value1, value2, "mobile");
      return this;
    }

    public Criteria andEmailIsNull() {
      addCriterion("EMAIL is null");
      return this;
    }

    public Criteria andEmailIsNotNull() {
      addCriterion("EMAIL is not null");
      return this;
    }

    public Criteria andEmailEqualTo(String value) {
      addCriterion("EMAIL =", value, "email");
      return this;
    }

    public Criteria andEmailNotEqualTo(String value) {
      addCriterion("EMAIL <>", value, "email");
      return this;
    }

    public Criteria andEmailGreaterThan(String value) {
      addCriterion("EMAIL >", value, "email");
      return this;
    }

    public Criteria andEmailGreaterThanOrEqualTo(String value) {
      addCriterion("EMAIL >=", value, "email");
      return this;
    }

    public Criteria andEmailLessThan(String value) {
      addCriterion("EMAIL <", value, "email");
      return this;
    }

    public Criteria andEmailLessThanOrEqualTo(String value) {
      addCriterion("EMAIL <=", value, "email");
      return this;
    }

    public Criteria andEmailLike(String value) {
      addCriterion("EMAIL like", value, "email");
      return this;
    }

    public Criteria andEmailNotLike(String value) {
      addCriterion("EMAIL not like", value, "email");
      return this;
    }

    public Criteria andEmailIn(List values) {
      addCriterion("EMAIL in", values, "email");
      return this;
    }

    public Criteria andEmailNotIn(List values) {
      addCriterion("EMAIL not in", values, "email");
      return this;
    }

    public Criteria andEmailBetween(String value1, String value2) {
      addCriterion("EMAIL between", value1, value2, "email");
      return this;
    }

    public Criteria andEmailNotBetween(String value1, String value2) {
      addCriterion("EMAIL not between", value1, value2, "email");
      return this;
    }

    public Criteria andn_CertificateTypeIsNull() {
      addCriterion("N_CERTIFICATE_TYPE is null");
      return this;
    }

    public Criteria andn_CertificateTypeIsNotNull() {
      addCriterion("N_CERTIFICATE_TYPE is not null");
      return this;
    }

    public Criteria andn_CertificateTypeEqualTo(Short value) {
      addCriterion("N_CERTIFICATE_TYPE =", value, "n_CertificateType");
      return this;
    }

    public Criteria andn_CertificateTypeNotEqualTo(Short value) {
      addCriterion("N_CERTIFICATE_TYPE <>", value, "n_CertificateType");
      return this;
    }

    public Criteria andn_CertificateTypeGreaterThan(Short value) {
      addCriterion("N_CERTIFICATE_TYPE >", value, "n_CertificateType");
      return this;
    }

    public Criteria andn_CertificateTypeGreaterThanOrEqualTo(Short value) {
      addCriterion("N_CERTIFICATE_TYPE >=", value, "n_CertificateType");
      return this;
    }

    public Criteria andn_CertificateTypeLessThan(Short value) {
      addCriterion("N_CERTIFICATE_TYPE <", value, "n_CertificateType");
      return this;
    }

    public Criteria andn_CertificateTypeLessThanOrEqualTo(Short value) {
      addCriterion("N_CERTIFICATE_TYPE <=", value, "n_CertificateType");
      return this;
    }

    public Criteria andn_CertificateTypeIn(List values) {
      addCriterion("N_CERTIFICATE_TYPE in", values, "n_CertificateType");
      return this;
    }

    public Criteria andn_CertificateTypeNotIn(List values) {
      addCriterion("N_CERTIFICATE_TYPE not in", values, "n_CertificateType");
      return this;
    }

    public Criteria andn_CertificateTypeBetween(Short value1, Short value2) {
      addCriterion("N_CERTIFICATE_TYPE between", value1, value2, "n_CertificateType");
      return this;
    }

    public Criteria andn_CertificateTypeNotBetween(Short value1, Short value2) {
      addCriterion("N_CERTIFICATE_TYPE not between", value1, value2, "n_CertificateType");
      return this;
    }

    public Criteria andCertificateNumberIsNull() {
      addCriterion("CERTIFICATE_NUMBER is null");
      return this;
    }

    public Criteria andCertificateNumberIsNotNull() {
      addCriterion("CERTIFICATE_NUMBER is not null");
      return this;
    }

    public Criteria andCertificateNumberEqualTo(String value) {
      addCriterion("CERTIFICATE_NUMBER =", value, "certificateNumber");
      return this;
    }

    public Criteria andCertificateNumberNotEqualTo(String value) {
      addCriterion("CERTIFICATE_NUMBER <>", value, "certificateNumber");
      return this;
    }

    public Criteria andCertificateNumberGreaterThan(String value) {
      addCriterion("CERTIFICATE_NUMBER >", value, "certificateNumber");
      return this;
    }

    public Criteria andCertificateNumberGreaterThanOrEqualTo(String value) {
      addCriterion("CERTIFICATE_NUMBER >=", value, "certificateNumber");
      return this;
    }

    public Criteria andCertificateNumberLessThan(String value) {
      addCriterion("CERTIFICATE_NUMBER <", value, "certificateNumber");
      return this;
    }

    public Criteria andCertificateNumberLessThanOrEqualTo(String value) {
      addCriterion("CERTIFICATE_NUMBER <=", value, "certificateNumber");
      return this;
    }

    public Criteria andCertificateNumberLike(String value) {
      addCriterion("CERTIFICATE_NUMBER like", value, "certificateNumber");
      return this;
    }

    public Criteria andCertificateNumberNotLike(String value) {
      addCriterion("CERTIFICATE_NUMBER not like", value, "certificateNumber");
      return this;
    }

    public Criteria andCertificateNumberIn(List values) {
      addCriterion("CERTIFICATE_NUMBER in", values, "certificateNumber");
      return this;
    }

    public Criteria andCertificateNumberNotIn(List values) {
      addCriterion("CERTIFICATE_NUMBER not in", values, "certificateNumber");
      return this;
    }

    public Criteria andCertificateNumberBetween(String value1, String value2) {
      addCriterion("CERTIFICATE_NUMBER between", value1, value2, "certificateNumber");
      return this;
    }

    public Criteria andCertificateNumberNotBetween(String value1, String value2) {
      addCriterion("CERTIFICATE_NUMBER not between", value1, value2, "certificateNumber");
      return this;
    }

    public Criteria andLocationIsNull() {
      addCriterion("LOCATION is null");
      return this;
    }

    public Criteria andLocationIsNotNull() {
      addCriterion("LOCATION is not null");
      return this;
    }

    public Criteria andLocationEqualTo(String value) {
      addCriterion("LOCATION =", value, "location");
      return this;
    }

    public Criteria andLocationNotEqualTo(String value) {
      addCriterion("LOCATION <>", value, "location");
      return this;
    }

    public Criteria andLocationGreaterThan(String value) {
      addCriterion("LOCATION >", value, "location");
      return this;
    }

    public Criteria andLocationGreaterThanOrEqualTo(String value) {
      addCriterion("LOCATION >=", value, "location");
      return this;
    }

    public Criteria andLocationLessThan(String value) {
      addCriterion("LOCATION <", value, "location");
      return this;
    }

    public Criteria andLocationLessThanOrEqualTo(String value) {
      addCriterion("LOCATION <=", value, "location");
      return this;
    }

    public Criteria andLocationLike(String value) {
      addCriterion("LOCATION like", value, "location");
      return this;
    }

    public Criteria andLocationNotLike(String value) {
      addCriterion("LOCATION not like", value, "location");
      return this;
    }

    public Criteria andLocationIn(List values) {
      addCriterion("LOCATION in", values, "location");
      return this;
    }

    public Criteria andLocationNotIn(List values) {
      addCriterion("LOCATION not in", values, "location");
      return this;
    }

    public Criteria andLocationBetween(String value1, String value2) {
      addCriterion("LOCATION between", value1, value2, "location");
      return this;
    }

    public Criteria andLocationNotBetween(String value1, String value2) {
      addCriterion("LOCATION not between", value1, value2, "location");
      return this;
    }

    public Criteria andHometownLocationIsNull() {
      addCriterion("HOMETOWN_LOCATION is null");
      return this;
    }

    public Criteria andHometownLocationIsNotNull() {
      addCriterion("HOMETOWN_LOCATION is not null");
      return this;
    }

    public Criteria andHometownLocationEqualTo(String value) {
      addCriterion("HOMETOWN_LOCATION =", value, "hometownLocation");
      return this;
    }

    public Criteria andHometownLocationNotEqualTo(String value) {
      addCriterion("HOMETOWN_LOCATION <>", value, "hometownLocation");
      return this;
    }

    public Criteria andHometownLocationGreaterThan(String value) {
      addCriterion("HOMETOWN_LOCATION >", value, "hometownLocation");
      return this;
    }

    public Criteria andHometownLocationGreaterThanOrEqualTo(String value) {
      addCriterion("HOMETOWN_LOCATION >=", value, "hometownLocation");
      return this;
    }

    public Criteria andHometownLocationLessThan(String value) {
      addCriterion("HOMETOWN_LOCATION <", value, "hometownLocation");
      return this;
    }

    public Criteria andHometownLocationLessThanOrEqualTo(String value) {
      addCriterion("HOMETOWN_LOCATION <=", value, "hometownLocation");
      return this;
    }

    public Criteria andHometownLocationLike(String value) {
      addCriterion("HOMETOWN_LOCATION like", value, "hometownLocation");
      return this;
    }

    public Criteria andHometownLocationNotLike(String value) {
      addCriterion("HOMETOWN_LOCATION not like", value, "hometownLocation");
      return this;
    }

    public Criteria andHometownLocationIn(List values) {
      addCriterion("HOMETOWN_LOCATION in", values, "hometownLocation");
      return this;
    }

    public Criteria andHometownLocationNotIn(List values) {
      addCriterion("HOMETOWN_LOCATION not in", values, "hometownLocation");
      return this;
    }

    public Criteria andHometownLocationBetween(String value1, String value2) {
      addCriterion("HOMETOWN_LOCATION between", value1, value2, "hometownLocation");
      return this;
    }

    public Criteria andHometownLocationNotBetween(String value1, String value2) {
      addCriterion("HOMETOWN_LOCATION not between", value1, value2, "hometownLocation");
      return this;
    }

    public Criteria andEducationalStatusIsNull() {
      addCriterion("EDUCATIONAL_STATUS is null");
      return this;
    }

    public Criteria andEducationalStatusIsNotNull() {
      addCriterion("EDUCATIONAL_STATUS is not null");
      return this;
    }

    public Criteria andEducationalStatusEqualTo(String value) {
      addCriterion("EDUCATIONAL_STATUS =", value, "educationalStatus");
      return this;
    }

    public Criteria andEducationalStatusNotEqualTo(String value) {
      addCriterion("EDUCATIONAL_STATUS <>", value, "educationalStatus");
      return this;
    }

    public Criteria andEducationalStatusGreaterThan(String value) {
      addCriterion("EDUCATIONAL_STATUS >", value, "educationalStatus");
      return this;
    }

    public Criteria andEducationalStatusGreaterThanOrEqualTo(String value) {
      addCriterion("EDUCATIONAL_STATUS >=", value, "educationalStatus");
      return this;
    }

    public Criteria andEducationalStatusLessThan(String value) {
      addCriterion("EDUCATIONAL_STATUS <", value, "educationalStatus");
      return this;
    }

    public Criteria andEducationalStatusLessThanOrEqualTo(String value) {
      addCriterion("EDUCATIONAL_STATUS <=", value, "educationalStatus");
      return this;
    }

    public Criteria andEducationalStatusLike(String value) {
      addCriterion("EDUCATIONAL_STATUS like", value, "educationalStatus");
      return this;
    }

    public Criteria andEducationalStatusNotLike(String value) {
      addCriterion("EDUCATIONAL_STATUS not like", value, "educationalStatus");
      return this;
    }

    public Criteria andEducationalStatusIn(List values) {
      addCriterion("EDUCATIONAL_STATUS in", values, "educationalStatus");
      return this;
    }

    public Criteria andEducationalStatusNotIn(List values) {
      addCriterion("EDUCATIONAL_STATUS not in", values, "educationalStatus");
      return this;
    }

    public Criteria andEducationalStatusBetween(String value1, String value2) {
      addCriterion("EDUCATIONAL_STATUS between", value1, value2, "educationalStatus");
      return this;
    }

    public Criteria andEducationalStatusNotBetween(String value1, String value2) {
      addCriterion("EDUCATIONAL_STATUS not between", value1, value2, "educationalStatus");
      return this;
    }

    public Criteria andWorkUnitIsNull() {
      addCriterion("WORK_UNIT is null");
      return this;
    }

    public Criteria andWorkUnitIsNotNull() {
      addCriterion("WORK_UNIT is not null");
      return this;
    }

    public Criteria andWorkUnitEqualTo(String value) {
      addCriterion("WORK_UNIT =", value, "workUnit");
      return this;
    }

    public Criteria andWorkUnitNotEqualTo(String value) {
      addCriterion("WORK_UNIT <>", value, "workUnit");
      return this;
    }

    public Criteria andWorkUnitGreaterThan(String value) {
      addCriterion("WORK_UNIT >", value, "workUnit");
      return this;
    }

    public Criteria andWorkUnitGreaterThanOrEqualTo(String value) {
      addCriterion("WORK_UNIT >=", value, "workUnit");
      return this;
    }

    public Criteria andWorkUnitLessThan(String value) {
      addCriterion("WORK_UNIT <", value, "workUnit");
      return this;
    }

    public Criteria andWorkUnitLessThanOrEqualTo(String value) {
      addCriterion("WORK_UNIT <=", value, "workUnit");
      return this;
    }

    public Criteria andWorkUnitLike(String value) {
      addCriterion("WORK_UNIT like", value, "workUnit");
      return this;
    }

    public Criteria andWorkUnitNotLike(String value) {
      addCriterion("WORK_UNIT not like", value, "workUnit");
      return this;
    }

    public Criteria andWorkUnitIn(List values) {
      addCriterion("WORK_UNIT in", values, "workUnit");
      return this;
    }

    public Criteria andWorkUnitNotIn(List values) {
      addCriterion("WORK_UNIT not in", values, "workUnit");
      return this;
    }

    public Criteria andWorkUnitBetween(String value1, String value2) {
      addCriterion("WORK_UNIT between", value1, value2, "workUnit");
      return this;
    }

    public Criteria andWorkUnitNotBetween(String value1, String value2) {
      addCriterion("WORK_UNIT not between", value1, value2, "workUnit");
      return this;
    }

    public Criteria andProfessionTypeIsNull() {
      addCriterion("PROFESSION_TYPE is null");
      return this;
    }

    public Criteria andProfessionTypeIsNotNull() {
      addCriterion("PROFESSION_TYPE is not null");
      return this;
    }

    public Criteria andProfessionTypeEqualTo(String value) {
      addCriterion("PROFESSION_TYPE =", value, "professionType");
      return this;
    }

    public Criteria andProfessionTypeNotEqualTo(String value) {
      addCriterion("PROFESSION_TYPE <>", value, "professionType");
      return this;
    }

    public Criteria andProfessionTypeGreaterThan(String value) {
      addCriterion("PROFESSION_TYPE >", value, "professionType");
      return this;
    }

    public Criteria andProfessionTypeGreaterThanOrEqualTo(String value) {
      addCriterion("PROFESSION_TYPE >=", value, "professionType");
      return this;
    }

    public Criteria andProfessionTypeLessThan(String value) {
      addCriterion("PROFESSION_TYPE <", value, "professionType");
      return this;
    }

    public Criteria andProfessionTypeLessThanOrEqualTo(String value) {
      addCriterion("PROFESSION_TYPE <=", value, "professionType");
      return this;
    }

    public Criteria andProfessionTypeLike(String value) {
      addCriterion("PROFESSION_TYPE like", value, "professionType");
      return this;
    }

    public Criteria andProfessionTypeNotLike(String value) {
      addCriterion("PROFESSION_TYPE not like", value, "professionType");
      return this;
    }

    public Criteria andProfessionTypeIn(List values) {
      addCriterion("PROFESSION_TYPE in", values, "professionType");
      return this;
    }

    public Criteria andProfessionTypeNotIn(List values) {
      addCriterion("PROFESSION_TYPE not in", values, "professionType");
      return this;
    }

    public Criteria andProfessionTypeBetween(String value1, String value2) {
      addCriterion("PROFESSION_TYPE between", value1, value2, "professionType");
      return this;
    }

    public Criteria andProfessionTypeNotBetween(String value1, String value2) {
      addCriterion("PROFESSION_TYPE not between", value1, value2, "professionType");
      return this;
    }

    public Criteria andProfessionIsNull() {
      addCriterion("PROFESSION is null");
      return this;
    }

    public Criteria andProfessionIsNotNull() {
      addCriterion("PROFESSION is not null");
      return this;
    }

    public Criteria andProfessionEqualTo(String value) {
      addCriterion("PROFESSION =", value, "profession");
      return this;
    }

    public Criteria andProfessionNotEqualTo(String value) {
      addCriterion("PROFESSION <>", value, "profession");
      return this;
    }

    public Criteria andProfessionGreaterThan(String value) {
      addCriterion("PROFESSION >", value, "profession");
      return this;
    }

    public Criteria andProfessionGreaterThanOrEqualTo(String value) {
      addCriterion("PROFESSION >=", value, "profession");
      return this;
    }

    public Criteria andProfessionLessThan(String value) {
      addCriterion("PROFESSION <", value, "profession");
      return this;
    }

    public Criteria andProfessionLessThanOrEqualTo(String value) {
      addCriterion("PROFESSION <=", value, "profession");
      return this;
    }

    public Criteria andProfessionLike(String value) {
      addCriterion("PROFESSION like", value, "profession");
      return this;
    }

    public Criteria andProfessionNotLike(String value) {
      addCriterion("PROFESSION not like", value, "profession");
      return this;
    }

    public Criteria andProfessionIn(List values) {
      addCriterion("PROFESSION in", values, "profession");
      return this;
    }

    public Criteria andProfessionNotIn(List values) {
      addCriterion("PROFESSION not in", values, "profession");
      return this;
    }

    public Criteria andProfessionBetween(String value1, String value2) {
      addCriterion("PROFESSION between", value1, value2, "profession");
      return this;
    }

    public Criteria andProfessionNotBetween(String value1, String value2) {
      addCriterion("PROFESSION not between", value1, value2, "profession");
      return this;
    }

    public Criteria andn_AnnualIncomeIsNull() {
      addCriterion("N_ANNUAL_INCOME is null");
      return this;
    }

    public Criteria andn_AnnualIncomeIsNotNull() {
      addCriterion("N_ANNUAL_INCOME is not null");
      return this;
    }

    public Criteria andn_AnnualIncomeEqualTo(BigDecimal value) {
      addCriterion("N_ANNUAL_INCOME =", value, "n_AnnualIncome");
      return this;
    }

    public Criteria andn_AnnualIncomeNotEqualTo(BigDecimal value) {
      addCriterion("N_ANNUAL_INCOME <>", value, "n_AnnualIncome");
      return this;
    }

    public Criteria andn_AnnualIncomeGreaterThan(BigDecimal value) {
      addCriterion("N_ANNUAL_INCOME >", value, "n_AnnualIncome");
      return this;
    }

    public Criteria andn_AnnualIncomeGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_ANNUAL_INCOME >=", value, "n_AnnualIncome");
      return this;
    }

    public Criteria andn_AnnualIncomeLessThan(BigDecimal value) {
      addCriterion("N_ANNUAL_INCOME <", value, "n_AnnualIncome");
      return this;
    }

    public Criteria andn_AnnualIncomeLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_ANNUAL_INCOME <=", value, "n_AnnualIncome");
      return this;
    }

    public Criteria andn_AnnualIncomeIn(List values) {
      addCriterion("N_ANNUAL_INCOME in", values, "n_AnnualIncome");
      return this;
    }

    public Criteria andn_AnnualIncomeNotIn(List values) {
      addCriterion("N_ANNUAL_INCOME not in", values, "n_AnnualIncome");
      return this;
    }

    public Criteria andn_AnnualIncomeBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_ANNUAL_INCOME between", value1, value2, "n_AnnualIncome");
      return this;
    }

    public Criteria andn_AnnualIncomeNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_ANNUAL_INCOME not between", value1, value2, "n_AnnualIncome");
      return this;
    }

    public Criteria andn_StatusIsNull() {
      addCriterion("N_STATUS is null");
      return this;
    }

    public Criteria andn_StatusIsNotNull() {
      addCriterion("N_STATUS is not null");
      return this;
    }

    public Criteria andn_StatusEqualTo(Short value) {
      addCriterion("N_STATUS =", value, "n_Status");
      return this;
    }

    public Criteria andn_StatusNotEqualTo(Short value) {
      addCriterion("N_STATUS <>", value, "n_Status");
      return this;
    }

    public Criteria andn_StatusGreaterThan(Short value) {
      addCriterion("N_STATUS >", value, "n_Status");
      return this;
    }

    public Criteria andn_StatusGreaterThanOrEqualTo(Short value) {
      addCriterion("N_STATUS >=", value, "n_Status");
      return this;
    }

    public Criteria andn_StatusLessThan(Short value) {
      addCriterion("N_STATUS <", value, "n_Status");
      return this;
    }

    public Criteria andn_StatusLessThanOrEqualTo(Short value) {
      addCriterion("N_STATUS <=", value, "n_Status");
      return this;
    }

    public Criteria andn_StatusIn(List values) {
      addCriterion("N_STATUS in", values, "n_Status");
      return this;
    }

    public Criteria andn_StatusNotIn(List values) {
      addCriterion("N_STATUS not in", values, "n_Status");
      return this;
    }

    public Criteria andn_StatusBetween(Short value1, Short value2) {
      addCriterion("N_STATUS between", value1, value2, "n_Status");
      return this;
    }

    public Criteria andn_StatusNotBetween(Short value1, Short value2) {
      addCriterion("N_STATUS not between", value1, value2, "n_Status");
      return this;
    }

    public Criteria andd_CreateDateIsNull() {
      addCriterion("D_CREATE_DATE is null");
      return this;
    }

    public Criteria andd_CreateDateIsNotNull() {
      addCriterion("D_CREATE_DATE is not null");
      return this;
    }

    public Criteria andd_CreateDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE =", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <>", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >=", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateLessThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <=", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE in", values, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateNotIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE not in", values, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE between", value1, value2, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE not between", value1, value2, "d_CreateDate");
      return this;
    }

    public Criteria andn_CreatedIsNull() {
      addCriterion("N_CREATED is null");
      return this;
    }

    public Criteria andn_CreatedIsNotNull() {
      addCriterion("N_CREATED is not null");
      return this;
    }

    public Criteria andn_CreatedEqualTo(BigDecimal value) {
      addCriterion("N_CREATED =", value, "n_Created");
      return this;
    }

    public Criteria andn_CreatedNotEqualTo(BigDecimal value) {
      addCriterion("N_CREATED <>", value, "n_Created");
      return this;
    }

    public Criteria andn_CreatedGreaterThan(BigDecimal value) {
      addCriterion("N_CREATED >", value, "n_Created");
      return this;
    }

    public Criteria andn_CreatedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CREATED >=", value, "n_Created");
      return this;
    }

    public Criteria andn_CreatedLessThan(BigDecimal value) {
      addCriterion("N_CREATED <", value, "n_Created");
      return this;
    }

    public Criteria andn_CreatedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CREATED <=", value, "n_Created");
      return this;
    }

    public Criteria andn_CreatedIn(List values) {
      addCriterion("N_CREATED in", values, "n_Created");
      return this;
    }

    public Criteria andn_CreatedNotIn(List values) {
      addCriterion("N_CREATED not in", values, "n_Created");
      return this;
    }

    public Criteria andn_CreatedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CREATED between", value1, value2, "n_Created");
      return this;
    }

    public Criteria andn_CreatedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CREATED not between", value1, value2, "n_Created");
      return this;
    }

    public Criteria andd_ModifyDateIsNull() {
      addCriterion("D_MODIFY_DATE is null");
      return this;
    }

    public Criteria andd_ModifyDateIsNotNull() {
      addCriterion("D_MODIFY_DATE is not null");
      return this;
    }

    public Criteria andd_ModifyDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE =", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <>", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >=", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateLessThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <=", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE in", values, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateNotIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE not in", values, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE between", value1, value2, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE not between", value1, value2, "d_ModifyDate");
      return this;
    }

    public Criteria andn_ModifiedIsNull() {
      addCriterion("N_MODIFIED is null");
      return this;
    }

    public Criteria andn_ModifiedIsNotNull() {
      addCriterion("N_MODIFIED is not null");
      return this;
    }

    public Criteria andn_ModifiedEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED =", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedNotEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED <>", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedGreaterThan(BigDecimal value) {
      addCriterion("N_MODIFIED >", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED >=", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedLessThan(BigDecimal value) {
      addCriterion("N_MODIFIED <", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED <=", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedIn(List values) {
      addCriterion("N_MODIFIED in", values, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedNotIn(List values) {
      addCriterion("N_MODIFIED not in", values, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_MODIFIED between", value1, value2, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_MODIFIED not between", value1, value2, "n_Modified");
      return this;
    }
  }
}
