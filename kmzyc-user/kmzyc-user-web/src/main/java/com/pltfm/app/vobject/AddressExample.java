package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

/**
 * 收货地址查询实体信息
 * 
 * @author zhl
 * @since 2013-07-12
 */
public class AddressExample {
  /**
   * 配置字段
   */
  protected String orderByClause;

  /**
   * 查询条件集合
   */
  protected List oredCriteria;

  /**
   * 查询实体构造方法
   */
  public AddressExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * 查询实体带参数构造方法
   * 
   * @param example
   */
  protected AddressExample(AddressExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  public String getOrderByClause() {
    return orderByClause;
  }

  public List getOredCriteria() {
    return oredCriteria;
  }

  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * ADDRESS
   *
   * @abatorgenerated Thu Jul 11 09:48:23 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * ADDRESS
   *
   * @abatorgenerated Thu Jul 11 09:48:23 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Abator for iBATIS. This class corresponds to the database table
   * ADDRESS
   *
   * @abatorgenerated Thu Jul 11 09:48:23 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()),
          new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andNAddressIdIsNull() {
      addCriterion("N_ADDRESS_ID is null");
      return this;
    }

    public Criteria andNAddressIdIsNotNull() {
      addCriterion("N_ADDRESS_ID is not null");
      return this;
    }

    public Criteria andNAddressIdEqualTo(Integer value) {
      addCriterion("N_ADDRESS_ID =", value, "n_addressId");
      return this;
    }

    public Criteria andNAddressIdNotEqualTo(Integer value) {
      addCriterion("N_ADDRESS_ID <>", value, "n_addressId");
      return this;
    }

    public Criteria andNAddressIdGreaterThan(Integer value) {
      addCriterion("N_ADDRESS_ID >", value, "n_addressId");
      return this;
    }

    public Criteria andNAddressIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("N_ADDRESS_ID >=", value, "n_addressId");
      return this;
    }

    public Criteria andNAddressIdLessThan(Integer value) {
      addCriterion("N_ADDRESS_ID <", value, "n_addressId");
      return this;
    }

    public Criteria andNAddressIdLessThanOrEqualTo(Integer value) {
      addCriterion("N_ADDRESS_ID <=", value, "n_addressId");
      return this;
    }

    public Criteria andNAddressIdIn(List values) {
      addCriterion("N_ADDRESS_ID in", values, "n_addressId");
      return this;
    }

    public Criteria andNAddressIdNotIn(List values) {
      addCriterion("N_ADDRESS_ID not in", values, "n_addressId");
      return this;
    }

    public Criteria andNAddressIdBetween(Integer value1, Integer value2) {
      addCriterion("N_ADDRESS_ID between", value1, value2, "n_addressId");
      return this;
    }

    public Criteria andNAddressIdNotBetween(Integer value1, Integer value2) {
      addCriterion("N_ADDRESS_ID not between", value1, value2, "n_addressId");
      return this;
    }

    public Criteria andNAccountIdIsNull() {
      addCriterion("N_ACCOUNT_ID is null");
      return this;
    }

    public Criteria andNAccountIdIsNotNull() {
      addCriterion("N_ACCOUNT_ID is not null");
      return this;
    }

    public Criteria andNAccountIdEqualTo(BigDecimal value) {
      addCriterion("N_ACCOUNT_ID =", value, "n_accountId");
      return this;
    }

    public Criteria andNAccountIdNotEqualTo(BigDecimal value) {
      addCriterion("N_ACCOUNT_ID <>", value, "n_accountId");
      return this;
    }

    public Criteria andNAccountIdGreaterThan(BigDecimal value) {
      addCriterion("N_ACCOUNT_ID >", value, "n_accountId");
      return this;
    }

    public Criteria andNAccountIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_ACCOUNT_ID >=", value, "n_accountId");
      return this;
    }

    public Criteria andNAccountIdLessThan(BigDecimal value) {
      addCriterion("N_ACCOUNT_ID <", value, "n_accountId");
      return this;
    }

    public Criteria andNAccountIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_ACCOUNT_ID <=", value, "n_accountId");
      return this;
    }

    public Criteria andNAccountIdIn(List values) {
      addCriterion("N_ACCOUNT_ID in", values, "n_accountId");
      return this;
    }

    public Criteria andNAccountIdNotIn(List values) {
      addCriterion("N_ACCOUNT_ID not in", values, "n_accountId");
      return this;
    }

    public Criteria andNAccountIdBetween(Integer value1, Integer value2) {
      addCriterion("N_ACCOUNT_ID between", value1, value2, "n_accountId");
      return this;
    }

    public Criteria andNAccountIdNotBetween(Integer value1, Integer value2) {
      addCriterion("N_ACCOUNT_ID not between", value1, value2, "n_accountId");
      return this;
    }

    public Criteria andNameIsNull() {
      addCriterion("NAME is null");
      return this;
    }

    public Criteria andNameIsNotNull() {
      addCriterion("NAME is not null");
      return this;
    }

    public Criteria andNameEqualTo(String value) {
      addCriterion("NAME =", value, "name");
      return this;
    }

    public Criteria andNameNotEqualTo(String value) {
      addCriterion("NAME <>", value, "name");
      return this;
    }

    public Criteria andNameGreaterThan(String value) {
      addCriterion("NAME >", value, "name");
      return this;
    }

    public Criteria andNameGreaterThanOrEqualTo(String value) {
      addCriterion("NAME >=", value, "name");
      return this;
    }

    public Criteria andNameLessThan(String value) {
      addCriterion("NAME <", value, "name");
      return this;
    }

    public Criteria andNameLessThanOrEqualTo(String value) {
      addCriterion("NAME <=", value, "name");
      return this;
    }

    public Criteria andNameLike(String value) {
      addCriterion("NAME like", value, "name");
      return this;
    }

    public Criteria andNameNotLike(String value) {
      addCriterion("NAME not like", value, "name");
      return this;
    }

    public Criteria andNameIn(List values) {
      addCriterion("NAME in", values, "name");
      return this;
    }

    public Criteria andNameNotIn(List values) {
      addCriterion("NAME not in", values, "name");
      return this;
    }

    public Criteria andNameBetween(String value1, String value2) {
      addCriterion("NAME between", value1, value2, "name");
      return this;
    }

    public Criteria andNameNotBetween(String value1, String value2) {
      addCriterion("NAME not between", value1, value2, "name");
      return this;
    }

    public Criteria andProvinceIsNull() {
      addCriterion("PROVINCE is null");
      return this;
    }

    public Criteria andProvinceIsNotNull() {
      addCriterion("PROVINCE is not null");
      return this;
    }

    public Criteria andProvinceEqualTo(String value) {
      addCriterion("PROVINCE =", value, "province");
      return this;
    }

    public Criteria andProvinceNotEqualTo(String value) {
      addCriterion("PROVINCE <>", value, "province");
      return this;
    }

    public Criteria andProvinceGreaterThan(String value) {
      addCriterion("PROVINCE >", value, "province");
      return this;
    }

    public Criteria andProvinceGreaterThanOrEqualTo(String value) {
      addCriterion("PROVINCE >=", value, "province");
      return this;
    }

    public Criteria andProvinceLessThan(String value) {
      addCriterion("PROVINCE <", value, "province");
      return this;
    }

    public Criteria andProvinceLessThanOrEqualTo(String value) {
      addCriterion("PROVINCE <=", value, "province");
      return this;
    }

    public Criteria andProvinceLike(String value) {
      addCriterion("PROVINCE like", value, "province");
      return this;
    }

    public Criteria andProvinceNotLike(String value) {
      addCriterion("PROVINCE not like", value, "province");
      return this;
    }

    public Criteria andProvinceIn(List values) {
      addCriterion("PROVINCE in", values, "province");
      return this;
    }

    public Criteria andProvinceNotIn(List values) {
      addCriterion("PROVINCE not in", values, "province");
      return this;
    }

    public Criteria andProvinceBetween(String value1, String value2) {
      addCriterion("PROVINCE between", value1, value2, "province");
      return this;
    }

    public Criteria andProvinceNotBetween(String value1, String value2) {
      addCriterion("PROVINCE not between", value1, value2, "province");
      return this;
    }

    public Criteria andCityIsNull() {
      addCriterion("CITY is null");
      return this;
    }

    public Criteria andCityIsNotNull() {
      addCriterion("CITY is not null");
      return this;
    }

    public Criteria andCityEqualTo(String value) {
      addCriterion("CITY =", value, "city");
      return this;
    }

    public Criteria andCityNotEqualTo(String value) {
      addCriterion("CITY <>", value, "city");
      return this;
    }

    public Criteria andCityGreaterThan(String value) {
      addCriterion("CITY >", value, "city");
      return this;
    }

    public Criteria andCityGreaterThanOrEqualTo(String value) {
      addCriterion("CITY >=", value, "city");
      return this;
    }

    public Criteria andCityLessThan(String value) {
      addCriterion("CITY <", value, "city");
      return this;
    }

    public Criteria andCityLessThanOrEqualTo(String value) {
      addCriterion("CITY <=", value, "city");
      return this;
    }

    public Criteria andCityLike(String value) {
      addCriterion("CITY like", value, "city");
      return this;
    }

    public Criteria andCityNotLike(String value) {
      addCriterion("CITY not like", value, "city");
      return this;
    }

    public Criteria andCityIn(List values) {
      addCriterion("CITY in", values, "city");
      return this;
    }

    public Criteria andCityNotIn(List values) {
      addCriterion("CITY not in", values, "city");
      return this;
    }

    public Criteria andCityBetween(String value1, String value2) {
      addCriterion("CITY between", value1, value2, "city");
      return this;
    }

    public Criteria andCityNotBetween(String value1, String value2) {
      addCriterion("CITY not between", value1, value2, "city");
      return this;
    }

    public Criteria andDetailedaddressIsNull() {
      addCriterion("DETAILEDADDRESS is null");
      return this;
    }

    public Criteria andDetailedaddressIsNotNull() {
      addCriterion("DETAILEDADDRESS is not null");
      return this;
    }

    public Criteria andDetailedaddressEqualTo(String value) {
      addCriterion("DETAILEDADDRESS =", value, "detailedaddress");
      return this;
    }

    public Criteria andDetailedaddressNotEqualTo(String value) {
      addCriterion("DETAILEDADDRESS <>", value, "detailedaddress");
      return this;
    }

    public Criteria andDetailedaddressGreaterThan(String value) {
      addCriterion("DETAILEDADDRESS >", value, "detailedaddress");
      return this;
    }

    public Criteria andDetailedaddressGreaterThanOrEqualTo(String value) {
      addCriterion("DETAILEDADDRESS >=", value, "detailedaddress");
      return this;
    }

    public Criteria andDetailedaddressLessThan(String value) {
      addCriterion("DETAILEDADDRESS <", value, "detailedaddress");
      return this;
    }

    public Criteria andDetailedaddressLessThanOrEqualTo(String value) {
      addCriterion("DETAILEDADDRESS <=", value, "detailedaddress");
      return this;
    }

    public Criteria andDetailedaddressLike(String value) {
      addCriterion("DETAILEDADDRESS like", value, "detailedaddress");
      return this;
    }

    public Criteria andDetailedaddressNotLike(String value) {
      addCriterion("DETAILEDADDRESS not like", value, "detailedaddress");
      return this;
    }

    public Criteria andDetailedaddressIn(List values) {
      addCriterion("DETAILEDADDRESS in", values, "detailedaddress");
      return this;
    }

    public Criteria andDetailedaddressNotIn(List values) {
      addCriterion("DETAILEDADDRESS not in", values, "detailedaddress");
      return this;
    }

    public Criteria andDetailedaddressBetween(String value1, String value2) {
      addCriterion("DETAILEDADDRESS between", value1, value2, "detailedaddress");
      return this;
    }

    public Criteria andDetailedaddressNotBetween(String value1, String value2) {
      addCriterion("DETAILEDADDRESS not between", value1, value2, "detailedaddress");
      return this;
    }

    public Criteria andPostalcodeIsNull() {
      addCriterion("POSTALCODE is null");
      return this;
    }

    public Criteria andPostalcodeIsNotNull() {
      addCriterion("POSTALCODE is not null");
      return this;
    }

    public Criteria andPostalcodeEqualTo(String value) {
      addCriterion("POSTALCODE =", value, "postalcode");
      return this;
    }

    public Criteria andPostalcodeNotEqualTo(String value) {
      addCriterion("POSTALCODE <>", value, "postalcode");
      return this;
    }

    public Criteria andPostalcodeGreaterThan(String value) {
      addCriterion("POSTALCODE >", value, "postalcode");
      return this;
    }

    public Criteria andPostalcodeGreaterThanOrEqualTo(String value) {
      addCriterion("POSTALCODE >=", value, "postalcode");
      return this;
    }

    public Criteria andPostalcodeLessThan(String value) {
      addCriterion("POSTALCODE <", value, "postalcode");
      return this;
    }

    public Criteria andPostalcodeLessThanOrEqualTo(String value) {
      addCriterion("POSTALCODE <=", value, "postalcode");
      return this;
    }

    public Criteria andPostalcodeLike(String value) {
      addCriterion("POSTALCODE like", value, "postalcode");
      return this;
    }

    public Criteria andPostalcodeNotLike(String value) {
      addCriterion("POSTALCODE not like", value, "postalcode");
      return this;
    }

    public Criteria andPostalcodeIn(List values) {
      addCriterion("POSTALCODE in", values, "postalcode");
      return this;
    }

    public Criteria andPostalcodeNotIn(List values) {
      addCriterion("POSTALCODE not in", values, "postalcode");
      return this;
    }

    public Criteria andPostalcodeBetween(String value1, String value2) {
      addCriterion("POSTALCODE between", value1, value2, "postalcode");
      return this;
    }

    public Criteria andPostalcodeNotBetween(String value1, String value2) {
      addCriterion("POSTALCODE not between", value1, value2, "postalcode");
      return this;
    }

    public Criteria andAddNameIsNull() {
      addCriterion("ADD_NAME is null");
      return this;
    }

    public Criteria andAddNameIsNotNull() {
      addCriterion("ADD_NAME is not null");
      return this;
    }

    public Criteria andAddNameEqualTo(String value) {
      addCriterion("ADD_NAME =", value, "addName");
      return this;
    }

    public Criteria andAddNameNotEqualTo(String value) {
      addCriterion("ADD_NAME <>", value, "addName");
      return this;
    }

    public Criteria andAddNameGreaterThan(String value) {
      addCriterion("ADD_NAME >", value, "addName");
      return this;
    }

    public Criteria andAddNameGreaterThanOrEqualTo(String value) {
      addCriterion("ADD_NAME >=", value, "addName");
      return this;
    }

    public Criteria andAddNameLessThan(String value) {
      addCriterion("ADD_NAME <", value, "addName");
      return this;
    }

    public Criteria andAddNameLessThanOrEqualTo(String value) {
      addCriterion("ADD_NAME <=", value, "addName");
      return this;
    }

    public Criteria andAddNameLike(String value) {
      addCriterion("ADD_NAME like", value, "addName");
      return this;
    }

    public Criteria andAddNameNotLike(String value) {
      addCriterion("ADD_NAME not like", value, "addName");
      return this;
    }

    public Criteria andAddNameIn(List values) {
      addCriterion("ADD_NAME in", values, "addName");
      return this;
    }

    public Criteria andAddNameNotIn(List values) {
      addCriterion("ADD_NAME not in", values, "addName");
      return this;
    }

    public Criteria andAddNameBetween(String value1, String value2) {
      addCriterion("ADD_NAME between", value1, value2, "addName");
      return this;
    }

    public Criteria andAddNameNotBetween(String value1, String value2) {
      addCriterion("ADD_NAME not between", value1, value2, "addName");
      return this;
    }

    public Criteria andDCreatedateIsNull() {
      addCriterion("D_CREATEDATE is null");
      return this;
    }

    public Criteria andDCreatedateIsNotNull() {
      addCriterion("D_CREATEDATE is not null");
      return this;
    }

    public Criteria andDCreatedateEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATEDATE =", value, "d_createdate");
      return this;
    }

    public Criteria andDCreatedateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATEDATE <>", value, "d_createdate");
      return this;
    }

    public Criteria andDCreatedateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_CREATEDATE >", value, "d_createdate");
      return this;
    }

    public Criteria andDCreatedateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATEDATE >=", value, "d_createdate");
      return this;
    }

    public Criteria andDCreatedateLessThan(Date value) {
      addCriterionForJDBCDate("D_CREATEDATE <", value, "d_createdate");
      return this;
    }

    public Criteria andDCreatedateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATEDATE <=", value, "d_createdate");
      return this;
    }

    public Criteria andDCreatedateIn(List values) {
      addCriterionForJDBCDate("D_CREATEDATE in", values, "d_createdate");
      return this;
    }

    public Criteria andDCreatedateNotIn(List values) {
      addCriterionForJDBCDate("D_CREATEDATE not in", values, "d_createdate");
      return this;
    }

    public Criteria andDCreatedateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATEDATE between", value1, value2, "d_createdate");
      return this;
    }

    public Criteria andDCreatedateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATEDATE not between", value1, value2, "d_createdate");
      return this;
    }

    public Criteria andDLastupdateIsNull() {
      addCriterion("D_LASTUPDATE is null");
      return this;
    }

    public Criteria andDLastupdateIsNotNull() {
      addCriterion("D_LASTUPDATE is not null");
      return this;
    }

    public Criteria andDLastupdateEqualTo(Date value) {
      addCriterionForJDBCDate("D_LASTUPDATE =", value, "d_lastupdate");
      return this;
    }

    public Criteria andDLastupdateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_LASTUPDATE <>", value, "d_lastupdate");
      return this;
    }

    public Criteria andDLastupdateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_LASTUPDATE >", value, "d_lastupdate");
      return this;
    }

    public Criteria andDLastupdateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_LASTUPDATE >=", value, "d_lastupdate");
      return this;
    }

    public Criteria andDLastupdateLessThan(Date value) {
      addCriterionForJDBCDate("D_LASTUPDATE <", value, "d_lastupdate");
      return this;
    }

    public Criteria andDLastupdateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_LASTUPDATE <=", value, "d_lastupdate");
      return this;
    }

    public Criteria andDLastupdateIn(List values) {
      addCriterionForJDBCDate("D_LASTUPDATE in", values, "d_lastupdate");
      return this;
    }

    public Criteria andDLastupdateNotIn(List values) {
      addCriterionForJDBCDate("D_LASTUPDATE not in", values, "d_lastupdate");
      return this;
    }

    public Criteria andDLastupdateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_LASTUPDATE between", value1, value2, "d_lastupdate");
      return this;
    }

    public Criteria andDLastupdateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_LASTUPDATE not between", value1, value2, "d_lastupdate");
      return this;
    }
  }
}
