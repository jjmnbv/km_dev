package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class VaccinationInfoExample {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * VACCINATION_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:03:44 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * VACCINATION_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:03:44 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table VACCINATION_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:03:44 CST 2013
   */
  public VaccinationInfoExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table VACCINATION_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:03:44 CST 2013
   */
  protected VaccinationInfoExample(VaccinationInfoExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table VACCINATION_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:03:44 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table VACCINATION_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:03:44 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table VACCINATION_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:03:44 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table VACCINATION_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:03:44 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table VACCINATION_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:03:44 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table VACCINATION_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:03:44 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table VACCINATION_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:03:44 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * VACCINATION_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:03:44 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()),
          new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andNVaccinationIdIsNull() {
      addCriterion("N_VACCINATION_ID is null");
      return this;
    }

    public Criteria andNVaccinationIdIsNotNull() {
      addCriterion("N_VACCINATION_ID is not null");
      return this;
    }

    public Criteria andNVaccinationIdEqualTo(BigDecimal value) {
      addCriterion("N_VACCINATION_ID =", value, "nVaccinationId");
      return this;
    }

    public Criteria andNVaccinationIdNotEqualTo(BigDecimal value) {
      addCriterion("N_VACCINATION_ID <>", value, "nVaccinationId");
      return this;
    }

    public Criteria andNVaccinationIdGreaterThan(BigDecimal value) {
      addCriterion("N_VACCINATION_ID >", value, "nVaccinationId");
      return this;
    }

    public Criteria andNVaccinationIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_VACCINATION_ID >=", value, "nVaccinationId");
      return this;
    }

    public Criteria andNVaccinationIdLessThan(BigDecimal value) {
      addCriterion("N_VACCINATION_ID <", value, "nVaccinationId");
      return this;
    }

    public Criteria andNVaccinationIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_VACCINATION_ID <=", value, "nVaccinationId");
      return this;
    }

    public Criteria andNVaccinationIdIn(List values) {
      addCriterion("N_VACCINATION_ID in", values, "nVaccinationId");
      return this;
    }

    public Criteria andNVaccinationIdNotIn(List values) {
      addCriterion("N_VACCINATION_ID not in", values, "nVaccinationId");
      return this;
    }

    public Criteria andNVaccinationIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_VACCINATION_ID between", value1, value2, "nVaccinationId");
      return this;
    }

    public Criteria andNVaccinationIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_VACCINATION_ID not between", value1, value2, "nVaccinationId");
      return this;
    }

    public Criteria andNHealthYgenericIdIsNull() {
      addCriterion("N_HEALTH_YGENERIC_ID is null");
      return this;
    }

    public Criteria andNHealthYgenericIdIsNotNull() {
      addCriterion("N_HEALTH_YGENERIC_ID is not null");
      return this;
    }

    public Criteria andNHealthYgenericIdEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID =", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <>", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdGreaterThan(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID >", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID >=", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdLessThan(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <=", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdIn(List values) {
      addCriterion("N_HEALTH_YGENERIC_ID in", values, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotIn(List values) {
      addCriterion("N_HEALTH_YGENERIC_ID not in", values, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_HEALTH_YGENERIC_ID between", value1, value2, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_HEALTH_YGENERIC_ID not between", value1, value2, "nHealthYgenericId");
      return this;
    }

    public Criteria andVaccineNameIsNull() {
      addCriterion("VACCINE_NAME is null");
      return this;
    }

    public Criteria andVaccineNameIsNotNull() {
      addCriterion("VACCINE_NAME is not null");
      return this;
    }

    public Criteria andVaccineNameEqualTo(String value) {
      addCriterion("VACCINE_NAME =", value, "vaccineName");
      return this;
    }

    public Criteria andVaccineNameNotEqualTo(String value) {
      addCriterion("VACCINE_NAME <>", value, "vaccineName");
      return this;
    }

    public Criteria andVaccineNameGreaterThan(String value) {
      addCriterion("VACCINE_NAME >", value, "vaccineName");
      return this;
    }

    public Criteria andVaccineNameGreaterThanOrEqualTo(String value) {
      addCriterion("VACCINE_NAME >=", value, "vaccineName");
      return this;
    }

    public Criteria andVaccineNameLessThan(String value) {
      addCriterion("VACCINE_NAME <", value, "vaccineName");
      return this;
    }

    public Criteria andVaccineNameLessThanOrEqualTo(String value) {
      addCriterion("VACCINE_NAME <=", value, "vaccineName");
      return this;
    }

    public Criteria andVaccineNameLike(String value) {
      addCriterion("VACCINE_NAME like", value, "vaccineName");
      return this;
    }

    public Criteria andVaccineNameNotLike(String value) {
      addCriterion("VACCINE_NAME not like", value, "vaccineName");
      return this;
    }

    public Criteria andVaccineNameIn(List values) {
      addCriterion("VACCINE_NAME in", values, "vaccineName");
      return this;
    }

    public Criteria andVaccineNameNotIn(List values) {
      addCriterion("VACCINE_NAME not in", values, "vaccineName");
      return this;
    }

    public Criteria andVaccineNameBetween(String value1, String value2) {
      addCriterion("VACCINE_NAME between", value1, value2, "vaccineName");
      return this;
    }

    public Criteria andVaccineNameNotBetween(String value1, String value2) {
      addCriterion("VACCINE_NAME not between", value1, value2, "vaccineName");
      return this;
    }

    public Criteria andDVaccinateTimeIsNull() {
      addCriterion("D_VACCINATE_TIME is null");
      return this;
    }

    public Criteria andDVaccinateTimeIsNotNull() {
      addCriterion("D_VACCINATE_TIME is not null");
      return this;
    }

    public Criteria andDVaccinateTimeEqualTo(Date value) {
      addCriterionForJDBCDate("D_VACCINATE_TIME =", value, "dVaccinateTime");
      return this;
    }

    public Criteria andDVaccinateTimeNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_VACCINATE_TIME <>", value, "dVaccinateTime");
      return this;
    }

    public Criteria andDVaccinateTimeGreaterThan(Date value) {
      addCriterionForJDBCDate("D_VACCINATE_TIME >", value, "dVaccinateTime");
      return this;
    }

    public Criteria andDVaccinateTimeGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_VACCINATE_TIME >=", value, "dVaccinateTime");
      return this;
    }

    public Criteria andDVaccinateTimeLessThan(Date value) {
      addCriterionForJDBCDate("D_VACCINATE_TIME <", value, "dVaccinateTime");
      return this;
    }

    public Criteria andDVaccinateTimeLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_VACCINATE_TIME <=", value, "dVaccinateTime");
      return this;
    }

    public Criteria andDVaccinateTimeIn(List values) {
      addCriterionForJDBCDate("D_VACCINATE_TIME in", values, "dVaccinateTime");
      return this;
    }

    public Criteria andDVaccinateTimeNotIn(List values) {
      addCriterionForJDBCDate("D_VACCINATE_TIME not in", values, "dVaccinateTime");
      return this;
    }

    public Criteria andDVaccinateTimeBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_VACCINATE_TIME between", value1, value2, "dVaccinateTime");
      return this;
    }

    public Criteria andDVaccinateTimeNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_VACCINATE_TIME not between", value1, value2, "dVaccinateTime");
      return this;
    }

    public Criteria andDActiveTimeIsNull() {
      addCriterion("D_ACTIVE_TIME is null");
      return this;
    }

    public Criteria andDActiveTimeIsNotNull() {
      addCriterion("D_ACTIVE_TIME is not null");
      return this;
    }

    public Criteria andDActiveTimeEqualTo(Date value) {
      addCriterionForJDBCDate("D_ACTIVE_TIME =", value, "dActiveTime");
      return this;
    }

    public Criteria andDActiveTimeNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_ACTIVE_TIME <>", value, "dActiveTime");
      return this;
    }

    public Criteria andDActiveTimeGreaterThan(Date value) {
      addCriterionForJDBCDate("D_ACTIVE_TIME >", value, "dActiveTime");
      return this;
    }

    public Criteria andDActiveTimeGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_ACTIVE_TIME >=", value, "dActiveTime");
      return this;
    }

    public Criteria andDActiveTimeLessThan(Date value) {
      addCriterionForJDBCDate("D_ACTIVE_TIME <", value, "dActiveTime");
      return this;
    }

    public Criteria andDActiveTimeLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_ACTIVE_TIME <=", value, "dActiveTime");
      return this;
    }

    public Criteria andDActiveTimeIn(List values) {
      addCriterionForJDBCDate("D_ACTIVE_TIME in", values, "dActiveTime");
      return this;
    }

    public Criteria andDActiveTimeNotIn(List values) {
      addCriterionForJDBCDate("D_ACTIVE_TIME not in", values, "dActiveTime");
      return this;
    }

    public Criteria andDActiveTimeBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_ACTIVE_TIME between", value1, value2, "dActiveTime");
      return this;
    }

    public Criteria andDActiveTimeNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_ACTIVE_TIME not between", value1, value2, "dActiveTime");
      return this;
    }

    public Criteria andFunctionIsNull() {
      addCriterion("FUNCTION is null");
      return this;
    }

    public Criteria andFunctionIsNotNull() {
      addCriterion("FUNCTION is not null");
      return this;
    }

    public Criteria andFunctionEqualTo(String value) {
      addCriterion("FUNCTION =", value, "function");
      return this;
    }

    public Criteria andFunctionNotEqualTo(String value) {
      addCriterion("FUNCTION <>", value, "function");
      return this;
    }

    public Criteria andFunctionGreaterThan(String value) {
      addCriterion("FUNCTION >", value, "function");
      return this;
    }

    public Criteria andFunctionGreaterThanOrEqualTo(String value) {
      addCriterion("FUNCTION >=", value, "function");
      return this;
    }

    public Criteria andFunctionLessThan(String value) {
      addCriterion("FUNCTION <", value, "function");
      return this;
    }

    public Criteria andFunctionLessThanOrEqualTo(String value) {
      addCriterion("FUNCTION <=", value, "function");
      return this;
    }

    public Criteria andFunctionLike(String value) {
      addCriterion("FUNCTION like", value, "function");
      return this;
    }

    public Criteria andFunctionNotLike(String value) {
      addCriterion("FUNCTION not like", value, "function");
      return this;
    }

    public Criteria andFunctionIn(List values) {
      addCriterion("FUNCTION in", values, "function");
      return this;
    }

    public Criteria andFunctionNotIn(List values) {
      addCriterion("FUNCTION not in", values, "function");
      return this;
    }

    public Criteria andFunctionBetween(String value1, String value2) {
      addCriterion("FUNCTION between", value1, value2, "function");
      return this;
    }

    public Criteria andFunctionNotBetween(String value1, String value2) {
      addCriterion("FUNCTION not between", value1, value2, "function");
      return this;
    }

    public Criteria andDCreateDateIsNull() {
      addCriterion("D_CREATE_DATE is null");
      return this;
    }

    public Criteria andDCreateDateIsNotNull() {
      addCriterion("D_CREATE_DATE is not null");
      return this;
    }

    public Criteria andDCreateDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE =", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <>", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >=", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateLessThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <=", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE in", values, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateNotIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE not in", values, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE between", value1, value2, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE not between", value1, value2, "dCreateDate");
      return this;
    }

    public Criteria andNCreatedIsNull() {
      addCriterion("N_CREATED is null");
      return this;
    }

    public Criteria andNCreatedIsNotNull() {
      addCriterion("N_CREATED is not null");
      return this;
    }

    public Criteria andNCreatedEqualTo(BigDecimal value) {
      addCriterion("N_CREATED =", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedNotEqualTo(BigDecimal value) {
      addCriterion("N_CREATED <>", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedGreaterThan(BigDecimal value) {
      addCriterion("N_CREATED >", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CREATED >=", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedLessThan(BigDecimal value) {
      addCriterion("N_CREATED <", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CREATED <=", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedIn(List values) {
      addCriterion("N_CREATED in", values, "nCreated");
      return this;
    }

    public Criteria andNCreatedNotIn(List values) {
      addCriterion("N_CREATED not in", values, "nCreated");
      return this;
    }

    public Criteria andNCreatedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CREATED between", value1, value2, "nCreated");
      return this;
    }

    public Criteria andNCreatedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CREATED not between", value1, value2, "nCreated");
      return this;
    }

    public Criteria andDModifyDateIsNull() {
      addCriterion("D_MODIFY_DATE is null");
      return this;
    }

    public Criteria andDModifyDateIsNotNull() {
      addCriterion("D_MODIFY_DATE is not null");
      return this;
    }

    public Criteria andDModifyDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE =", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <>", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >=", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateLessThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <=", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE in", values, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateNotIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE not in", values, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE between", value1, value2, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE not between", value1, value2, "dModifyDate");
      return this;
    }

    public Criteria andNModifiedIsNull() {
      addCriterion("N_MODIFIED is null");
      return this;
    }

    public Criteria andNModifiedIsNotNull() {
      addCriterion("N_MODIFIED is not null");
      return this;
    }

    public Criteria andNModifiedEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED =", value, "nModified");
      return this;
    }

    public Criteria andNModifiedNotEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED <>", value, "nModified");
      return this;
    }

    public Criteria andNModifiedGreaterThan(BigDecimal value) {
      addCriterion("N_MODIFIED >", value, "nModified");
      return this;
    }

    public Criteria andNModifiedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED >=", value, "nModified");
      return this;
    }

    public Criteria andNModifiedLessThan(BigDecimal value) {
      addCriterion("N_MODIFIED <", value, "nModified");
      return this;
    }

    public Criteria andNModifiedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED <=", value, "nModified");
      return this;
    }

    public Criteria andNModifiedIn(List values) {
      addCriterion("N_MODIFIED in", values, "nModified");
      return this;
    }

    public Criteria andNModifiedNotIn(List values) {
      addCriterion("N_MODIFIED not in", values, "nModified");
      return this;
    }

    public Criteria andNModifiedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_MODIFIED between", value1, value2, "nModified");
      return this;
    }

    public Criteria andNModifiedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_MODIFIED not between", value1, value2, "nModified");
      return this;
    }
  }
}
