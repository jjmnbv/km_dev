package com.pltfm.app.dao.impl;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.pltfm.app.dao.DetectionResultInfoDAO;
import com.pltfm.app.vobject.DetectionResultInfo;
import com.pltfm.app.vobject.DetectionResultInfoExample;

public class DetectionResultInfoDAOImpl implements DetectionResultInfoDAO {
  public SqlMapClient getSqlMapClient() {
    return sqlMapClient;
  }

  public void setSqlMapClient(SqlMapClient sqlMapClient) {
    this.sqlMapClient = sqlMapClient;
  }

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * DETECTION_RESULT_INFO
   *
   * @ibatorgenerated Thu Jul 11 14:40:01 CST 2013
   */
  private SqlMapClient sqlMapClient;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DETECTION_RESULT_INFO
   *
   * @ibatorgenerated Thu Jul 11 14:40:01 CST 2013
   */
  public int countByExample(DetectionResultInfoExample example) throws SQLException {
    Integer count = (Integer) sqlMapClient
        .queryForObject("DETECTION_RESULT_INFO.ibatorgenerated_countByExample", example);
    return count.intValue();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DETECTION_RESULT_INFO
   *
   * @ibatorgenerated Thu Jul 11 14:40:01 CST 2013
   */
  public int deleteByExample(DetectionResultInfoExample example) throws SQLException {
    int rows =
        sqlMapClient.delete("DETECTION_RESULT_INFO.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DETECTION_RESULT_INFO
   *
   * @ibatorgenerated Thu Jul 11 14:40:01 CST 2013
   */
  public int deleteByPrimaryKey(int nDetectionResultId) throws SQLException {
    DetectionResultInfo key = new DetectionResultInfo();
    key.setnDetectionResultId(nDetectionResultId);
    int rows = sqlMapClient.delete("DETECTION_RESULT_INFO.ibatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DETECTION_RESULT_INFO
   *
   * @ibatorgenerated Thu Jul 11 14:40:01 CST 2013
   */
  public void insert(DetectionResultInfo record) throws SQLException {
    sqlMapClient.insert("DETECTION_RESULT_INFO.ibatorgenerated_insert", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DETECTION_RESULT_INFO
   *
   * @ibatorgenerated Thu Jul 11 14:40:01 CST 2013
   */
  public void insertSelective(DetectionResultInfo record) throws SQLException {
    sqlMapClient.insert("DETECTION_RESULT_INFO.ibatorgenerated_insertSelective", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DETECTION_RESULT_INFO
   *
   * @ibatorgenerated Thu Jul 11 14:40:01 CST 2013
   */
  public List selectByExample(DetectionResultInfoExample example) throws SQLException {
    List list =
        sqlMapClient.queryForList("DETECTION_RESULT_INFO.ibatorgenerated_selectByExample", example);
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DETECTION_RESULT_INFO
   *
   * @ibatorgenerated Thu Jul 11 14:40:01 CST 2013
   */
  public DetectionResultInfo selectByPrimaryKey(int nDetectionResultId) throws SQLException {
    DetectionResultInfo key = new DetectionResultInfo();
    key.setnDetectionResultId(nDetectionResultId);
    DetectionResultInfo record = (DetectionResultInfo) sqlMapClient
        .queryForObject("DETECTION_RESULT_INFO.ibatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DETECTION_RESULT_INFO
   *
   * @ibatorgenerated Thu Jul 11 14:40:01 CST 2013
   */
  public DetectionResultInfo selectByPrimaryFk(int nHealthYgenericId) throws SQLException {
    DetectionResultInfo key = new DetectionResultInfo();
    key.setnDetectionResultId(nHealthYgenericId);
    DetectionResultInfo record = (DetectionResultInfo) sqlMapClient
        .queryForObject("DETECTION_RESULT_INFO.ibatorgenerated_selectByPrimaryFk", key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DETECTION_RESULT_INFO
   *
   * @ibatorgenerated Thu Jul 11 14:40:01 CST 2013
   */
  public int updateByPrimaryKeySelective(DetectionResultInfo record) throws SQLException {
    int rows = sqlMapClient
        .update("DETECTION_RESULT_INFO.ibatorgenerated_updateByPrimaryKeySelective", record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DETECTION_RESULT_INFO
   *
   * @ibatorgenerated Thu Jul 11 14:40:01 CST 2013
   */
  public int updateByPrimaryKey(DetectionResultInfo record) throws SQLException {
    int rows =
        sqlMapClient.update("DETECTION_RESULT_INFO.ibatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * DETECTION_RESULT_INFO
   *
   * @ibatorgenerated Thu Jul 11 14:40:01 CST 2013
   */
  private static class UpdateByExampleParms extends DetectionResultInfoExample {
    private Object record;

    public UpdateByExampleParms(Object record, DetectionResultInfoExample example) {
      super(example);
      this.record = record;
    }

    public Object getRecord() {
      return record;
    }
  }
}
