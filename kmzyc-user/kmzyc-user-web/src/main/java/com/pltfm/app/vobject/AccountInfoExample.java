package com.pltfm.app.vobject;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class AccountInfoExample implements Serializable {
  /**
   * 
   */
  private static final long serialVersionUID = -7616453714210296776L;

  /**
   * This field was generated by Abator for iBATIS. This field corresponds to the database table
   * ACCOUNT_INFO
   *
   * @abatorgenerated Wed Jul 10 15:14:23 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Abator for iBATIS. This field corresponds to the database table
   * ACCOUNT_INFO
   *
   * @abatorgenerated Wed Jul 10 15:14:23 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * ACCOUNT_INFO
   *
   * @abatorgenerated Wed Jul 10 15:14:23 CST 2013
   */
  public AccountInfoExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * ACCOUNT_INFO
   *
   * @abatorgenerated Wed Jul 10 15:14:23 CST 2013
   */
  protected AccountInfoExample(AccountInfoExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * ACCOUNT_INFO
   *
   * @abatorgenerated Wed Jul 10 15:14:23 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * ACCOUNT_INFO
   *
   * @abatorgenerated Wed Jul 10 15:14:23 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * ACCOUNT_INFO
   *
   * @abatorgenerated Wed Jul 10 15:14:23 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * ACCOUNT_INFO
   *
   * @abatorgenerated Wed Jul 10 15:14:23 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * ACCOUNT_INFO
   *
   * @abatorgenerated Wed Jul 10 15:14:23 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * ACCOUNT_INFO
   *
   * @abatorgenerated Wed Jul 10 15:14:23 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * ACCOUNT_INFO
   *
   * @abatorgenerated Wed Jul 10 15:14:23 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Abator for iBATIS. This class corresponds to the database table
   * ACCOUNT_INFO
   *
   * @abatorgenerated Wed Jul 10 15:14:23 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()),
          new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andNAccountIdIsNull() {
      addCriterion("N_ACCOUNT_ID is null");
      return this;
    }

    public Criteria andNAccountIdIsNotNull() {
      addCriterion("N_ACCOUNT_ID is not null");
      return this;
    }

    public Criteria andNAccountIdEqualTo(Integer value) {
      addCriterion("N_ACCOUNT_ID =", value, "nAccountId");
      return this;
    }

    public Criteria andNAccountIdNotEqualTo(Integer value) {
      addCriterion("N_ACCOUNT_ID <>", value, "nAccountId");
      return this;
    }

    public Criteria andNAccountIdGreaterThan(Integer value) {
      addCriterion("N_ACCOUNT_ID >", value, "nAccountId");
      return this;
    }

    public Criteria andNAccountIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("N_ACCOUNT_ID >=", value, "nAccountId");
      return this;
    }

    public Criteria andNAccountIdLessThan(Integer value) {
      addCriterion("N_ACCOUNT_ID <", value, "nAccountId");
      return this;
    }

    public Criteria andNAccountIdLessThanOrEqualTo(Integer value) {
      addCriterion("N_ACCOUNT_ID <=", value, "nAccountId");
      return this;
    }

    public Criteria andNAccountIdIn(List values) {
      addCriterion("N_ACCOUNT_ID in", values, "nAccountId");
      return this;
    }

    public Criteria andNAccountIdNotIn(List values) {
      addCriterion("N_ACCOUNT_ID not in", values, "nAccountId");
      return this;
    }

    public Criteria andNAccountIdBetween(Integer value1, Integer value2) {
      addCriterion("N_ACCOUNT_ID between", value1, value2, "nAccountId");
      return this;
    }

    public Criteria andNAccountIdNotBetween(Integer value1, Integer value2) {
      addCriterion("N_ACCOUNT_ID not between", value1, value2, "nAccountId");
      return this;
    }

    public Criteria andn_CustomerTypeIdIsNull() {
      addCriterion("N_CUSTOMER_TYPE_ID is null");
      return this;
    }

    public Criteria andn_CustomerTypeIdIsNotNull() {
      addCriterion("N_CUSTOMER_TYPE_ID is not null");
      return this;
    }

    public Criteria andn_CustomerTypeIdEqualTo(Integer value) {
      addCriterion("N_CUSTOMER_TYPE_ID =", value, "n_CustomerTypeId");
      return this;
    }

    public Criteria andn_CustomerTypeIdNotEqualTo(Integer value) {
      addCriterion("N_CUSTOMER_TYPE_ID <>", value, "n_CustomerTypeId");
      return this;
    }

    public Criteria andn_CustomerTypeIdGreaterThan(Integer value) {
      addCriterion("N_CUSTOMER_TYPE_ID >", value, "n_CustomerTypeId");
      return this;
    }

    public Criteria andn_CustomerTypeIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("N_CUSTOMER_TYPE_ID >=", value, "n_CustomerTypeId");
      return this;
    }

    public Criteria andn_CustomerTypeIdLessThan(Integer value) {
      addCriterion("N_CUSTOMER_TYPE_ID <", value, "n_CustomerTypeId");
      return this;
    }

    public Criteria andn_CustomerTypeIdLessThanOrEqualTo(Integer value) {
      addCriterion("N_CUSTOMER_TYPE_ID <=", value, "n_CustomerTypeId");
      return this;
    }

    public Criteria andn_CustomerTypeIdIn(List values) {
      addCriterion("N_CUSTOMER_TYPE_ID in", values, "n_CustomerTypeId");
      return this;
    }

    public Criteria andn_CustomerTypeIdNotIn(List values) {
      addCriterion("N_CUSTOMER_TYPE_ID not in", values, "n_CustomerTypeId");
      return this;
    }

    public Criteria andn_CustomerTypeIdBetween(Integer value1, Integer value2) {
      addCriterion("N_CUSTOMER_TYPE_ID between", value1, value2, "n_CustomerTypeId");
      return this;
    }

    public Criteria andn_CustomerTypeIdNotBetween(Integer value1, Integer value2) {
      addCriterion("N_CUSTOMER_TYPE_ID not between", value1, value2, "n_CustomerTypeId");
      return this;
    }

    public Criteria andn_LoginIdIsNull() {
      addCriterion("N_LOGIN_ID is null");
      return this;
    }

    public Criteria andn_LoginIdIsNotNull() {
      addCriterion("N_LOGIN_ID is not null");
      return this;
    }

    public Criteria andn_LoginIdEqualTo(Integer value) {
      addCriterion("N_LOGIN_ID =", value, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdNotEqualTo(Integer value) {
      addCriterion("N_LOGIN_ID <>", value, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdGreaterThan(Integer value) {
      addCriterion("N_LOGIN_ID >", value, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("N_LOGIN_ID >=", value, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdLessThan(Integer value) {
      addCriterion("N_LOGIN_ID <", value, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdLessThanOrEqualTo(Integer value) {
      addCriterion("N_LOGIN_ID <=", value, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdIn(List values) {
      addCriterion("N_LOGIN_ID in", values, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdNotIn(List values) {
      addCriterion("N_LOGIN_ID not in", values, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdBetween(Integer value1, Integer value2) {
      addCriterion("N_LOGIN_ID between", value1, value2, "n_LoginId");
      return this;
    }

    public Criteria andn_LoginIdNotBetween(Integer value1, Integer value2) {
      addCriterion("N_LOGIN_ID not between", value1, value2, "n_LoginId");
      return this;
    }

    public Criteria andAccountLoginIsNull() {
      addCriterion("ACCOUNT_LOGIN is null");
      return this;
    }

    public Criteria andAccountLoginIsNotNull() {
      addCriterion("ACCOUNT_LOGIN is not null");
      return this;
    }

    public Criteria andAccountLoginEqualTo(String value) {
      addCriterion("ACCOUNT_LOGIN =", value, "accountLogin");
      return this;
    }

    public Criteria andAccountLoginNotEqualTo(String value) {
      addCriterion("ACCOUNT_LOGIN <>", value, "accountLogin");
      return this;
    }

    public Criteria andAccountLoginGreaterThan(String value) {
      addCriterion("ACCOUNT_LOGIN >", value, "accountLogin");
      return this;
    }

    public Criteria andAccountLoginGreaterThanOrEqualTo(String value) {
      addCriterion("ACCOUNT_LOGIN >=", value, "accountLogin");
      return this;
    }

    public Criteria andAccountLoginLessThan(String value) {
      addCriterion("ACCOUNT_LOGIN <", value, "accountLogin");
      return this;
    }

    public Criteria andAccountLoginLessThanOrEqualTo(String value) {
      addCriterion("ACCOUNT_LOGIN <=", value, "accountLogin");
      return this;
    }

    public Criteria andAccountLoginLike(String value) {
      addCriterion("ACCOUNT_LOGIN like", value, "accountLogin");
      return this;
    }

    public Criteria andAccountLoginNotLike(String value) {
      addCriterion("ACCOUNT_LOGIN not like", value, "accountLogin");
      return this;
    }

    public Criteria andAccountLoginIn(List values) {
      addCriterion("ACCOUNT_LOGIN in", values, "accountLogin");
      return this;
    }

    public Criteria andAccountLoginNotIn(List values) {
      addCriterion("ACCOUNT_LOGIN not in", values, "accountLogin");
      return this;
    }

    public Criteria andAccountLoginBetween(String value1, String value2) {
      addCriterion("ACCOUNT_LOGIN between", value1, value2, "accountLogin");
      return this;
    }

    public Criteria andAccountLoginNotBetween(String value1, String value2) {
      addCriterion("ACCOUNT_LOGIN not between", value1, value2, "accountLogin");
      return this;
    }

    public Criteria andPaymentpwdIsNull() {
      addCriterion("PAYMENTPWD is null");
      return this;
    }

    public Criteria andPaymentpwdIsNotNull() {
      addCriterion("PAYMENTPWD is not null");
      return this;
    }

    public Criteria andPaymentpwdEqualTo(String value) {
      addCriterion("PAYMENTPWD =", value, "paymentpwd");
      return this;
    }

    public Criteria andPaymentpwdNotEqualTo(String value) {
      addCriterion("PAYMENTPWD <>", value, "paymentpwd");
      return this;
    }

    public Criteria andPaymentpwdGreaterThan(String value) {
      addCriterion("PAYMENTPWD >", value, "paymentpwd");
      return this;
    }

    public Criteria andPaymentpwdGreaterThanOrEqualTo(String value) {
      addCriterion("PAYMENTPWD >=", value, "paymentpwd");
      return this;
    }

    public Criteria andPaymentpwdLessThan(String value) {
      addCriterion("PAYMENTPWD <", value, "paymentpwd");
      return this;
    }

    public Criteria andPaymentpwdLessThanOrEqualTo(String value) {
      addCriterion("PAYMENTPWD <=", value, "paymentpwd");
      return this;
    }

    public Criteria andPaymentpwdLike(String value) {
      addCriterion("PAYMENTPWD like", value, "paymentpwd");
      return this;
    }

    public Criteria andPaymentpwdNotLike(String value) {
      addCriterion("PAYMENTPWD not like", value, "paymentpwd");
      return this;
    }

    public Criteria andPaymentpwdIn(List values) {
      addCriterion("PAYMENTPWD in", values, "paymentpwd");
      return this;
    }

    public Criteria andPaymentpwdNotIn(List values) {
      addCriterion("PAYMENTPWD not in", values, "paymentpwd");
      return this;
    }

    public Criteria andPaymentpwdBetween(String value1, String value2) {
      addCriterion("PAYMENTPWD between", value1, value2, "paymentpwd");
      return this;
    }

    public Criteria andPaymentpwdNotBetween(String value1, String value2) {
      addCriterion("PAYMENTPWD not between", value1, value2, "paymentpwd");
      return this;
    }

    public Criteria andNameIsNull() {
      addCriterion("NAME is null");
      return this;
    }

    public Criteria andNameIsNotNull() {
      addCriterion("NAME is not null");
      return this;
    }

    public Criteria andNameEqualTo(String value) {
      addCriterion("NAME =", value, "name");
      return this;
    }

    public Criteria andNameNotEqualTo(String value) {
      addCriterion("NAME <>", value, "name");
      return this;
    }

    public Criteria andNameGreaterThan(String value) {
      addCriterion("NAME >", value, "name");
      return this;
    }

    public Criteria andNameGreaterThanOrEqualTo(String value) {
      addCriterion("NAME >=", value, "name");
      return this;
    }

    public Criteria andNameLessThan(String value) {
      addCriterion("NAME <", value, "name");
      return this;
    }

    public Criteria andNameLessThanOrEqualTo(String value) {
      addCriterion("NAME <=", value, "name");
      return this;
    }

    public Criteria andNameLike(String value) {
      addCriterion("NAME like", value, "name");
      return this;
    }

    public Criteria andNameNotLike(String value) {
      addCriterion("NAME not like", value, "name");
      return this;
    }

    public Criteria andNameIn(List values) {
      addCriterion("NAME in", values, "name");
      return this;
    }

    public Criteria andNameNotIn(List values) {
      addCriterion("NAME not in", values, "name");
      return this;
    }

    public Criteria andNameBetween(String value1, String value2) {
      addCriterion("NAME between", value1, value2, "name");
      return this;
    }

    public Criteria andNameNotBetween(String value1, String value2) {
      addCriterion("NAME not between", value1, value2, "name");
      return this;
    }

    public Criteria andAcconutIdIsNull() {
      addCriterion("ACCONUT_ID is null");
      return this;
    }

    public Criteria andAcconutIdIsNotNull() {
      addCriterion("ACCONUT_ID is not null");
      return this;
    }

    public Criteria andAcconutIdEqualTo(String value) {
      addCriterion("ACCONUT_ID =", value, "acconutId");
      return this;
    }

    public Criteria andAcconutIdNotEqualTo(String value) {
      addCriterion("ACCONUT_ID <>", value, "acconutId");
      return this;
    }

    public Criteria andAcconutIdGreaterThan(String value) {
      addCriterion("ACCONUT_ID >", value, "acconutId");
      return this;
    }

    public Criteria andAcconutIdGreaterThanOrEqualTo(String value) {
      addCriterion("ACCONUT_ID >=", value, "acconutId");
      return this;
    }

    public Criteria andAcconutIdLessThan(String value) {
      addCriterion("ACCONUT_ID <", value, "acconutId");
      return this;
    }

    public Criteria andAcconutIdLessThanOrEqualTo(String value) {
      addCriterion("ACCONUT_ID <=", value, "acconutId");
      return this;
    }

    public Criteria andAcconutIdLike(String value) {
      addCriterion("ACCONUT_ID like", value, "acconutId");
      return this;
    }

    public Criteria andAcconutIdNotLike(String value) {
      addCriterion("ACCONUT_ID not like", value, "acconutId");
      return this;
    }

    public Criteria andAcconutIdIn(List values) {
      addCriterion("ACCONUT_ID in", values, "acconutId");
      return this;
    }

    public Criteria andAcconutIdNotIn(List values) {
      addCriterion("ACCONUT_ID not in", values, "acconutId");
      return this;
    }

    public Criteria andAcconutIdBetween(String value1, String value2) {
      addCriterion("ACCONUT_ID between", value1, value2, "acconutId");
      return this;
    }

    public Criteria andAcconutIdNotBetween(String value1, String value2) {
      addCriterion("ACCONUT_ID not between", value1, value2, "acconutId");
      return this;
    }

    public Criteria andMobileIsNull() {
      addCriterion("MOBILE is null");
      return this;
    }

    public Criteria andMobileIsNotNull() {
      addCriterion("MOBILE is not null");
      return this;
    }

    public Criteria andMobileEqualTo(String value) {
      addCriterion("MOBILE =", value, "mobile");
      return this;
    }

    public Criteria andMobileNotEqualTo(String value) {
      addCriterion("MOBILE <>", value, "mobile");
      return this;
    }

    public Criteria andMobileGreaterThan(String value) {
      addCriterion("MOBILE >", value, "mobile");
      return this;
    }

    public Criteria andMobileGreaterThanOrEqualTo(String value) {
      addCriterion("MOBILE >=", value, "mobile");
      return this;
    }

    public Criteria andMobileLessThan(String value) {
      addCriterion("MOBILE <", value, "mobile");
      return this;
    }

    public Criteria andMobileLessThanOrEqualTo(String value) {
      addCriterion("MOBILE <=", value, "mobile");
      return this;
    }

    public Criteria andMobileLike(String value) {
      addCriterion("MOBILE like", value, "mobile");
      return this;
    }

    public Criteria andMobileNotLike(String value) {
      addCriterion("MOBILE not like", value, "mobile");
      return this;
    }

    public Criteria andMobileIn(List values) {
      addCriterion("MOBILE in", values, "mobile");
      return this;
    }

    public Criteria andMobileNotIn(List values) {
      addCriterion("MOBILE not in", values, "mobile");
      return this;
    }

    public Criteria andMobileBetween(String value1, String value2) {
      addCriterion("MOBILE between", value1, value2, "mobile");
      return this;
    }

    public Criteria andMobileNotBetween(String value1, String value2) {
      addCriterion("MOBILE not between", value1, value2, "mobile");
      return this;
    }

    public Criteria andEmailIsNull() {
      addCriterion("EMAIL is null");
      return this;
    }

    public Criteria andEmailIsNotNull() {
      addCriterion("EMAIL is not null");
      return this;
    }

    public Criteria andEmailEqualTo(String value) {
      addCriterion("EMAIL =", value, "email");
      return this;
    }

    public Criteria andEmailNotEqualTo(String value) {
      addCriterion("EMAIL <>", value, "email");
      return this;
    }

    public Criteria andEmailGreaterThan(String value) {
      addCriterion("EMAIL >", value, "email");
      return this;
    }

    public Criteria andEmailGreaterThanOrEqualTo(String value) {
      addCriterion("EMAIL >=", value, "email");
      return this;
    }

    public Criteria andEmailLessThan(String value) {
      addCriterion("EMAIL <", value, "email");
      return this;
    }

    public Criteria andEmailLessThanOrEqualTo(String value) {
      addCriterion("EMAIL <=", value, "email");
      return this;
    }

    public Criteria andEmailLike(String value) {
      addCriterion("EMAIL like", value, "email");
      return this;
    }

    public Criteria andEmailNotLike(String value) {
      addCriterion("EMAIL not like", value, "email");
      return this;
    }

    public Criteria andEmailIn(List values) {
      addCriterion("EMAIL in", values, "email");
      return this;
    }

    public Criteria andEmailNotIn(List values) {
      addCriterion("EMAIL not in", values, "email");
      return this;
    }

    public Criteria andEmailBetween(String value1, String value2) {
      addCriterion("EMAIL between", value1, value2, "email");
      return this;
    }

    public Criteria andEmailNotBetween(String value1, String value2) {
      addCriterion("EMAIL not between", value1, value2, "email");
      return this;
    }

    public Criteria andAddressIsNull() {
      addCriterion("ADDRESS is null");
      return this;
    }

    public Criteria andAddressIsNotNull() {
      addCriterion("ADDRESS is not null");
      return this;
    }

    public Criteria andAddressEqualTo(String value) {
      addCriterion("ADDRESS =", value, "address");
      return this;
    }

    public Criteria andAddressNotEqualTo(String value) {
      addCriterion("ADDRESS <>", value, "address");
      return this;
    }

    public Criteria andAddressGreaterThan(String value) {
      addCriterion("ADDRESS >", value, "address");
      return this;
    }

    public Criteria andAddressGreaterThanOrEqualTo(String value) {
      addCriterion("ADDRESS >=", value, "address");
      return this;
    }

    public Criteria andAddressLessThan(String value) {
      addCriterion("ADDRESS <", value, "address");
      return this;
    }

    public Criteria andAddressLessThanOrEqualTo(String value) {
      addCriterion("ADDRESS <=", value, "address");
      return this;
    }

    public Criteria andAddressLike(String value) {
      addCriterion("ADDRESS like", value, "address");
      return this;
    }

    public Criteria andAddressNotLike(String value) {
      addCriterion("ADDRESS not like", value, "address");
      return this;
    }

    public Criteria andAddressIn(List values) {
      addCriterion("ADDRESS in", values, "address");
      return this;
    }

    public Criteria andAddressNotIn(List values) {
      addCriterion("ADDRESS not in", values, "address");
      return this;
    }

    public Criteria andAddressBetween(String value1, String value2) {
      addCriterion("ADDRESS between", value1, value2, "address");
      return this;
    }

    public Criteria andAddressNotBetween(String value1, String value2) {
      addCriterion("ADDRESS not between", value1, value2, "address");
      return this;
    }

    public Criteria andd_CreateDateIsNull() {
      addCriterion("D_CREATE_DATE is null");
      return this;
    }

    public Criteria andd_CreateDateIsNotNull() {
      addCriterion("D_CREATE_DATE is not null");
      return this;
    }

    public Criteria andd_CreateDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE =", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <>", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >=", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateLessThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <=", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE in", values, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateNotIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE not in", values, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE between", value1, value2, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE not between", value1, value2, "d_CreateDate");
      return this;
    }

    public Criteria andNAccountAmountIsNull() {
      addCriterion("N_ACCOUNT_AMOUNT is null");
      return this;
    }

    public Criteria andNAccountAmountIsNotNull() {
      addCriterion("N_ACCOUNT_AMOUNT is not null");
      return this;
    }

    public Criteria andNAccountAmountEqualTo(Integer value) {
      addCriterion("N_ACCOUNT_AMOUNT =", value, "nAccountAmount");
      return this;
    }

    public Criteria andNAccountAmountNotEqualTo(Integer value) {
      addCriterion("N_ACCOUNT_AMOUNT <>", value, "nAccountAmount");
      return this;
    }

    public Criteria andNAccountAmountGreaterThan(Integer value) {
      addCriterion("N_ACCOUNT_AMOUNT >", value, "nAccountAmount");
      return this;
    }

    public Criteria andNAccountAmountGreaterThanOrEqualTo(Integer value) {
      addCriterion("N_ACCOUNT_AMOUNT >=", value, "nAccountAmount");
      return this;
    }

    public Criteria andNAccountAmountLessThan(Integer value) {
      addCriterion("N_ACCOUNT_AMOUNT <", value, "nAccountAmount");
      return this;
    }

    public Criteria andNAccountAmountLessThanOrEqualTo(Integer value) {
      addCriterion("N_ACCOUNT_AMOUNT <=", value, "nAccountAmount");
      return this;
    }

    public Criteria andNAccountAmountIn(List values) {
      addCriterion("N_ACCOUNT_AMOUNT in", values, "nAccountAmount");
      return this;
    }

    public Criteria andNAccountAmountNotIn(List values) {
      addCriterion("N_ACCOUNT_AMOUNT not in", values, "nAccountAmount");
      return this;
    }

    public Criteria andNAccountAmountBetween(Integer value1, Integer value2) {
      addCriterion("N_ACCOUNT_AMOUNT between", value1, value2, "nAccountAmount");
      return this;
    }

    public Criteria andNAccountAmountNotBetween(Integer value1, Integer value2) {
      addCriterion("N_ACCOUNT_AMOUNT not between", value1, value2, "nAccountAmount");
      return this;
    }

    public Criteria andAmountFrozenIsNull() {
      addCriterion("AMOUNT_FROZEN is null");
      return this;
    }

    public Criteria andAmountFrozenIsNotNull() {
      addCriterion("AMOUNT_FROZEN is not null");
      return this;
    }

    public Criteria andAmountFrozenEqualTo(Integer value) {
      addCriterion("AMOUNT_FROZEN =", value, "amountFrozen");
      return this;
    }

    public Criteria andAmountFrozenNotEqualTo(Integer value) {
      addCriterion("AMOUNT_FROZEN <>", value, "amountFrozen");
      return this;
    }

    public Criteria andAmountFrozenGreaterThan(Integer value) {
      addCriterion("AMOUNT_FROZEN >", value, "amountFrozen");
      return this;
    }

    public Criteria andAmountFrozenGreaterThanOrEqualTo(Integer value) {
      addCriterion("AMOUNT_FROZEN >=", value, "amountFrozen");
      return this;
    }

    public Criteria andAmountFrozenLessThan(Integer value) {
      addCriterion("AMOUNT_FROZEN <", value, "amountFrozen");
      return this;
    }

    public Criteria andAmountFrozenLessThanOrEqualTo(Integer value) {
      addCriterion("AMOUNT_FROZEN <=", value, "amountFrozen");
      return this;
    }

    public Criteria andAmountFrozenIn(List values) {
      addCriterion("AMOUNT_FROZEN in", values, "amountFrozen");
      return this;
    }

    public Criteria andAmountFrozenNotIn(List values) {
      addCriterion("AMOUNT_FROZEN not in", values, "amountFrozen");
      return this;
    }

    public Criteria andAmountFrozenBetween(Integer value1, Integer value2) {
      addCriterion("AMOUNT_FROZEN between", value1, value2, "amountFrozen");
      return this;
    }

    public Criteria andAmountFrozenNotBetween(Integer value1, Integer value2) {
      addCriterion("AMOUNT_FROZEN not between", value1, value2, "amountFrozen");
      return this;
    }

    public Criteria andAmountAvlibalIsNull() {
      addCriterion("AMOUNT_AVLIBAL is null");
      return this;
    }

    public Criteria andAmountAvlibalIsNotNull() {
      addCriterion("AMOUNT_AVLIBAL is not null");
      return this;
    }

    public Criteria andAmountAvlibalEqualTo(Integer value) {
      addCriterion("AMOUNT_AVLIBAL =", value, "amountAvlibal");
      return this;
    }

    public Criteria andAmountAvlibalNotEqualTo(Integer value) {
      addCriterion("AMOUNT_AVLIBAL <>", value, "amountAvlibal");
      return this;
    }

    public Criteria andAmountAvlibalGreaterThan(Integer value) {
      addCriterion("AMOUNT_AVLIBAL >", value, "amountAvlibal");
      return this;
    }

    public Criteria andAmountAvlibalGreaterThanOrEqualTo(Integer value) {
      addCriterion("AMOUNT_AVLIBAL >=", value, "amountAvlibal");
      return this;
    }

    public Criteria andAmountAvlibalLessThan(Integer value) {
      addCriterion("AMOUNT_AVLIBAL <", value, "amountAvlibal");
      return this;
    }

    public Criteria andAmountAvlibalLessThanOrEqualTo(Integer value) {
      addCriterion("AMOUNT_AVLIBAL <=", value, "amountAvlibal");
      return this;
    }

    public Criteria andAmountAvlibalIn(List values) {
      addCriterion("AMOUNT_AVLIBAL in", values, "amountAvlibal");
      return this;
    }

    public Criteria andAmountAvlibalNotIn(List values) {
      addCriterion("AMOUNT_AVLIBAL not in", values, "amountAvlibal");
      return this;
    }

    public Criteria andAmountAvlibalBetween(Integer value1, Integer value2) {
      addCriterion("AMOUNT_AVLIBAL between", value1, value2, "amountAvlibal");
      return this;
    }

    public Criteria andAmountAvlibalNotBetween(Integer value1, Integer value2) {
      addCriterion("AMOUNT_AVLIBAL not between", value1, value2, "amountAvlibal");
      return this;
    }

    public Criteria andn_StatusIsNull() {
      addCriterion("N_STATUS is null");
      return this;
    }

    public Criteria andn_StatusIsNotNull() {
      addCriterion("N_STATUS is not null");
      return this;
    }

    public Criteria andn_StatusEqualTo(Short value) {
      addCriterion("N_STATUS =", value, "n_Status");
      return this;
    }

    public Criteria andn_StatusNotEqualTo(Short value) {
      addCriterion("N_STATUS <>", value, "n_Status");
      return this;
    }

    public Criteria andn_StatusGreaterThan(Short value) {
      addCriterion("N_STATUS >", value, "n_Status");
      return this;
    }

    public Criteria andn_StatusGreaterThanOrEqualTo(Short value) {
      addCriterion("N_STATUS >=", value, "n_Status");
      return this;
    }

    public Criteria andn_StatusLessThan(Short value) {
      addCriterion("N_STATUS <", value, "n_Status");
      return this;
    }

    public Criteria andn_StatusLessThanOrEqualTo(Short value) {
      addCriterion("N_STATUS <=", value, "n_Status");
      return this;
    }

    public Criteria andn_StatusIn(List values) {
      addCriterion("N_STATUS in", values, "n_Status");
      return this;
    }

    public Criteria andn_StatusNotIn(List values) {
      addCriterion("N_STATUS not in", values, "n_Status");
      return this;
    }

    public Criteria andn_StatusBetween(Short value1, Short value2) {
      addCriterion("N_STATUS between", value1, value2, "n_Status");
      return this;
    }

    public Criteria andn_StatusNotBetween(Short value1, Short value2) {
      addCriterion("N_STATUS not between", value1, value2, "n_Status");
      return this;
    }

    public Criteria andd_ModifyDateIsNull() {
      addCriterion("D_MODIFY_DATE is null");
      return this;
    }

    public Criteria andd_ModifyDateIsNotNull() {
      addCriterion("D_MODIFY_DATE is not null");
      return this;
    }

    public Criteria andd_ModifyDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE =", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <>", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >=", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateLessThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <=", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE in", values, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateNotIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE not in", values, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE between", value1, value2, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE not between", value1, value2, "d_ModifyDate");
      return this;
    }

    public Criteria andn_ModifiedIsNull() {
      addCriterion("N_MODIFIED is null");
      return this;
    }

    public Criteria andn_ModifiedIsNotNull() {
      addCriterion("N_MODIFIED is not null");
      return this;
    }

    public Criteria andn_ModifiedEqualTo(Integer value) {
      addCriterion("N_MODIFIED =", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedNotEqualTo(Integer value) {
      addCriterion("N_MODIFIED <>", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedGreaterThan(Integer value) {
      addCriterion("N_MODIFIED >", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedGreaterThanOrEqualTo(Integer value) {
      addCriterion("N_MODIFIED >=", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedLessThan(Integer value) {
      addCriterion("N_MODIFIED <", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedLessThanOrEqualTo(Integer value) {
      addCriterion("N_MODIFIED <=", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedIn(List values) {
      addCriterion("N_MODIFIED in", values, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedNotIn(List values) {
      addCriterion("N_MODIFIED not in", values, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedBetween(Integer value1, Integer value2) {
      addCriterion("N_MODIFIED between", value1, value2, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedNotBetween(Integer value1, Integer value2) {
      addCriterion("N_MODIFIED not between", value1, value2, "n_Modified");
      return this;
    }
  }
}
