package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class AllergySymptomsInfoExample {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public AllergySymptomsInfoExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  protected AllergySymptomsInfoExample(AllergySymptomsInfoExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * ALLERGY_SYMPTOMS_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:41:36 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()),
          new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andNAllergySymptomsIdIsNull() {
      addCriterion("N_ALLERGY_SYMPTOMS_ID is null");
      return this;
    }

    public Criteria andNAllergySymptomsIdIsNotNull() {
      addCriterion("N_ALLERGY_SYMPTOMS_ID is not null");
      return this;
    }

    public Criteria andNAllergySymptomsIdEqualTo(BigDecimal value) {
      addCriterion("N_ALLERGY_SYMPTOMS_ID =", value, "nAllergySymptomsId");
      return this;
    }

    public Criteria andNAllergySymptomsIdNotEqualTo(BigDecimal value) {
      addCriterion("N_ALLERGY_SYMPTOMS_ID <>", value, "nAllergySymptomsId");
      return this;
    }

    public Criteria andNAllergySymptomsIdGreaterThan(BigDecimal value) {
      addCriterion("N_ALLERGY_SYMPTOMS_ID >", value, "nAllergySymptomsId");
      return this;
    }

    public Criteria andNAllergySymptomsIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_ALLERGY_SYMPTOMS_ID >=", value, "nAllergySymptomsId");
      return this;
    }

    public Criteria andNAllergySymptomsIdLessThan(BigDecimal value) {
      addCriterion("N_ALLERGY_SYMPTOMS_ID <", value, "nAllergySymptomsId");
      return this;
    }

    public Criteria andNAllergySymptomsIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_ALLERGY_SYMPTOMS_ID <=", value, "nAllergySymptomsId");
      return this;
    }

    public Criteria andNAllergySymptomsIdIn(List values) {
      addCriterion("N_ALLERGY_SYMPTOMS_ID in", values, "nAllergySymptomsId");
      return this;
    }

    public Criteria andNAllergySymptomsIdNotIn(List values) {
      addCriterion("N_ALLERGY_SYMPTOMS_ID not in", values, "nAllergySymptomsId");
      return this;
    }

    public Criteria andNAllergySymptomsIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_ALLERGY_SYMPTOMS_ID between", value1, value2, "nAllergySymptomsId");
      return this;
    }

    public Criteria andNAllergySymptomsIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_ALLERGY_SYMPTOMS_ID not between", value1, value2, "nAllergySymptomsId");
      return this;
    }

    public Criteria andNHealthYgenericIdIsNull() {
      addCriterion("N_HEALTH_YGENERIC_ID is null");
      return this;
    }

    public Criteria andNHealthYgenericIdIsNotNull() {
      addCriterion("N_HEALTH_YGENERIC_ID is not null");
      return this;
    }

    public Criteria andNHealthYgenericIdEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID =", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <>", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdGreaterThan(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID >", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID >=", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdLessThan(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <=", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdIn(List values) {
      addCriterion("N_HEALTH_YGENERIC_ID in", values, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotIn(List values) {
      addCriterion("N_HEALTH_YGENERIC_ID not in", values, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_HEALTH_YGENERIC_ID between", value1, value2, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_HEALTH_YGENERIC_ID not between", value1, value2, "nHealthYgenericId");
      return this;
    }

    public Criteria andAllergyTypeIsNull() {
      addCriterion("ALLERGY_TYPE is null");
      return this;
    }

    public Criteria andAllergyTypeIsNotNull() {
      addCriterion("ALLERGY_TYPE is not null");
      return this;
    }

    public Criteria andAllergyTypeEqualTo(String value) {
      addCriterion("ALLERGY_TYPE =", value, "allergyType");
      return this;
    }

    public Criteria andAllergyTypeNotEqualTo(String value) {
      addCriterion("ALLERGY_TYPE <>", value, "allergyType");
      return this;
    }

    public Criteria andAllergyTypeGreaterThan(String value) {
      addCriterion("ALLERGY_TYPE >", value, "allergyType");
      return this;
    }

    public Criteria andAllergyTypeGreaterThanOrEqualTo(String value) {
      addCriterion("ALLERGY_TYPE >=", value, "allergyType");
      return this;
    }

    public Criteria andAllergyTypeLessThan(String value) {
      addCriterion("ALLERGY_TYPE <", value, "allergyType");
      return this;
    }

    public Criteria andAllergyTypeLessThanOrEqualTo(String value) {
      addCriterion("ALLERGY_TYPE <=", value, "allergyType");
      return this;
    }

    public Criteria andAllergyTypeLike(String value) {
      addCriterion("ALLERGY_TYPE like", value, "allergyType");
      return this;
    }

    public Criteria andAllergyTypeNotLike(String value) {
      addCriterion("ALLERGY_TYPE not like", value, "allergyType");
      return this;
    }

    public Criteria andAllergyTypeIn(List values) {
      addCriterion("ALLERGY_TYPE in", values, "allergyType");
      return this;
    }

    public Criteria andAllergyTypeNotIn(List values) {
      addCriterion("ALLERGY_TYPE not in", values, "allergyType");
      return this;
    }

    public Criteria andAllergyTypeBetween(String value1, String value2) {
      addCriterion("ALLERGY_TYPE between", value1, value2, "allergyType");
      return this;
    }

    public Criteria andAllergyTypeNotBetween(String value1, String value2) {
      addCriterion("ALLERGY_TYPE not between", value1, value2, "allergyType");
      return this;
    }

    public Criteria andEffectDegreeIsNull() {
      addCriterion("EFFECT_DEGREE is null");
      return this;
    }

    public Criteria andEffectDegreeIsNotNull() {
      addCriterion("EFFECT_DEGREE is not null");
      return this;
    }

    public Criteria andEffectDegreeEqualTo(String value) {
      addCriterion("EFFECT_DEGREE =", value, "effectDegree");
      return this;
    }

    public Criteria andEffectDegreeNotEqualTo(String value) {
      addCriterion("EFFECT_DEGREE <>", value, "effectDegree");
      return this;
    }

    public Criteria andEffectDegreeGreaterThan(String value) {
      addCriterion("EFFECT_DEGREE >", value, "effectDegree");
      return this;
    }

    public Criteria andEffectDegreeGreaterThanOrEqualTo(String value) {
      addCriterion("EFFECT_DEGREE >=", value, "effectDegree");
      return this;
    }

    public Criteria andEffectDegreeLessThan(String value) {
      addCriterion("EFFECT_DEGREE <", value, "effectDegree");
      return this;
    }

    public Criteria andEffectDegreeLessThanOrEqualTo(String value) {
      addCriterion("EFFECT_DEGREE <=", value, "effectDegree");
      return this;
    }

    public Criteria andEffectDegreeLike(String value) {
      addCriterion("EFFECT_DEGREE like", value, "effectDegree");
      return this;
    }

    public Criteria andEffectDegreeNotLike(String value) {
      addCriterion("EFFECT_DEGREE not like", value, "effectDegree");
      return this;
    }

    public Criteria andEffectDegreeIn(List values) {
      addCriterion("EFFECT_DEGREE in", values, "effectDegree");
      return this;
    }

    public Criteria andEffectDegreeNotIn(List values) {
      addCriterion("EFFECT_DEGREE not in", values, "effectDegree");
      return this;
    }

    public Criteria andEffectDegreeBetween(String value1, String value2) {
      addCriterion("EFFECT_DEGREE between", value1, value2, "effectDegree");
      return this;
    }

    public Criteria andEffectDegreeNotBetween(String value1, String value2) {
      addCriterion("EFFECT_DEGREE not between", value1, value2, "effectDegree");
      return this;
    }

    public Criteria andDAllergicSymptomsTimeIsNull() {
      addCriterion("D_ALLERGIC_SYMPTOMS_TIME is null");
      return this;
    }

    public Criteria andDAllergicSymptomsTimeIsNotNull() {
      addCriterion("D_ALLERGIC_SYMPTOMS_TIME is not null");
      return this;
    }

    public Criteria andDAllergicSymptomsTimeEqualTo(Date value) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_TIME =", value, "dAllergicSymptomsTime");
      return this;
    }

    public Criteria andDAllergicSymptomsTimeNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_TIME <>", value, "dAllergicSymptomsTime");
      return this;
    }

    public Criteria andDAllergicSymptomsTimeGreaterThan(Date value) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_TIME >", value, "dAllergicSymptomsTime");
      return this;
    }

    public Criteria andDAllergicSymptomsTimeGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_TIME >=", value, "dAllergicSymptomsTime");
      return this;
    }

    public Criteria andDAllergicSymptomsTimeLessThan(Date value) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_TIME <", value, "dAllergicSymptomsTime");
      return this;
    }

    public Criteria andDAllergicSymptomsTimeLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_TIME <=", value, "dAllergicSymptomsTime");
      return this;
    }

    public Criteria andDAllergicSymptomsTimeIn(List values) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_TIME in", values, "dAllergicSymptomsTime");
      return this;
    }

    public Criteria andDAllergicSymptomsTimeNotIn(List values) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_TIME not in", values, "dAllergicSymptomsTime");
      return this;
    }

    public Criteria andDAllergicSymptomsTimeBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_TIME between", value1, value2,
          "dAllergicSymptomsTime");
      return this;
    }

    public Criteria andDAllergicSymptomsTimeNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_TIME not between", value1, value2,
          "dAllergicSymptomsTime");
      return this;
    }

    public Criteria andDAllergicSymptomsDisappearIsNull() {
      addCriterion("D_ALLERGIC_SYMPTOMS_DISAPPEAR_ is null");
      return this;
    }

    public Criteria andDAllergicSymptomsDisappearIsNotNull() {
      addCriterion("D_ALLERGIC_SYMPTOMS_DISAPPEAR_ is not null");
      return this;
    }

    public Criteria andDAllergicSymptomsDisappearEqualTo(Date value) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_DISAPPEAR_ =", value,
          "dAllergicSymptomsDisappear");
      return this;
    }

    public Criteria andDAllergicSymptomsDisappearNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_DISAPPEAR_ <>", value,
          "dAllergicSymptomsDisappear");
      return this;
    }

    public Criteria andDAllergicSymptomsDisappearGreaterThan(Date value) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_DISAPPEAR_ >", value,
          "dAllergicSymptomsDisappear");
      return this;
    }

    public Criteria andDAllergicSymptomsDisappearGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_DISAPPEAR_ >=", value,
          "dAllergicSymptomsDisappear");
      return this;
    }

    public Criteria andDAllergicSymptomsDisappearLessThan(Date value) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_DISAPPEAR_ <", value,
          "dAllergicSymptomsDisappear");
      return this;
    }

    public Criteria andDAllergicSymptomsDisappearLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_DISAPPEAR_ <=", value,
          "dAllergicSymptomsDisappear");
      return this;
    }

    public Criteria andDAllergicSymptomsDisappearIn(List values) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_DISAPPEAR_ in", values,
          "dAllergicSymptomsDisappear");
      return this;
    }

    public Criteria andDAllergicSymptomsDisappearNotIn(List values) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_DISAPPEAR_ not in", values,
          "dAllergicSymptomsDisappear");
      return this;
    }

    public Criteria andDAllergicSymptomsDisappearBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_DISAPPEAR_ between", value1, value2,
          "dAllergicSymptomsDisappear");
      return this;
    }

    public Criteria andDAllergicSymptomsDisappearNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_ALLERGIC_SYMPTOMS_DISAPPEAR_ not between", value1, value2,
          "dAllergicSymptomsDisappear");
      return this;
    }

    public Criteria andDCreateDateIsNull() {
      addCriterion("D_CREATE_DATE is null");
      return this;
    }

    public Criteria andDCreateDateIsNotNull() {
      addCriterion("D_CREATE_DATE is not null");
      return this;
    }

    public Criteria andDCreateDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE =", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <>", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >=", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateLessThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <=", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE in", values, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateNotIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE not in", values, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE between", value1, value2, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE not between", value1, value2, "dCreateDate");
      return this;
    }

    public Criteria andNCreatedIsNull() {
      addCriterion("N_CREATED is null");
      return this;
    }

    public Criteria andNCreatedIsNotNull() {
      addCriterion("N_CREATED is not null");
      return this;
    }

    public Criteria andNCreatedEqualTo(BigDecimal value) {
      addCriterion("N_CREATED =", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedNotEqualTo(BigDecimal value) {
      addCriterion("N_CREATED <>", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedGreaterThan(BigDecimal value) {
      addCriterion("N_CREATED >", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CREATED >=", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedLessThan(BigDecimal value) {
      addCriterion("N_CREATED <", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CREATED <=", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedIn(List values) {
      addCriterion("N_CREATED in", values, "nCreated");
      return this;
    }

    public Criteria andNCreatedNotIn(List values) {
      addCriterion("N_CREATED not in", values, "nCreated");
      return this;
    }

    public Criteria andNCreatedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CREATED between", value1, value2, "nCreated");
      return this;
    }

    public Criteria andNCreatedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CREATED not between", value1, value2, "nCreated");
      return this;
    }

    public Criteria andDModifyDateIsNull() {
      addCriterion("D_MODIFY_DATE is null");
      return this;
    }

    public Criteria andDModifyDateIsNotNull() {
      addCriterion("D_MODIFY_DATE is not null");
      return this;
    }

    public Criteria andDModifyDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE =", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <>", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >=", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateLessThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <=", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE in", values, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateNotIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE not in", values, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE between", value1, value2, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE not between", value1, value2, "dModifyDate");
      return this;
    }

    public Criteria andNModifiedIsNull() {
      addCriterion("N_MODIFIED is null");
      return this;
    }

    public Criteria andNModifiedIsNotNull() {
      addCriterion("N_MODIFIED is not null");
      return this;
    }

    public Criteria andNModifiedEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED =", value, "nModified");
      return this;
    }

    public Criteria andNModifiedNotEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED <>", value, "nModified");
      return this;
    }

    public Criteria andNModifiedGreaterThan(BigDecimal value) {
      addCriterion("N_MODIFIED >", value, "nModified");
      return this;
    }

    public Criteria andNModifiedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED >=", value, "nModified");
      return this;
    }

    public Criteria andNModifiedLessThan(BigDecimal value) {
      addCriterion("N_MODIFIED <", value, "nModified");
      return this;
    }

    public Criteria andNModifiedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED <=", value, "nModified");
      return this;
    }

    public Criteria andNModifiedIn(List values) {
      addCriterion("N_MODIFIED in", values, "nModified");
      return this;
    }

    public Criteria andNModifiedNotIn(List values) {
      addCriterion("N_MODIFIED not in", values, "nModified");
      return this;
    }

    public Criteria andNModifiedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_MODIFIED between", value1, value2, "nModified");
      return this;
    }

    public Criteria andNModifiedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_MODIFIED not between", value1, value2, "nModified");
      return this;
    }
  }
}
