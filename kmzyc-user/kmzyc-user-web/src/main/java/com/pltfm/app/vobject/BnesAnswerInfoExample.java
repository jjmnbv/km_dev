package com.pltfm.app.vobject;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class BnesAnswerInfoExample {
  /**
   * This field was generated by Abator for iBATIS. This field corresponds to the database table
   * BNES_ANSWER_INFO
   *
   * @abatorgenerated Tue Aug 06 09:20:47 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Abator for iBATIS. This field corresponds to the database table
   * BNES_ANSWER_INFO
   *
   * @abatorgenerated Tue Aug 06 09:20:47 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ANSWER_INFO
   *
   * @abatorgenerated Tue Aug 06 09:20:47 CST 2013
   */
  public BnesAnswerInfoExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ANSWER_INFO
   *
   * @abatorgenerated Tue Aug 06 09:20:47 CST 2013
   */
  protected BnesAnswerInfoExample(BnesAnswerInfoExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ANSWER_INFO
   *
   * @abatorgenerated Tue Aug 06 09:20:47 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ANSWER_INFO
   *
   * @abatorgenerated Tue Aug 06 09:20:47 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ANSWER_INFO
   *
   * @abatorgenerated Tue Aug 06 09:20:47 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ANSWER_INFO
   *
   * @abatorgenerated Tue Aug 06 09:20:47 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ANSWER_INFO
   *
   * @abatorgenerated Tue Aug 06 09:20:47 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ANSWER_INFO
   *
   * @abatorgenerated Tue Aug 06 09:20:47 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ANSWER_INFO
   *
   * @abatorgenerated Tue Aug 06 09:20:47 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Abator for iBATIS. This class corresponds to the database table
   * BNES_ANSWER_INFO
   *
   * @abatorgenerated Tue Aug 06 09:20:47 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()),
          new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andAnswerInfoIdIsNull() {
      addCriterion("ANSWER_INFO_ID is null");
      return this;
    }

    public Criteria andAnswerInfoIdIsNotNull() {
      addCriterion("ANSWER_INFO_ID is not null");
      return this;
    }

    public Criteria andAnswerInfoIdEqualTo(Integer value) {
      addCriterion("ANSWER_INFO_ID =", value, "answerInfoId");
      return this;
    }

    public Criteria andAnswerInfoIdNotEqualTo(Integer value) {
      addCriterion("ANSWER_INFO_ID <>", value, "answerInfoId");
      return this;
    }

    public Criteria andAnswerInfoIdGreaterThan(Integer value) {
      addCriterion("ANSWER_INFO_ID >", value, "answerInfoId");
      return this;
    }

    public Criteria andAnswerInfoIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("ANSWER_INFO_ID >=", value, "answerInfoId");
      return this;
    }

    public Criteria andAnswerInfoIdLessThan(Integer value) {
      addCriterion("ANSWER_INFO_ID <", value, "answerInfoId");
      return this;
    }

    public Criteria andAnswerInfoIdLessThanOrEqualTo(Integer value) {
      addCriterion("ANSWER_INFO_ID <=", value, "answerInfoId");
      return this;
    }

    public Criteria andAnswerInfoIdIn(List values) {
      addCriterion("ANSWER_INFO_ID in", values, "answerInfoId");
      return this;
    }

    public Criteria andAnswerInfoIdNotIn(List values) {
      addCriterion("ANSWER_INFO_ID not in", values, "answerInfoId");
      return this;
    }

    public Criteria andAnswerInfoIdBetween(Integer value1, Integer value2) {
      addCriterion("ANSWER_INFO_ID between", value1, value2, "answerInfoId");
      return this;
    }

    public Criteria andAnswerInfoIdNotBetween(Integer value1, Integer value2) {
      addCriterion("ANSWER_INFO_ID not between", value1, value2, "answerInfoId");
      return this;
    }

    public Criteria andSafeQuestionIdIsNull() {
      addCriterion("SAFE_QUESTION_ID is null");
      return this;
    }

    public Criteria andSafeQuestionIdIsNotNull() {
      addCriterion("SAFE_QUESTION_ID is not null");
      return this;
    }

    public Criteria andSafeQuestionIdEqualTo(Integer value) {
      addCriterion("SAFE_QUESTION_ID =", value, "safeQuestionId");
      return this;
    }

    public Criteria andSafeQuestionIdNotEqualTo(Integer value) {
      addCriterion("SAFE_QUESTION_ID <>", value, "safeQuestionId");
      return this;
    }

    public Criteria andSafeQuestionIdGreaterThan(Integer value) {
      addCriterion("SAFE_QUESTION_ID >", value, "safeQuestionId");
      return this;
    }

    public Criteria andSafeQuestionIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("SAFE_QUESTION_ID >=", value, "safeQuestionId");
      return this;
    }

    public Criteria andSafeQuestionIdLessThan(Integer value) {
      addCriterion("SAFE_QUESTION_ID <", value, "safeQuestionId");
      return this;
    }

    public Criteria andSafeQuestionIdLessThanOrEqualTo(Integer value) {
      addCriterion("SAFE_QUESTION_ID <=", value, "safeQuestionId");
      return this;
    }

    public Criteria andSafeQuestionIdIn(List values) {
      addCriterion("SAFE_QUESTION_ID in", values, "safeQuestionId");
      return this;
    }

    public Criteria andSafeQuestionIdNotIn(List values) {
      addCriterion("SAFE_QUESTION_ID not in", values, "safeQuestionId");
      return this;
    }

    public Criteria andSafeQuestionIdBetween(Integer value1, Integer value2) {
      addCriterion("SAFE_QUESTION_ID between", value1, value2, "safeQuestionId");
      return this;
    }

    public Criteria andSafeQuestionIdNotBetween(Integer value1, Integer value2) {
      addCriterion("SAFE_QUESTION_ID not between", value1, value2, "safeQuestionId");
      return this;
    }

    public Criteria andAnswerContentIsNull() {
      addCriterion("ANSWER_CONTENT is null");
      return this;
    }

    public Criteria andAnswerContentIsNotNull() {
      addCriterion("ANSWER_CONTENT is not null");
      return this;
    }

    public Criteria andAnswerContentEqualTo(String value) {
      addCriterion("ANSWER_CONTENT =", value, "answerContent");
      return this;
    }

    public Criteria andAnswerContentNotEqualTo(String value) {
      addCriterion("ANSWER_CONTENT <>", value, "answerContent");
      return this;
    }

    public Criteria andAnswerContentGreaterThan(String value) {
      addCriterion("ANSWER_CONTENT >", value, "answerContent");
      return this;
    }

    public Criteria andAnswerContentGreaterThanOrEqualTo(String value) {
      addCriterion("ANSWER_CONTENT >=", value, "answerContent");
      return this;
    }

    public Criteria andAnswerContentLessThan(String value) {
      addCriterion("ANSWER_CONTENT <", value, "answerContent");
      return this;
    }

    public Criteria andAnswerContentLessThanOrEqualTo(String value) {
      addCriterion("ANSWER_CONTENT <=", value, "answerContent");
      return this;
    }

    public Criteria andAnswerContentLike(String value) {
      addCriterion("ANSWER_CONTENT like", value, "answerContent");
      return this;
    }

    public Criteria andAnswerContentNotLike(String value) {
      addCriterion("ANSWER_CONTENT not like", value, "answerContent");
      return this;
    }

    public Criteria andAnswerContentIn(List values) {
      addCriterion("ANSWER_CONTENT in", values, "answerContent");
      return this;
    }

    public Criteria andAnswerContentNotIn(List values) {
      addCriterion("ANSWER_CONTENT not in", values, "answerContent");
      return this;
    }

    public Criteria andAnswerContentBetween(String value1, String value2) {
      addCriterion("ANSWER_CONTENT between", value1, value2, "answerContent");
      return this;
    }

    public Criteria andAnswerContentNotBetween(String value1, String value2) {
      addCriterion("ANSWER_CONTENT not between", value1, value2, "answerContent");
      return this;
    }

    public Criteria andCreateDateIsNull() {
      addCriterion("CREATE_DATE is null");
      return this;
    }

    public Criteria andCreateDateIsNotNull() {
      addCriterion("CREATE_DATE is not null");
      return this;
    }

    public Criteria andCreateDateEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
      return this;
    }

    public Criteria andCreateDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
      return this;
    }

    public Criteria andCreateDateGreaterThan(Date value) {
      addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
      return this;
    }

    public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
      return this;
    }

    public Criteria andCreateDateLessThan(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
      return this;
    }

    public Criteria andCreateDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
      return this;
    }

    public Criteria andCreateDateIn(List values) {
      addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
      return this;
    }

    public Criteria andCreateDateNotIn(List values) {
      addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
      return this;
    }

    public Criteria andCreateDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
      return this;
    }

    public Criteria andCreateDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
      return this;
    }

    public Criteria andCreatedIsNull() {
      addCriterion("CREATED is null");
      return this;
    }

    public Criteria andCreatedIsNotNull() {
      addCriterion("CREATED is not null");
      return this;
    }

    public Criteria andCreatedEqualTo(Integer value) {
      addCriterion("CREATED =", value, "created");
      return this;
    }

    public Criteria andCreatedNotEqualTo(Integer value) {
      addCriterion("CREATED <>", value, "created");
      return this;
    }

    public Criteria andCreatedGreaterThan(Integer value) {
      addCriterion("CREATED >", value, "created");
      return this;
    }

    public Criteria andCreatedGreaterThanOrEqualTo(Integer value) {
      addCriterion("CREATED >=", value, "created");
      return this;
    }

    public Criteria andCreatedLessThan(Integer value) {
      addCriterion("CREATED <", value, "created");
      return this;
    }

    public Criteria andCreatedLessThanOrEqualTo(Integer value) {
      addCriterion("CREATED <=", value, "created");
      return this;
    }

    public Criteria andCreatedIn(List values) {
      addCriterion("CREATED in", values, "created");
      return this;
    }

    public Criteria andCreatedNotIn(List values) {
      addCriterion("CREATED not in", values, "created");
      return this;
    }

    public Criteria andCreatedBetween(Integer value1, Integer value2) {
      addCriterion("CREATED between", value1, value2, "created");
      return this;
    }

    public Criteria andCreatedNotBetween(Integer value1, Integer value2) {
      addCriterion("CREATED not between", value1, value2, "created");
      return this;
    }

    public Criteria andModifyDateIsNull() {
      addCriterion("MODIFY_DATE is null");
      return this;
    }

    public Criteria andModifyDateIsNotNull() {
      addCriterion("MODIFY_DATE is not null");
      return this;
    }

    public Criteria andModifyDateEqualTo(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE =", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE <>", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateGreaterThan(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE >", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE >=", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateLessThan(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE <", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE <=", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateIn(List values) {
      addCriterionForJDBCDate("MODIFY_DATE in", values, "modifyDate");
      return this;
    }

    public Criteria andModifyDateNotIn(List values) {
      addCriterionForJDBCDate("MODIFY_DATE not in", values, "modifyDate");
      return this;
    }

    public Criteria andModifyDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("MODIFY_DATE between", value1, value2, "modifyDate");
      return this;
    }

    public Criteria andModifyDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("MODIFY_DATE not between", value1, value2, "modifyDate");
      return this;
    }

    public Criteria andModifiedIsNull() {
      addCriterion("MODIFIED is null");
      return this;
    }

    public Criteria andModifiedIsNotNull() {
      addCriterion("MODIFIED is not null");
      return this;
    }

    public Criteria andModifiedEqualTo(Integer value) {
      addCriterion("MODIFIED =", value, "modified");
      return this;
    }

    public Criteria andModifiedNotEqualTo(Integer value) {
      addCriterion("MODIFIED <>", value, "modified");
      return this;
    }

    public Criteria andModifiedGreaterThan(Integer value) {
      addCriterion("MODIFIED >", value, "modified");
      return this;
    }

    public Criteria andModifiedGreaterThanOrEqualTo(Integer value) {
      addCriterion("MODIFIED >=", value, "modified");
      return this;
    }

    public Criteria andModifiedLessThan(Integer value) {
      addCriterion("MODIFIED <", value, "modified");
      return this;
    }

    public Criteria andModifiedLessThanOrEqualTo(Integer value) {
      addCriterion("MODIFIED <=", value, "modified");
      return this;
    }

    public Criteria andModifiedIn(List values) {
      addCriterion("MODIFIED in", values, "modified");
      return this;
    }

    public Criteria andModifiedNotIn(List values) {
      addCriterion("MODIFIED not in", values, "modified");
      return this;
    }

    public Criteria andModifiedBetween(Integer value1, Integer value2) {
      addCriterion("MODIFIED between", value1, value2, "modified");
      return this;
    }

    public Criteria andModifiedNotBetween(Integer value1, Integer value2) {
      addCriterion("MODIFIED not between", value1, value2, "modified");
      return this;
    }

    public Criteria andLoginIdIsNull() {
      addCriterion("LOGIN_ID is null");
      return this;
    }

    public Criteria andLoginIdIsNotNull() {
      addCriterion("LOGIN_ID is not null");
      return this;
    }

    public Criteria andLoginIdEqualTo(Integer value) {
      addCriterion("LOGIN_ID =", value, "loginId");
      return this;
    }

    public Criteria andLoginIdNotEqualTo(Integer value) {
      addCriterion("LOGIN_ID <>", value, "loginId");
      return this;
    }

    public Criteria andLoginIdGreaterThan(Integer value) {
      addCriterion("LOGIN_ID >", value, "loginId");
      return this;
    }

    public Criteria andLoginIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("LOGIN_ID >=", value, "loginId");
      return this;
    }

    public Criteria andLoginIdLessThan(Integer value) {
      addCriterion("LOGIN_ID <", value, "loginId");
      return this;
    }

    public Criteria andLoginIdLessThanOrEqualTo(Integer value) {
      addCriterion("LOGIN_ID <=", value, "loginId");
      return this;
    }

    public Criteria andLoginIdIn(List values) {
      addCriterion("LOGIN_ID in", values, "loginId");
      return this;
    }

    public Criteria andLoginIdNotIn(List values) {
      addCriterion("LOGIN_ID not in", values, "loginId");
      return this;
    }

    public Criteria andLoginIdBetween(Integer value1, Integer value2) {
      addCriterion("LOGIN_ID between", value1, value2, "loginId");
      return this;
    }

    public Criteria andLoginIdNotBetween(Integer value1, Integer value2) {
      addCriterion("LOGIN_ID not between", value1, value2, "loginId");
      return this;
    }

    public Criteria andAccountIdIsNull() {
      addCriterion("ACCOUNT_ID is null");
      return this;
    }

    public Criteria andAccountIdIsNotNull() {
      addCriterion("ACCOUNT_ID is not null");
      return this;
    }

    public Criteria andAccountIdEqualTo(Integer value) {
      addCriterion("ACCOUNT_ID =", value, "accountId");
      return this;
    }

    public Criteria andAccountIdNotEqualTo(Integer value) {
      addCriterion("ACCOUNT_ID <>", value, "accountId");
      return this;
    }

    public Criteria andAccountIdGreaterThan(Integer value) {
      addCriterion("ACCOUNT_ID >", value, "accountId");
      return this;
    }

    public Criteria andAccountIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("ACCOUNT_ID >=", value, "accountId");
      return this;
    }

    public Criteria andAccountIdLessThan(Integer value) {
      addCriterion("ACCOUNT_ID <", value, "accountId");
      return this;
    }

    public Criteria andAccountIdLessThanOrEqualTo(Integer value) {
      addCriterion("ACCOUNT_ID <=", value, "accountId");
      return this;
    }

    public Criteria andAccountIdIn(List values) {
      addCriterion("ACCOUNT_ID in", values, "accountId");
      return this;
    }

    public Criteria andAccountIdNotIn(List values) {
      addCriterion("ACCOUNT_ID not in", values, "accountId");
      return this;
    }

    public Criteria andAccountIdBetween(Integer value1, Integer value2) {
      addCriterion("ACCOUNT_ID between", value1, value2, "accountId");
      return this;
    }

    public Criteria andAccountIdNotBetween(Integer value1, Integer value2) {
      addCriterion("ACCOUNT_ID not between", value1, value2, "accountId");
      return this;
    }
  }
}
