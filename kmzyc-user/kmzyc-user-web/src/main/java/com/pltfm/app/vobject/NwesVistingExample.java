package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class NwesVistingExample {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * NWES_VISTING
   *
   * @ibatorgenerated Thu Aug 01 09:24:42 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * NWES_VISTING
   *
   * @ibatorgenerated Thu Aug 01 09:24:42 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table NWES_VISTING
   *
   * @ibatorgenerated Thu Aug 01 09:24:42 CST 2013
   */
  public NwesVistingExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table NWES_VISTING
   *
   * @ibatorgenerated Thu Aug 01 09:24:42 CST 2013
   */
  protected NwesVistingExample(NwesVistingExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table NWES_VISTING
   *
   * @ibatorgenerated Thu Aug 01 09:24:42 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table NWES_VISTING
   *
   * @ibatorgenerated Thu Aug 01 09:24:42 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table NWES_VISTING
   *
   * @ibatorgenerated Thu Aug 01 09:24:42 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table NWES_VISTING
   *
   * @ibatorgenerated Thu Aug 01 09:24:42 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table NWES_VISTING
   *
   * @ibatorgenerated Thu Aug 01 09:24:42 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table NWES_VISTING
   *
   * @ibatorgenerated Thu Aug 01 09:24:42 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table NWES_VISTING
   *
   * @ibatorgenerated Thu Aug 01 09:24:42 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * NWES_VISTING
   *
   * @ibatorgenerated Thu Aug 01 09:24:42 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()),
          new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andVistingIdIsNull() {
      addCriterion("VISTING_ID is null");
      return this;
    }

    public Criteria andVistingIdIsNotNull() {
      addCriterion("VISTING_ID is not null");
      return this;
    }

    public Criteria andVistingIdEqualTo(BigDecimal value) {
      addCriterion("VISTING_ID =", value, "vistingId");
      return this;
    }

    public Criteria andVistingIdNotEqualTo(BigDecimal value) {
      addCriterion("VISTING_ID <>", value, "vistingId");
      return this;
    }

    public Criteria andVistingIdGreaterThan(BigDecimal value) {
      addCriterion("VISTING_ID >", value, "vistingId");
      return this;
    }

    public Criteria andVistingIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("VISTING_ID >=", value, "vistingId");
      return this;
    }

    public Criteria andVistingIdLessThan(BigDecimal value) {
      addCriterion("VISTING_ID <", value, "vistingId");
      return this;
    }

    public Criteria andVistingIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("VISTING_ID <=", value, "vistingId");
      return this;
    }

    public Criteria andVistingIdIn(List values) {
      addCriterion("VISTING_ID in", values, "vistingId");
      return this;
    }

    public Criteria andVistingIdNotIn(List values) {
      addCriterion("VISTING_ID not in", values, "vistingId");
      return this;
    }

    public Criteria andVistingIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("VISTING_ID between", value1, value2, "vistingId");
      return this;
    }

    public Criteria andVistingIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("VISTING_ID not between", value1, value2, "vistingId");
      return this;
    }

    public Criteria andLoginIdIsNull() {
      addCriterion("LOGIN_ID is null");
      return this;
    }

    public Criteria andLoginIdIsNotNull() {
      addCriterion("LOGIN_ID is not null");
      return this;
    }

    public Criteria andLoginIdEqualTo(BigDecimal value) {
      addCriterion("LOGIN_ID =", value, "loginId");
      return this;
    }

    public Criteria andLoginIdNotEqualTo(BigDecimal value) {
      addCriterion("LOGIN_ID <>", value, "loginId");
      return this;
    }

    public Criteria andLoginIdGreaterThan(BigDecimal value) {
      addCriterion("LOGIN_ID >", value, "loginId");
      return this;
    }

    public Criteria andLoginIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("LOGIN_ID >=", value, "loginId");
      return this;
    }

    public Criteria andLoginIdLessThan(BigDecimal value) {
      addCriterion("LOGIN_ID <", value, "loginId");
      return this;
    }

    public Criteria andLoginIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("LOGIN_ID <=", value, "loginId");
      return this;
    }

    public Criteria andLoginIdIn(List values) {
      addCriterion("LOGIN_ID in", values, "loginId");
      return this;
    }

    public Criteria andLoginIdNotIn(List values) {
      addCriterion("LOGIN_ID not in", values, "loginId");
      return this;
    }

    public Criteria andLoginIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("LOGIN_ID between", value1, value2, "loginId");
      return this;
    }

    public Criteria andLoginIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("LOGIN_ID not between", value1, value2, "loginId");
      return this;
    }

    public Criteria andLoginNameIsNull() {
      addCriterion("LOGIN_NAME is null");
      return this;
    }

    public Criteria andLoginNameIsNotNull() {
      addCriterion("LOGIN_NAME is not null");
      return this;
    }

    public Criteria andLoginNameEqualTo(BigDecimal value) {
      addCriterion("LOGIN_NAME =", value, "loginName");
      return this;
    }

    public Criteria andLoginNameNotEqualTo(BigDecimal value) {
      addCriterion("LOGIN_NAME <>", value, "loginName");
      return this;
    }

    public Criteria andLoginNameGreaterThan(BigDecimal value) {
      addCriterion("LOGIN_NAME >", value, "loginName");
      return this;
    }

    public Criteria andLoginNameGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("LOGIN_NAME >=", value, "loginName");
      return this;
    }

    public Criteria andLoginNameLessThan(BigDecimal value) {
      addCriterion("LOGIN_NAME <", value, "loginName");
      return this;
    }

    public Criteria andLoginNameLessThanOrEqualTo(BigDecimal value) {
      addCriterion("LOGIN_NAME <=", value, "loginName");
      return this;
    }

    public Criteria andLoginNameIn(List values) {
      addCriterion("LOGIN_NAME in", values, "loginName");
      return this;
    }

    public Criteria andLoginNameNotIn(List values) {
      addCriterion("LOGIN_NAME not in", values, "loginName");
      return this;
    }

    public Criteria andLoginNameBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("LOGIN_NAME between", value1, value2, "loginName");
      return this;
    }

    public Criteria andLoginNameNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("LOGIN_NAME not between", value1, value2, "loginName");
      return this;
    }

    public Criteria andCustomerTypeIdIsNull() {
      addCriterion("CUSTOMER_TYPE_ID is null");
      return this;
    }

    public Criteria andCustomerTypeIdIsNotNull() {
      addCriterion("CUSTOMER_TYPE_ID is not null");
      return this;
    }

    public Criteria andCustomerTypeIdEqualTo(BigDecimal value) {
      addCriterion("CUSTOMER_TYPE_ID =", value, "customerTypeId");
      return this;
    }

    public Criteria andCustomerTypeIdNotEqualTo(BigDecimal value) {
      addCriterion("CUSTOMER_TYPE_ID <>", value, "customerTypeId");
      return this;
    }

    public Criteria andCustomerTypeIdGreaterThan(BigDecimal value) {
      addCriterion("CUSTOMER_TYPE_ID >", value, "customerTypeId");
      return this;
    }

    public Criteria andCustomerTypeIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("CUSTOMER_TYPE_ID >=", value, "customerTypeId");
      return this;
    }

    public Criteria andCustomerTypeIdLessThan(BigDecimal value) {
      addCriterion("CUSTOMER_TYPE_ID <", value, "customerTypeId");
      return this;
    }

    public Criteria andCustomerTypeIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("CUSTOMER_TYPE_ID <=", value, "customerTypeId");
      return this;
    }

    public Criteria andCustomerTypeIdIn(List values) {
      addCriterion("CUSTOMER_TYPE_ID in", values, "customerTypeId");
      return this;
    }

    public Criteria andCustomerTypeIdNotIn(List values) {
      addCriterion("CUSTOMER_TYPE_ID not in", values, "customerTypeId");
      return this;
    }

    public Criteria andCustomerTypeIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("CUSTOMER_TYPE_ID between", value1, value2, "customerTypeId");
      return this;
    }

    public Criteria andCustomerTypeIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("CUSTOMER_TYPE_ID not between", value1, value2, "customerTypeId");
      return this;
    }

    public Criteria andContentIsNull() {
      addCriterion("CONTENT is null");
      return this;
    }

    public Criteria andContentIsNotNull() {
      addCriterion("CONTENT is not null");
      return this;
    }

    public Criteria andContentEqualTo(String value) {
      addCriterion("CONTENT =", value, "content");
      return this;
    }

    public Criteria andContentNotEqualTo(String value) {
      addCriterion("CONTENT <>", value, "content");
      return this;
    }

    public Criteria andContentGreaterThan(String value) {
      addCriterion("CONTENT >", value, "content");
      return this;
    }

    public Criteria andContentGreaterThanOrEqualTo(String value) {
      addCriterion("CONTENT >=", value, "content");
      return this;
    }

    public Criteria andContentLessThan(String value) {
      addCriterion("CONTENT <", value, "content");
      return this;
    }

    public Criteria andContentLessThanOrEqualTo(String value) {
      addCriterion("CONTENT <=", value, "content");
      return this;
    }

    public Criteria andContentLike(String value) {
      addCriterion("CONTENT like", value, "content");
      return this;
    }

    public Criteria andContentNotLike(String value) {
      addCriterion("CONTENT not like", value, "content");
      return this;
    }

    public Criteria andContentIn(List values) {
      addCriterion("CONTENT in", values, "content");
      return this;
    }

    public Criteria andContentNotIn(List values) {
      addCriterion("CONTENT not in", values, "content");
      return this;
    }

    public Criteria andContentBetween(String value1, String value2) {
      addCriterion("CONTENT between", value1, value2, "content");
      return this;
    }

    public Criteria andContentNotBetween(String value1, String value2) {
      addCriterion("CONTENT not between", value1, value2, "content");
      return this;
    }

    public Criteria andVistingDateIsNull() {
      addCriterion("VISTING_DATE is null");
      return this;
    }

    public Criteria andVistingDateIsNotNull() {
      addCriterion("VISTING_DATE is not null");
      return this;
    }

    public Criteria andVistingDateEqualTo(Date value) {
      addCriterionForJDBCDate("VISTING_DATE =", value, "vistingDate");
      return this;
    }

    public Criteria andVistingDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("VISTING_DATE <>", value, "vistingDate");
      return this;
    }

    public Criteria andVistingDateGreaterThan(Date value) {
      addCriterionForJDBCDate("VISTING_DATE >", value, "vistingDate");
      return this;
    }

    public Criteria andVistingDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("VISTING_DATE >=", value, "vistingDate");
      return this;
    }

    public Criteria andVistingDateLessThan(Date value) {
      addCriterionForJDBCDate("VISTING_DATE <", value, "vistingDate");
      return this;
    }

    public Criteria andVistingDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("VISTING_DATE <=", value, "vistingDate");
      return this;
    }

    public Criteria andVistingDateIn(List values) {
      addCriterionForJDBCDate("VISTING_DATE in", values, "vistingDate");
      return this;
    }

    public Criteria andVistingDateNotIn(List values) {
      addCriterionForJDBCDate("VISTING_DATE not in", values, "vistingDate");
      return this;
    }

    public Criteria andVistingDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("VISTING_DATE between", value1, value2, "vistingDate");
      return this;
    }

    public Criteria andVistingDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("VISTING_DATE not between", value1, value2, "vistingDate");
      return this;
    }

    public Criteria andAdviceIsNull() {
      addCriterion("ADVICE is null");
      return this;
    }

    public Criteria andAdviceIsNotNull() {
      addCriterion("ADVICE is not null");
      return this;
    }

    public Criteria andAdviceEqualTo(String value) {
      addCriterion("ADVICE =", value, "advice");
      return this;
    }

    public Criteria andAdviceNotEqualTo(String value) {
      addCriterion("ADVICE <>", value, "advice");
      return this;
    }

    public Criteria andAdviceGreaterThan(String value) {
      addCriterion("ADVICE >", value, "advice");
      return this;
    }

    public Criteria andAdviceGreaterThanOrEqualTo(String value) {
      addCriterion("ADVICE >=", value, "advice");
      return this;
    }

    public Criteria andAdviceLessThan(String value) {
      addCriterion("ADVICE <", value, "advice");
      return this;
    }

    public Criteria andAdviceLessThanOrEqualTo(String value) {
      addCriterion("ADVICE <=", value, "advice");
      return this;
    }

    public Criteria andAdviceLike(String value) {
      addCriterion("ADVICE like", value, "advice");
      return this;
    }

    public Criteria andAdviceNotLike(String value) {
      addCriterion("ADVICE not like", value, "advice");
      return this;
    }

    public Criteria andAdviceIn(List values) {
      addCriterion("ADVICE in", values, "advice");
      return this;
    }

    public Criteria andAdviceNotIn(List values) {
      addCriterion("ADVICE not in", values, "advice");
      return this;
    }

    public Criteria andAdviceBetween(String value1, String value2) {
      addCriterion("ADVICE between", value1, value2, "advice");
      return this;
    }

    public Criteria andAdviceNotBetween(String value1, String value2) {
      addCriterion("ADVICE not between", value1, value2, "advice");
      return this;
    }

    public Criteria andCreatedIsNull() {
      addCriterion("CREATED is null");
      return this;
    }

    public Criteria andCreatedIsNotNull() {
      addCriterion("CREATED is not null");
      return this;
    }

    public Criteria andCreatedEqualTo(BigDecimal value) {
      addCriterion("CREATED =", value, "created");
      return this;
    }

    public Criteria andCreatedNotEqualTo(BigDecimal value) {
      addCriterion("CREATED <>", value, "created");
      return this;
    }

    public Criteria andCreatedGreaterThan(BigDecimal value) {
      addCriterion("CREATED >", value, "created");
      return this;
    }

    public Criteria andCreatedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("CREATED >=", value, "created");
      return this;
    }

    public Criteria andCreatedLessThan(BigDecimal value) {
      addCriterion("CREATED <", value, "created");
      return this;
    }

    public Criteria andCreatedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("CREATED <=", value, "created");
      return this;
    }

    public Criteria andCreatedIn(List values) {
      addCriterion("CREATED in", values, "created");
      return this;
    }

    public Criteria andCreatedNotIn(List values) {
      addCriterion("CREATED not in", values, "created");
      return this;
    }

    public Criteria andCreatedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("CREATED between", value1, value2, "created");
      return this;
    }

    public Criteria andCreatedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("CREATED not between", value1, value2, "created");
      return this;
    }

    public Criteria andCreateDateIsNull() {
      addCriterion("CREATE_DATE is null");
      return this;
    }

    public Criteria andCreateDateIsNotNull() {
      addCriterion("CREATE_DATE is not null");
      return this;
    }

    public Criteria andCreateDateEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
      return this;
    }

    public Criteria andCreateDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
      return this;
    }

    public Criteria andCreateDateGreaterThan(Date value) {
      addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
      return this;
    }

    public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
      return this;
    }

    public Criteria andCreateDateLessThan(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
      return this;
    }

    public Criteria andCreateDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
      return this;
    }

    public Criteria andCreateDateIn(List values) {
      addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
      return this;
    }

    public Criteria andCreateDateNotIn(List values) {
      addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
      return this;
    }

    public Criteria andCreateDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
      return this;
    }

    public Criteria andCreateDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
      return this;
    }

    public Criteria andModifiedIsNull() {
      addCriterion("MODIFIED is null");
      return this;
    }

    public Criteria andModifiedIsNotNull() {
      addCriterion("MODIFIED is not null");
      return this;
    }

    public Criteria andModifiedEqualTo(BigDecimal value) {
      addCriterion("MODIFIED =", value, "modified");
      return this;
    }

    public Criteria andModifiedNotEqualTo(BigDecimal value) {
      addCriterion("MODIFIED <>", value, "modified");
      return this;
    }

    public Criteria andModifiedGreaterThan(BigDecimal value) {
      addCriterion("MODIFIED >", value, "modified");
      return this;
    }

    public Criteria andModifiedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("MODIFIED >=", value, "modified");
      return this;
    }

    public Criteria andModifiedLessThan(BigDecimal value) {
      addCriterion("MODIFIED <", value, "modified");
      return this;
    }

    public Criteria andModifiedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("MODIFIED <=", value, "modified");
      return this;
    }

    public Criteria andModifiedIn(List values) {
      addCriterion("MODIFIED in", values, "modified");
      return this;
    }

    public Criteria andModifiedNotIn(List values) {
      addCriterion("MODIFIED not in", values, "modified");
      return this;
    }

    public Criteria andModifiedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("MODIFIED between", value1, value2, "modified");
      return this;
    }

    public Criteria andModifiedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("MODIFIED not between", value1, value2, "modified");
      return this;
    }

    public Criteria andModifyDateIsNull() {
      addCriterion("MODIFY_DATE is null");
      return this;
    }

    public Criteria andModifyDateIsNotNull() {
      addCriterion("MODIFY_DATE is not null");
      return this;
    }

    public Criteria andModifyDateEqualTo(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE =", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE <>", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateGreaterThan(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE >", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE >=", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateLessThan(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE <", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE <=", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateIn(List values) {
      addCriterionForJDBCDate("MODIFY_DATE in", values, "modifyDate");
      return this;
    }

    public Criteria andModifyDateNotIn(List values) {
      addCriterionForJDBCDate("MODIFY_DATE not in", values, "modifyDate");
      return this;
    }

    public Criteria andModifyDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("MODIFY_DATE between", value1, value2, "modifyDate");
      return this;
    }

    public Criteria andModifyDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("MODIFY_DATE not between", value1, value2, "modifyDate");
      return this;
    }
  }
}
