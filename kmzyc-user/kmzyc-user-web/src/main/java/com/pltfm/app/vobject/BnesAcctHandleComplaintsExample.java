package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class BnesAcctHandleComplaintsExample {
  /**
   * This field was generated by Abator for iBATIS. This field corresponds to the database table
   * BNES_ACCT_HANDLE_COMPLAINTS
   *
   * @abatorgenerated Wed Aug 07 16:31:30 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Abator for iBATIS. This field corresponds to the database table
   * BNES_ACCT_HANDLE_COMPLAINTS
   *
   * @abatorgenerated Wed Aug 07 16:31:30 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ACCT_HANDLE_COMPLAINTS
   *
   * @abatorgenerated Wed Aug 07 16:31:30 CST 2013
   */
  public BnesAcctHandleComplaintsExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ACCT_HANDLE_COMPLAINTS
   *
   * @abatorgenerated Wed Aug 07 16:31:30 CST 2013
   */
  protected BnesAcctHandleComplaintsExample(BnesAcctHandleComplaintsExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ACCT_HANDLE_COMPLAINTS
   *
   * @abatorgenerated Wed Aug 07 16:31:30 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ACCT_HANDLE_COMPLAINTS
   *
   * @abatorgenerated Wed Aug 07 16:31:30 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ACCT_HANDLE_COMPLAINTS
   *
   * @abatorgenerated Wed Aug 07 16:31:30 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ACCT_HANDLE_COMPLAINTS
   *
   * @abatorgenerated Wed Aug 07 16:31:30 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ACCT_HANDLE_COMPLAINTS
   *
   * @abatorgenerated Wed Aug 07 16:31:30 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ACCT_HANDLE_COMPLAINTS
   *
   * @abatorgenerated Wed Aug 07 16:31:30 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Abator for iBATIS. This method corresponds to the database table
   * BNES_ACCT_HANDLE_COMPLAINTS
   *
   * @abatorgenerated Wed Aug 07 16:31:30 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Abator for iBATIS. This class corresponds to the database table
   * BNES_ACCT_HANDLE_COMPLAINTS
   *
   * @abatorgenerated Wed Aug 07 16:31:30 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()),
          new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andHandleComplaintsIdIsNull() {
      addCriterion("HANDLE_COMPLAINTS_ID is null");
      return this;
    }

    public Criteria andHandleComplaintsIdIsNotNull() {
      addCriterion("HANDLE_COMPLAINTS_ID is not null");
      return this;
    }

    public Criteria andHandleComplaintsIdEqualTo(BigDecimal value) {
      addCriterion("HANDLE_COMPLAINTS_ID =", value, "handleComplaintsId");
      return this;
    }

    public Criteria andHandleComplaintsIdNotEqualTo(BigDecimal value) {
      addCriterion("HANDLE_COMPLAINTS_ID <>", value, "handleComplaintsId");
      return this;
    }

    public Criteria andHandleComplaintsIdGreaterThan(BigDecimal value) {
      addCriterion("HANDLE_COMPLAINTS_ID >", value, "handleComplaintsId");
      return this;
    }

    public Criteria andHandleComplaintsIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("HANDLE_COMPLAINTS_ID >=", value, "handleComplaintsId");
      return this;
    }

    public Criteria andHandleComplaintsIdLessThan(BigDecimal value) {
      addCriterion("HANDLE_COMPLAINTS_ID <", value, "handleComplaintsId");
      return this;
    }

    public Criteria andHandleComplaintsIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("HANDLE_COMPLAINTS_ID <=", value, "handleComplaintsId");
      return this;
    }

    public Criteria andHandleComplaintsIdIn(List values) {
      addCriterion("HANDLE_COMPLAINTS_ID in", values, "handleComplaintsId");
      return this;
    }

    public Criteria andHandleComplaintsIdNotIn(List values) {
      addCriterion("HANDLE_COMPLAINTS_ID not in", values, "handleComplaintsId");
      return this;
    }

    public Criteria andHandleComplaintsIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("HANDLE_COMPLAINTS_ID between", value1, value2, "handleComplaintsId");
      return this;
    }

    public Criteria andHandleComplaintsIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("HANDLE_COMPLAINTS_ID not between", value1, value2, "handleComplaintsId");
      return this;
    }

    public Criteria andAccountIdIsNull() {
      addCriterion("ACCOUNT_ID is null");
      return this;
    }

    public Criteria andAccountIdIsNotNull() {
      addCriterion("ACCOUNT_ID is not null");
      return this;
    }

    public Criteria andAccountIdEqualTo(BigDecimal value) {
      addCriterion("ACCOUNT_ID =", value, "accountId");
      return this;
    }

    public Criteria andAccountIdNotEqualTo(BigDecimal value) {
      addCriterion("ACCOUNT_ID <>", value, "accountId");
      return this;
    }

    public Criteria andAccountIdGreaterThan(BigDecimal value) {
      addCriterion("ACCOUNT_ID >", value, "accountId");
      return this;
    }

    public Criteria andAccountIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("ACCOUNT_ID >=", value, "accountId");
      return this;
    }

    public Criteria andAccountIdLessThan(BigDecimal value) {
      addCriterion("ACCOUNT_ID <", value, "accountId");
      return this;
    }

    public Criteria andAccountIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("ACCOUNT_ID <=", value, "accountId");
      return this;
    }

    public Criteria andAccountIdIn(List values) {
      addCriterion("ACCOUNT_ID in", values, "accountId");
      return this;
    }

    public Criteria andAccountIdNotIn(List values) {
      addCriterion("ACCOUNT_ID not in", values, "accountId");
      return this;
    }

    public Criteria andAccountIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("ACCOUNT_ID between", value1, value2, "accountId");
      return this;
    }

    public Criteria andAccountIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("ACCOUNT_ID not between", value1, value2, "accountId");
      return this;
    }

    public Criteria andDisposePersonIdIsNull() {
      addCriterion("DISPOSE_PERSON_ID is null");
      return this;
    }

    public Criteria andDisposePersonIdIsNotNull() {
      addCriterion("DISPOSE_PERSON_ID is not null");
      return this;
    }

    public Criteria andDisposePersonIdEqualTo(BigDecimal value) {
      addCriterion("DISPOSE_PERSON_ID =", value, "disposePersonId");
      return this;
    }

    public Criteria andDisposePersonIdNotEqualTo(BigDecimal value) {
      addCriterion("DISPOSE_PERSON_ID <>", value, "disposePersonId");
      return this;
    }

    public Criteria andDisposePersonIdGreaterThan(BigDecimal value) {
      addCriterion("DISPOSE_PERSON_ID >", value, "disposePersonId");
      return this;
    }

    public Criteria andDisposePersonIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("DISPOSE_PERSON_ID >=", value, "disposePersonId");
      return this;
    }

    public Criteria andDisposePersonIdLessThan(BigDecimal value) {
      addCriterion("DISPOSE_PERSON_ID <", value, "disposePersonId");
      return this;
    }

    public Criteria andDisposePersonIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("DISPOSE_PERSON_ID <=", value, "disposePersonId");
      return this;
    }

    public Criteria andDisposePersonIdIn(List values) {
      addCriterion("DISPOSE_PERSON_ID in", values, "disposePersonId");
      return this;
    }

    public Criteria andDisposePersonIdNotIn(List values) {
      addCriterion("DISPOSE_PERSON_ID not in", values, "disposePersonId");
      return this;
    }

    public Criteria andDisposePersonIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("DISPOSE_PERSON_ID between", value1, value2, "disposePersonId");
      return this;
    }

    public Criteria andDisposePersonIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("DISPOSE_PERSON_ID not between", value1, value2, "disposePersonId");
      return this;
    }

    public Criteria andAccountAppealIdIsNull() {
      addCriterion("ACCOUNT_APPEAL_ID is null");
      return this;
    }

    public Criteria andAccountAppealIdIsNotNull() {
      addCriterion("ACCOUNT_APPEAL_ID is not null");
      return this;
    }

    public Criteria andAccountAppealIdEqualTo(BigDecimal value) {
      addCriterion("ACCOUNT_APPEAL_ID =", value, "accountAppealId");
      return this;
    }

    public Criteria andAccountAppealIdNotEqualTo(BigDecimal value) {
      addCriterion("ACCOUNT_APPEAL_ID <>", value, "accountAppealId");
      return this;
    }

    public Criteria andAccountAppealIdGreaterThan(BigDecimal value) {
      addCriterion("ACCOUNT_APPEAL_ID >", value, "accountAppealId");
      return this;
    }

    public Criteria andAccountAppealIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("ACCOUNT_APPEAL_ID >=", value, "accountAppealId");
      return this;
    }

    public Criteria andAccountAppealIdLessThan(BigDecimal value) {
      addCriterion("ACCOUNT_APPEAL_ID <", value, "accountAppealId");
      return this;
    }

    public Criteria andAccountAppealIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("ACCOUNT_APPEAL_ID <=", value, "accountAppealId");
      return this;
    }

    public Criteria andAccountAppealIdIn(List values) {
      addCriterion("ACCOUNT_APPEAL_ID in", values, "accountAppealId");
      return this;
    }

    public Criteria andAccountAppealIdNotIn(List values) {
      addCriterion("ACCOUNT_APPEAL_ID not in", values, "accountAppealId");
      return this;
    }

    public Criteria andAccountAppealIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("ACCOUNT_APPEAL_ID between", value1, value2, "accountAppealId");
      return this;
    }

    public Criteria andAccountAppealIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("ACCOUNT_APPEAL_ID not between", value1, value2, "accountAppealId");
      return this;
    }

    public Criteria andAppealSuggestionIsNull() {
      addCriterion("APPEAL_SUGGESTION is null");
      return this;
    }

    public Criteria andAppealSuggestionIsNotNull() {
      addCriterion("APPEAL_SUGGESTION is not null");
      return this;
    }

    public Criteria andAppealSuggestionEqualTo(String value) {
      addCriterion("APPEAL_SUGGESTION =", value, "appealSuggestion");
      return this;
    }

    public Criteria andAppealSuggestionNotEqualTo(String value) {
      addCriterion("APPEAL_SUGGESTION <>", value, "appealSuggestion");
      return this;
    }

    public Criteria andAppealSuggestionGreaterThan(String value) {
      addCriterion("APPEAL_SUGGESTION >", value, "appealSuggestion");
      return this;
    }

    public Criteria andAppealSuggestionGreaterThanOrEqualTo(String value) {
      addCriterion("APPEAL_SUGGESTION >=", value, "appealSuggestion");
      return this;
    }

    public Criteria andAppealSuggestionLessThan(String value) {
      addCriterion("APPEAL_SUGGESTION <", value, "appealSuggestion");
      return this;
    }

    public Criteria andAppealSuggestionLessThanOrEqualTo(String value) {
      addCriterion("APPEAL_SUGGESTION <=", value, "appealSuggestion");
      return this;
    }

    public Criteria andAppealSuggestionLike(String value) {
      addCriterion("APPEAL_SUGGESTION like", value, "appealSuggestion");
      return this;
    }

    public Criteria andAppealSuggestionNotLike(String value) {
      addCriterion("APPEAL_SUGGESTION not like", value, "appealSuggestion");
      return this;
    }

    public Criteria andAppealSuggestionIn(List values) {
      addCriterion("APPEAL_SUGGESTION in", values, "appealSuggestion");
      return this;
    }

    public Criteria andAppealSuggestionNotIn(List values) {
      addCriterion("APPEAL_SUGGESTION not in", values, "appealSuggestion");
      return this;
    }

    public Criteria andAppealSuggestionBetween(String value1, String value2) {
      addCriterion("APPEAL_SUGGESTION between", value1, value2, "appealSuggestion");
      return this;
    }

    public Criteria andAppealSuggestionNotBetween(String value1, String value2) {
      addCriterion("APPEAL_SUGGESTION not between", value1, value2, "appealSuggestion");
      return this;
    }

    public Criteria andDisposeDateIsNull() {
      addCriterion("DISPOSE_DATE is null");
      return this;
    }

    public Criteria andDisposeDateIsNotNull() {
      addCriterion("DISPOSE_DATE is not null");
      return this;
    }

    public Criteria andDisposeDateEqualTo(Date value) {
      addCriterionForJDBCDate("DISPOSE_DATE =", value, "disposeDate");
      return this;
    }

    public Criteria andDisposeDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("DISPOSE_DATE <>", value, "disposeDate");
      return this;
    }

    public Criteria andDisposeDateGreaterThan(Date value) {
      addCriterionForJDBCDate("DISPOSE_DATE >", value, "disposeDate");
      return this;
    }

    public Criteria andDisposeDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("DISPOSE_DATE >=", value, "disposeDate");
      return this;
    }

    public Criteria andDisposeDateLessThan(Date value) {
      addCriterionForJDBCDate("DISPOSE_DATE <", value, "disposeDate");
      return this;
    }

    public Criteria andDisposeDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("DISPOSE_DATE <=", value, "disposeDate");
      return this;
    }

    public Criteria andDisposeDateIn(List values) {
      addCriterionForJDBCDate("DISPOSE_DATE in", values, "disposeDate");
      return this;
    }

    public Criteria andDisposeDateNotIn(List values) {
      addCriterionForJDBCDate("DISPOSE_DATE not in", values, "disposeDate");
      return this;
    }

    public Criteria andDisposeDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("DISPOSE_DATE between", value1, value2, "disposeDate");
      return this;
    }

    public Criteria andDisposeDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("DISPOSE_DATE not between", value1, value2, "disposeDate");
      return this;
    }

    public Criteria andCreateDateIsNull() {
      addCriterion("CREATE_DATE is null");
      return this;
    }

    public Criteria andCreateDateIsNotNull() {
      addCriterion("CREATE_DATE is not null");
      return this;
    }

    public Criteria andCreateDateEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
      return this;
    }

    public Criteria andCreateDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
      return this;
    }

    public Criteria andCreateDateGreaterThan(Date value) {
      addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
      return this;
    }

    public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
      return this;
    }

    public Criteria andCreateDateLessThan(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
      return this;
    }

    public Criteria andCreateDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
      return this;
    }

    public Criteria andCreateDateIn(List values) {
      addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
      return this;
    }

    public Criteria andCreateDateNotIn(List values) {
      addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
      return this;
    }

    public Criteria andCreateDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
      return this;
    }

    public Criteria andCreateDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
      return this;
    }

    public Criteria andCreatedIdIsNull() {
      addCriterion("CREATED_ID is null");
      return this;
    }

    public Criteria andCreatedIdIsNotNull() {
      addCriterion("CREATED_ID is not null");
      return this;
    }

    public Criteria andCreatedIdEqualTo(BigDecimal value) {
      addCriterion("CREATED_ID =", value, "createdId");
      return this;
    }

    public Criteria andCreatedIdNotEqualTo(BigDecimal value) {
      addCriterion("CREATED_ID <>", value, "createdId");
      return this;
    }

    public Criteria andCreatedIdGreaterThan(BigDecimal value) {
      addCriterion("CREATED_ID >", value, "createdId");
      return this;
    }

    public Criteria andCreatedIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("CREATED_ID >=", value, "createdId");
      return this;
    }

    public Criteria andCreatedIdLessThan(BigDecimal value) {
      addCriterion("CREATED_ID <", value, "createdId");
      return this;
    }

    public Criteria andCreatedIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("CREATED_ID <=", value, "createdId");
      return this;
    }

    public Criteria andCreatedIdIn(List values) {
      addCriterion("CREATED_ID in", values, "createdId");
      return this;
    }

    public Criteria andCreatedIdNotIn(List values) {
      addCriterion("CREATED_ID not in", values, "createdId");
      return this;
    }

    public Criteria andCreatedIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("CREATED_ID between", value1, value2, "createdId");
      return this;
    }

    public Criteria andCreatedIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("CREATED_ID not between", value1, value2, "createdId");
      return this;
    }

    public Criteria andModifyDateIsNull() {
      addCriterion("MODIFY_DATE is null");
      return this;
    }

    public Criteria andModifyDateIsNotNull() {
      addCriterion("MODIFY_DATE is not null");
      return this;
    }

    public Criteria andModifyDateEqualTo(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE =", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE <>", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateGreaterThan(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE >", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE >=", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateLessThan(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE <", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("MODIFY_DATE <=", value, "modifyDate");
      return this;
    }

    public Criteria andModifyDateIn(List values) {
      addCriterionForJDBCDate("MODIFY_DATE in", values, "modifyDate");
      return this;
    }

    public Criteria andModifyDateNotIn(List values) {
      addCriterionForJDBCDate("MODIFY_DATE not in", values, "modifyDate");
      return this;
    }

    public Criteria andModifyDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("MODIFY_DATE between", value1, value2, "modifyDate");
      return this;
    }

    public Criteria andModifyDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("MODIFY_DATE not between", value1, value2, "modifyDate");
      return this;
    }

    public Criteria andModifieIdIsNull() {
      addCriterion("MODIFIE_ID is null");
      return this;
    }

    public Criteria andModifieIdIsNotNull() {
      addCriterion("MODIFIE_ID is not null");
      return this;
    }

    public Criteria andModifieIdEqualTo(BigDecimal value) {
      addCriterion("MODIFIE_ID =", value, "modifieId");
      return this;
    }

    public Criteria andModifieIdNotEqualTo(BigDecimal value) {
      addCriterion("MODIFIE_ID <>", value, "modifieId");
      return this;
    }

    public Criteria andModifieIdGreaterThan(BigDecimal value) {
      addCriterion("MODIFIE_ID >", value, "modifieId");
      return this;
    }

    public Criteria andModifieIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("MODIFIE_ID >=", value, "modifieId");
      return this;
    }

    public Criteria andModifieIdLessThan(BigDecimal value) {
      addCriterion("MODIFIE_ID <", value, "modifieId");
      return this;
    }

    public Criteria andModifieIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("MODIFIE_ID <=", value, "modifieId");
      return this;
    }

    public Criteria andModifieIdIn(List values) {
      addCriterion("MODIFIE_ID in", values, "modifieId");
      return this;
    }

    public Criteria andModifieIdNotIn(List values) {
      addCriterion("MODIFIE_ID not in", values, "modifieId");
      return this;
    }

    public Criteria andModifieIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("MODIFIE_ID between", value1, value2, "modifieId");
      return this;
    }

    public Criteria andModifieIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("MODIFIE_ID not between", value1, value2, "modifieId");
      return this;
    }
  }
}
