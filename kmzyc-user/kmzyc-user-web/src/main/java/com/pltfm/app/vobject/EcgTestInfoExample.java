package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class EcgTestInfoExample {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * ECG_TEST_INFO
   *
   * @ibatorgenerated Fri Jul 12 08:56:54 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * ECG_TEST_INFO
   *
   * @ibatorgenerated Fri Jul 12 08:56:54 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ECG_TEST_INFO
   *
   * @ibatorgenerated Fri Jul 12 08:56:54 CST 2013
   */
  public EcgTestInfoExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ECG_TEST_INFO
   *
   * @ibatorgenerated Fri Jul 12 08:56:54 CST 2013
   */
  protected EcgTestInfoExample(EcgTestInfoExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ECG_TEST_INFO
   *
   * @ibatorgenerated Fri Jul 12 08:56:54 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ECG_TEST_INFO
   *
   * @ibatorgenerated Fri Jul 12 08:56:54 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ECG_TEST_INFO
   *
   * @ibatorgenerated Fri Jul 12 08:56:54 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ECG_TEST_INFO
   *
   * @ibatorgenerated Fri Jul 12 08:56:54 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ECG_TEST_INFO
   *
   * @ibatorgenerated Fri Jul 12 08:56:54 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ECG_TEST_INFO
   *
   * @ibatorgenerated Fri Jul 12 08:56:54 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table ECG_TEST_INFO
   *
   * @ibatorgenerated Fri Jul 12 08:56:54 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * ECG_TEST_INFO
   *
   * @ibatorgenerated Fri Jul 12 08:56:54 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()),
          new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andNEcgTestIdIsNull() {
      addCriterion("N_ECG_TEST_ID is null");
      return this;
    }

    public Criteria andNEcgTestIdIsNotNull() {
      addCriterion("N_ECG_TEST_ID is not null");
      return this;
    }

    public Criteria andNEcgTestIdEqualTo(BigDecimal value) {
      addCriterion("N_ECG_TEST_ID =", value, "nEcgTestId");
      return this;
    }

    public Criteria andNEcgTestIdNotEqualTo(BigDecimal value) {
      addCriterion("N_ECG_TEST_ID <>", value, "nEcgTestId");
      return this;
    }

    public Criteria andNEcgTestIdGreaterThan(BigDecimal value) {
      addCriterion("N_ECG_TEST_ID >", value, "nEcgTestId");
      return this;
    }

    public Criteria andNEcgTestIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_ECG_TEST_ID >=", value, "nEcgTestId");
      return this;
    }

    public Criteria andNEcgTestIdLessThan(BigDecimal value) {
      addCriterion("N_ECG_TEST_ID <", value, "nEcgTestId");
      return this;
    }

    public Criteria andNEcgTestIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_ECG_TEST_ID <=", value, "nEcgTestId");
      return this;
    }

    public Criteria andNEcgTestIdIn(List values) {
      addCriterion("N_ECG_TEST_ID in", values, "nEcgTestId");
      return this;
    }

    public Criteria andNEcgTestIdNotIn(List values) {
      addCriterion("N_ECG_TEST_ID not in", values, "nEcgTestId");
      return this;
    }

    public Criteria andNEcgTestIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_ECG_TEST_ID between", value1, value2, "nEcgTestId");
      return this;
    }

    public Criteria andNEcgTestIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_ECG_TEST_ID not between", value1, value2, "nEcgTestId");
      return this;
    }

    public Criteria andNHealthYgenericIdIsNull() {
      addCriterion("N_HEALTH_YGENERIC_ID is null");
      return this;
    }

    public Criteria andNHealthYgenericIdIsNotNull() {
      addCriterion("N_HEALTH_YGENERIC_ID is not null");
      return this;
    }

    public Criteria andNHealthYgenericIdEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID =", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <>", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdGreaterThan(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID >", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID >=", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdLessThan(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <=", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdIn(List values) {
      addCriterion("N_HEALTH_YGENERIC_ID in", values, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotIn(List values) {
      addCriterion("N_HEALTH_YGENERIC_ID not in", values, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_HEALTH_YGENERIC_ID between", value1, value2, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_HEALTH_YGENERIC_ID not between", value1, value2, "nHealthYgenericId");
      return this;
    }

    public Criteria andDAcquisitionTimeIsNull() {
      addCriterion("D_ACQUISITION_TIME is null");
      return this;
    }

    public Criteria andDAcquisitionTimeIsNotNull() {
      addCriterion("D_ACQUISITION_TIME is not null");
      return this;
    }

    public Criteria andDAcquisitionTimeEqualTo(Date value) {
      addCriterionForJDBCDate("D_ACQUISITION_TIME =", value, "dAcquisitionTime");
      return this;
    }

    public Criteria andDAcquisitionTimeNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_ACQUISITION_TIME <>", value, "dAcquisitionTime");
      return this;
    }

    public Criteria andDAcquisitionTimeGreaterThan(Date value) {
      addCriterionForJDBCDate("D_ACQUISITION_TIME >", value, "dAcquisitionTime");
      return this;
    }

    public Criteria andDAcquisitionTimeGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_ACQUISITION_TIME >=", value, "dAcquisitionTime");
      return this;
    }

    public Criteria andDAcquisitionTimeLessThan(Date value) {
      addCriterionForJDBCDate("D_ACQUISITION_TIME <", value, "dAcquisitionTime");
      return this;
    }

    public Criteria andDAcquisitionTimeLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_ACQUISITION_TIME <=", value, "dAcquisitionTime");
      return this;
    }

    public Criteria andDAcquisitionTimeIn(List values) {
      addCriterionForJDBCDate("D_ACQUISITION_TIME in", values, "dAcquisitionTime");
      return this;
    }

    public Criteria andDAcquisitionTimeNotIn(List values) {
      addCriterionForJDBCDate("D_ACQUISITION_TIME not in", values, "dAcquisitionTime");
      return this;
    }

    public Criteria andDAcquisitionTimeBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_ACQUISITION_TIME between", value1, value2, "dAcquisitionTime");
      return this;
    }

    public Criteria andDAcquisitionTimeNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_ACQUISITION_TIME not between", value1, value2, "dAcquisitionTime");
      return this;
    }

    public Criteria andNHeartRateIsNull() {
      addCriterion("N_HEART_RATE is null");
      return this;
    }

    public Criteria andNHeartRateIsNotNull() {
      addCriterion("N_HEART_RATE is not null");
      return this;
    }

    public Criteria andNHeartRateEqualTo(BigDecimal value) {
      addCriterion("N_HEART_RATE =", value, "nHeartRate");
      return this;
    }

    public Criteria andNHeartRateNotEqualTo(BigDecimal value) {
      addCriterion("N_HEART_RATE <>", value, "nHeartRate");
      return this;
    }

    public Criteria andNHeartRateGreaterThan(BigDecimal value) {
      addCriterion("N_HEART_RATE >", value, "nHeartRate");
      return this;
    }

    public Criteria andNHeartRateGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_HEART_RATE >=", value, "nHeartRate");
      return this;
    }

    public Criteria andNHeartRateLessThan(BigDecimal value) {
      addCriterion("N_HEART_RATE <", value, "nHeartRate");
      return this;
    }

    public Criteria andNHeartRateLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_HEART_RATE <=", value, "nHeartRate");
      return this;
    }

    public Criteria andNHeartRateIn(List values) {
      addCriterion("N_HEART_RATE in", values, "nHeartRate");
      return this;
    }

    public Criteria andNHeartRateNotIn(List values) {
      addCriterion("N_HEART_RATE not in", values, "nHeartRate");
      return this;
    }

    public Criteria andNHeartRateBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_HEART_RATE between", value1, value2, "nHeartRate");
      return this;
    }

    public Criteria andNHeartRateNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_HEART_RATE not between", value1, value2, "nHeartRate");
      return this;
    }

    public Criteria andDetectionResultIsNull() {
      addCriterion("DETECTION_RESULT is null");
      return this;
    }

    public Criteria andDetectionResultIsNotNull() {
      addCriterion("DETECTION_RESULT is not null");
      return this;
    }

    public Criteria andDetectionResultEqualTo(String value) {
      addCriterion("DETECTION_RESULT =", value, "detectionResult");
      return this;
    }

    public Criteria andDetectionResultNotEqualTo(String value) {
      addCriterion("DETECTION_RESULT <>", value, "detectionResult");
      return this;
    }

    public Criteria andDetectionResultGreaterThan(String value) {
      addCriterion("DETECTION_RESULT >", value, "detectionResult");
      return this;
    }

    public Criteria andDetectionResultGreaterThanOrEqualTo(String value) {
      addCriterion("DETECTION_RESULT >=", value, "detectionResult");
      return this;
    }

    public Criteria andDetectionResultLessThan(String value) {
      addCriterion("DETECTION_RESULT <", value, "detectionResult");
      return this;
    }

    public Criteria andDetectionResultLessThanOrEqualTo(String value) {
      addCriterion("DETECTION_RESULT <=", value, "detectionResult");
      return this;
    }

    public Criteria andDetectionResultLike(String value) {
      addCriterion("DETECTION_RESULT like", value, "detectionResult");
      return this;
    }

    public Criteria andDetectionResultNotLike(String value) {
      addCriterion("DETECTION_RESULT not like", value, "detectionResult");
      return this;
    }

    public Criteria andDetectionResultIn(List values) {
      addCriterion("DETECTION_RESULT in", values, "detectionResult");
      return this;
    }

    public Criteria andDetectionResultNotIn(List values) {
      addCriterion("DETECTION_RESULT not in", values, "detectionResult");
      return this;
    }

    public Criteria andDetectionResultBetween(String value1, String value2) {
      addCriterion("DETECTION_RESULT between", value1, value2, "detectionResult");
      return this;
    }

    public Criteria andDetectionResultNotBetween(String value1, String value2) {
      addCriterion("DETECTION_RESULT not between", value1, value2, "detectionResult");
      return this;
    }

    public Criteria andDCreateDateIsNull() {
      addCriterion("D_CREATE_DATE is null");
      return this;
    }

    public Criteria andDCreateDateIsNotNull() {
      addCriterion("D_CREATE_DATE is not null");
      return this;
    }

    public Criteria andDCreateDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE =", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <>", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >=", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateLessThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <=", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE in", values, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateNotIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE not in", values, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE between", value1, value2, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE not between", value1, value2, "dCreateDate");
      return this;
    }

    public Criteria andNCreatedIsNull() {
      addCriterion("N_CREATED is null");
      return this;
    }

    public Criteria andNCreatedIsNotNull() {
      addCriterion("N_CREATED is not null");
      return this;
    }

    public Criteria andNCreatedEqualTo(BigDecimal value) {
      addCriterion("N_CREATED =", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedNotEqualTo(BigDecimal value) {
      addCriterion("N_CREATED <>", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedGreaterThan(BigDecimal value) {
      addCriterion("N_CREATED >", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CREATED >=", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedLessThan(BigDecimal value) {
      addCriterion("N_CREATED <", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CREATED <=", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedIn(List values) {
      addCriterion("N_CREATED in", values, "nCreated");
      return this;
    }

    public Criteria andNCreatedNotIn(List values) {
      addCriterion("N_CREATED not in", values, "nCreated");
      return this;
    }

    public Criteria andNCreatedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CREATED between", value1, value2, "nCreated");
      return this;
    }

    public Criteria andNCreatedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CREATED not between", value1, value2, "nCreated");
      return this;
    }

    public Criteria andDModifyDateIsNull() {
      addCriterion("D_MODIFY_DATE is null");
      return this;
    }

    public Criteria andDModifyDateIsNotNull() {
      addCriterion("D_MODIFY_DATE is not null");
      return this;
    }

    public Criteria andDModifyDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE =", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <>", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >=", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateLessThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <=", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE in", values, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateNotIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE not in", values, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE between", value1, value2, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE not between", value1, value2, "dModifyDate");
      return this;
    }

    public Criteria andNModifiedIsNull() {
      addCriterion("N_MODIFIED is null");
      return this;
    }

    public Criteria andNModifiedIsNotNull() {
      addCriterion("N_MODIFIED is not null");
      return this;
    }

    public Criteria andNModifiedEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED =", value, "nModified");
      return this;
    }

    public Criteria andNModifiedNotEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED <>", value, "nModified");
      return this;
    }

    public Criteria andNModifiedGreaterThan(BigDecimal value) {
      addCriterion("N_MODIFIED >", value, "nModified");
      return this;
    }

    public Criteria andNModifiedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED >=", value, "nModified");
      return this;
    }

    public Criteria andNModifiedLessThan(BigDecimal value) {
      addCriterion("N_MODIFIED <", value, "nModified");
      return this;
    }

    public Criteria andNModifiedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED <=", value, "nModified");
      return this;
    }

    public Criteria andNModifiedIn(List values) {
      addCriterion("N_MODIFIED in", values, "nModified");
      return this;
    }

    public Criteria andNModifiedNotIn(List values) {
      addCriterion("N_MODIFIED not in", values, "nModified");
      return this;
    }

    public Criteria andNModifiedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_MODIFIED between", value1, value2, "nModified");
      return this;
    }

    public Criteria andNModifiedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_MODIFIED not between", value1, value2, "nModified");
      return this;
    }
  }
}
