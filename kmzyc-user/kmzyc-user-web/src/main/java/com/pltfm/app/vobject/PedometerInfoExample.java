package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class PedometerInfoExample {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * PEDOMETER_INFO
   *
   * @ibatorgenerated Thu Jul 11 16:44:53 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * PEDOMETER_INFO
   *
   * @ibatorgenerated Thu Jul 11 16:44:53 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PEDOMETER_INFO
   *
   * @ibatorgenerated Thu Jul 11 16:44:53 CST 2013
   */
  public PedometerInfoExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PEDOMETER_INFO
   *
   * @ibatorgenerated Thu Jul 11 16:44:53 CST 2013
   */
  protected PedometerInfoExample(PedometerInfoExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PEDOMETER_INFO
   *
   * @ibatorgenerated Thu Jul 11 16:44:53 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PEDOMETER_INFO
   *
   * @ibatorgenerated Thu Jul 11 16:44:53 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PEDOMETER_INFO
   *
   * @ibatorgenerated Thu Jul 11 16:44:53 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PEDOMETER_INFO
   *
   * @ibatorgenerated Thu Jul 11 16:44:53 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PEDOMETER_INFO
   *
   * @ibatorgenerated Thu Jul 11 16:44:53 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PEDOMETER_INFO
   *
   * @ibatorgenerated Thu Jul 11 16:44:53 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table PEDOMETER_INFO
   *
   * @ibatorgenerated Thu Jul 11 16:44:53 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * PEDOMETER_INFO
   *
   * @ibatorgenerated Thu Jul 11 16:44:53 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()),
          new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andNPedometerIdIsNull() {
      addCriterion("N_PEDOMETER_ID is null");
      return this;
    }

    public Criteria andNPedometerIdIsNotNull() {
      addCriterion("N_PEDOMETER_ID is not null");
      return this;
    }

    public Criteria andNPedometerIdEqualTo(BigDecimal value) {
      addCriterion("N_PEDOMETER_ID =", value, "nPedometerId");
      return this;
    }

    public Criteria andNPedometerIdNotEqualTo(BigDecimal value) {
      addCriterion("N_PEDOMETER_ID <>", value, "nPedometerId");
      return this;
    }

    public Criteria andNPedometerIdGreaterThan(BigDecimal value) {
      addCriterion("N_PEDOMETER_ID >", value, "nPedometerId");
      return this;
    }

    public Criteria andNPedometerIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_PEDOMETER_ID >=", value, "nPedometerId");
      return this;
    }

    public Criteria andNPedometerIdLessThan(BigDecimal value) {
      addCriterion("N_PEDOMETER_ID <", value, "nPedometerId");
      return this;
    }

    public Criteria andNPedometerIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_PEDOMETER_ID <=", value, "nPedometerId");
      return this;
    }

    public Criteria andNPedometerIdIn(List values) {
      addCriterion("N_PEDOMETER_ID in", values, "nPedometerId");
      return this;
    }

    public Criteria andNPedometerIdNotIn(List values) {
      addCriterion("N_PEDOMETER_ID not in", values, "nPedometerId");
      return this;
    }

    public Criteria andNPedometerIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_PEDOMETER_ID between", value1, value2, "nPedometerId");
      return this;
    }

    public Criteria andNPedometerIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_PEDOMETER_ID not between", value1, value2, "nPedometerId");
      return this;
    }

    public Criteria andNHealthYgenericIdIsNull() {
      addCriterion("N_HEALTH_YGENERIC_ID is null");
      return this;
    }

    public Criteria andNHealthYgenericIdIsNotNull() {
      addCriterion("N_HEALTH_YGENERIC_ID is not null");
      return this;
    }

    public Criteria andNHealthYgenericIdEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID =", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <>", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdGreaterThan(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID >", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID >=", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdLessThan(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <=", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdIn(List values) {
      addCriterion("N_HEALTH_YGENERIC_ID in", values, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotIn(List values) {
      addCriterion("N_HEALTH_YGENERIC_ID not in", values, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_HEALTH_YGENERIC_ID between", value1, value2, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_HEALTH_YGENERIC_ID not between", value1, value2, "nHealthYgenericId");
      return this;
    }

    public Criteria andDDateIsNull() {
      addCriterion("D_DATE is null");
      return this;
    }

    public Criteria andDDateIsNotNull() {
      addCriterion("D_DATE is not null");
      return this;
    }

    public Criteria andDDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_DATE =", value, "dDate");
      return this;
    }

    public Criteria andDDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_DATE <>", value, "dDate");
      return this;
    }

    public Criteria andDDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_DATE >", value, "dDate");
      return this;
    }

    public Criteria andDDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_DATE >=", value, "dDate");
      return this;
    }

    public Criteria andDDateLessThan(Date value) {
      addCriterionForJDBCDate("D_DATE <", value, "dDate");
      return this;
    }

    public Criteria andDDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_DATE <=", value, "dDate");
      return this;
    }

    public Criteria andDDateIn(List values) {
      addCriterionForJDBCDate("D_DATE in", values, "dDate");
      return this;
    }

    public Criteria andDDateNotIn(List values) {
      addCriterionForJDBCDate("D_DATE not in", values, "dDate");
      return this;
    }

    public Criteria andDDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_DATE between", value1, value2, "dDate");
      return this;
    }

    public Criteria andDDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_DATE not between", value1, value2, "dDate");
      return this;
    }

    public Criteria andDStartTimeIsNull() {
      addCriterion("D_START_TIME is null");
      return this;
    }

    public Criteria andDStartTimeIsNotNull() {
      addCriterion("D_START_TIME is not null");
      return this;
    }

    public Criteria andDStartTimeEqualTo(Date value) {
      addCriterionForJDBCDate("D_START_TIME =", value, "dStartTime");
      return this;
    }

    public Criteria andDStartTimeNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_START_TIME <>", value, "dStartTime");
      return this;
    }

    public Criteria andDStartTimeGreaterThan(Date value) {
      addCriterionForJDBCDate("D_START_TIME >", value, "dStartTime");
      return this;
    }

    public Criteria andDStartTimeGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_START_TIME >=", value, "dStartTime");
      return this;
    }

    public Criteria andDStartTimeLessThan(Date value) {
      addCriterionForJDBCDate("D_START_TIME <", value, "dStartTime");
      return this;
    }

    public Criteria andDStartTimeLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_START_TIME <=", value, "dStartTime");
      return this;
    }

    public Criteria andDStartTimeIn(List values) {
      addCriterionForJDBCDate("D_START_TIME in", values, "dStartTime");
      return this;
    }

    public Criteria andDStartTimeNotIn(List values) {
      addCriterionForJDBCDate("D_START_TIME not in", values, "dStartTime");
      return this;
    }

    public Criteria andDStartTimeBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_START_TIME between", value1, value2, "dStartTime");
      return this;
    }

    public Criteria andDStartTimeNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_START_TIME not between", value1, value2, "dStartTime");
      return this;
    }

    public Criteria andDTerminalTimeIsNull() {
      addCriterion("D_TERMINAL_TIME is null");
      return this;
    }

    public Criteria andDTerminalTimeIsNotNull() {
      addCriterion("D_TERMINAL_TIME is not null");
      return this;
    }

    public Criteria andDTerminalTimeEqualTo(Date value) {
      addCriterionForJDBCDate("D_TERMINAL_TIME =", value, "dTerminalTime");
      return this;
    }

    public Criteria andDTerminalTimeNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_TERMINAL_TIME <>", value, "dTerminalTime");
      return this;
    }

    public Criteria andDTerminalTimeGreaterThan(Date value) {
      addCriterionForJDBCDate("D_TERMINAL_TIME >", value, "dTerminalTime");
      return this;
    }

    public Criteria andDTerminalTimeGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_TERMINAL_TIME >=", value, "dTerminalTime");
      return this;
    }

    public Criteria andDTerminalTimeLessThan(Date value) {
      addCriterionForJDBCDate("D_TERMINAL_TIME <", value, "dTerminalTime");
      return this;
    }

    public Criteria andDTerminalTimeLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_TERMINAL_TIME <=", value, "dTerminalTime");
      return this;
    }

    public Criteria andDTerminalTimeIn(List values) {
      addCriterionForJDBCDate("D_TERMINAL_TIME in", values, "dTerminalTime");
      return this;
    }

    public Criteria andDTerminalTimeNotIn(List values) {
      addCriterionForJDBCDate("D_TERMINAL_TIME not in", values, "dTerminalTime");
      return this;
    }

    public Criteria andDTerminalTimeBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_TERMINAL_TIME between", value1, value2, "dTerminalTime");
      return this;
    }

    public Criteria andDTerminalTimeNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_TERMINAL_TIME not between", value1, value2, "dTerminalTime");
      return this;
    }

    public Criteria andNWeightIsNull() {
      addCriterion("N_WEIGHT is null");
      return this;
    }

    public Criteria andNWeightIsNotNull() {
      addCriterion("N_WEIGHT is not null");
      return this;
    }

    public Criteria andNWeightEqualTo(BigDecimal value) {
      addCriterion("N_WEIGHT =", value, "nWeight");
      return this;
    }

    public Criteria andNWeightNotEqualTo(BigDecimal value) {
      addCriterion("N_WEIGHT <>", value, "nWeight");
      return this;
    }

    public Criteria andNWeightGreaterThan(BigDecimal value) {
      addCriterion("N_WEIGHT >", value, "nWeight");
      return this;
    }

    public Criteria andNWeightGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_WEIGHT >=", value, "nWeight");
      return this;
    }

    public Criteria andNWeightLessThan(BigDecimal value) {
      addCriterion("N_WEIGHT <", value, "nWeight");
      return this;
    }

    public Criteria andNWeightLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_WEIGHT <=", value, "nWeight");
      return this;
    }

    public Criteria andNWeightIn(List values) {
      addCriterion("N_WEIGHT in", values, "nWeight");
      return this;
    }

    public Criteria andNWeightNotIn(List values) {
      addCriterion("N_WEIGHT not in", values, "nWeight");
      return this;
    }

    public Criteria andNWeightBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_WEIGHT between", value1, value2, "nWeight");
      return this;
    }

    public Criteria andNWeightNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_WEIGHT not between", value1, value2, "nWeight");
      return this;
    }

    public Criteria andNStrideIsNull() {
      addCriterion("N_STRIDE is null");
      return this;
    }

    public Criteria andNStrideIsNotNull() {
      addCriterion("N_STRIDE is not null");
      return this;
    }

    public Criteria andNStrideEqualTo(BigDecimal value) {
      addCriterion("N_STRIDE =", value, "nStride");
      return this;
    }

    public Criteria andNStrideNotEqualTo(BigDecimal value) {
      addCriterion("N_STRIDE <>", value, "nStride");
      return this;
    }

    public Criteria andNStrideGreaterThan(BigDecimal value) {
      addCriterion("N_STRIDE >", value, "nStride");
      return this;
    }

    public Criteria andNStrideGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_STRIDE >=", value, "nStride");
      return this;
    }

    public Criteria andNStrideLessThan(BigDecimal value) {
      addCriterion("N_STRIDE <", value, "nStride");
      return this;
    }

    public Criteria andNStrideLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_STRIDE <=", value, "nStride");
      return this;
    }

    public Criteria andNStrideIn(List values) {
      addCriterion("N_STRIDE in", values, "nStride");
      return this;
    }

    public Criteria andNStrideNotIn(List values) {
      addCriterion("N_STRIDE not in", values, "nStride");
      return this;
    }

    public Criteria andNStrideBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_STRIDE between", value1, value2, "nStride");
      return this;
    }

    public Criteria andNStrideNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_STRIDE not between", value1, value2, "nStride");
      return this;
    }

    public Criteria andNConsumeCalorieIsNull() {
      addCriterion("N_CONSUME_CALORIE is null");
      return this;
    }

    public Criteria andNConsumeCalorieIsNotNull() {
      addCriterion("N_CONSUME_CALORIE is not null");
      return this;
    }

    public Criteria andNConsumeCalorieEqualTo(BigDecimal value) {
      addCriterion("N_CONSUME_CALORIE =", value, "nConsumeCalorie");
      return this;
    }

    public Criteria andNConsumeCalorieNotEqualTo(BigDecimal value) {
      addCriterion("N_CONSUME_CALORIE <>", value, "nConsumeCalorie");
      return this;
    }

    public Criteria andNConsumeCalorieGreaterThan(BigDecimal value) {
      addCriterion("N_CONSUME_CALORIE >", value, "nConsumeCalorie");
      return this;
    }

    public Criteria andNConsumeCalorieGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CONSUME_CALORIE >=", value, "nConsumeCalorie");
      return this;
    }

    public Criteria andNConsumeCalorieLessThan(BigDecimal value) {
      addCriterion("N_CONSUME_CALORIE <", value, "nConsumeCalorie");
      return this;
    }

    public Criteria andNConsumeCalorieLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CONSUME_CALORIE <=", value, "nConsumeCalorie");
      return this;
    }

    public Criteria andNConsumeCalorieIn(List values) {
      addCriterion("N_CONSUME_CALORIE in", values, "nConsumeCalorie");
      return this;
    }

    public Criteria andNConsumeCalorieNotIn(List values) {
      addCriterion("N_CONSUME_CALORIE not in", values, "nConsumeCalorie");
      return this;
    }

    public Criteria andNConsumeCalorieBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CONSUME_CALORIE between", value1, value2, "nConsumeCalorie");
      return this;
    }

    public Criteria andNConsumeCalorieNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CONSUME_CALORIE not between", value1, value2, "nConsumeCalorie");
      return this;
    }

    public Criteria andNTotalStepNumberIsNull() {
      addCriterion("N_TOTAL_STEP_NUMBER is null");
      return this;
    }

    public Criteria andNTotalStepNumberIsNotNull() {
      addCriterion("N_TOTAL_STEP_NUMBER is not null");
      return this;
    }

    public Criteria andNTotalStepNumberEqualTo(BigDecimal value) {
      addCriterion("N_TOTAL_STEP_NUMBER =", value, "nTotalStepNumber");
      return this;
    }

    public Criteria andNTotalStepNumberNotEqualTo(BigDecimal value) {
      addCriterion("N_TOTAL_STEP_NUMBER <>", value, "nTotalStepNumber");
      return this;
    }

    public Criteria andNTotalStepNumberGreaterThan(BigDecimal value) {
      addCriterion("N_TOTAL_STEP_NUMBER >", value, "nTotalStepNumber");
      return this;
    }

    public Criteria andNTotalStepNumberGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_TOTAL_STEP_NUMBER >=", value, "nTotalStepNumber");
      return this;
    }

    public Criteria andNTotalStepNumberLessThan(BigDecimal value) {
      addCriterion("N_TOTAL_STEP_NUMBER <", value, "nTotalStepNumber");
      return this;
    }

    public Criteria andNTotalStepNumberLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_TOTAL_STEP_NUMBER <=", value, "nTotalStepNumber");
      return this;
    }

    public Criteria andNTotalStepNumberIn(List values) {
      addCriterion("N_TOTAL_STEP_NUMBER in", values, "nTotalStepNumber");
      return this;
    }

    public Criteria andNTotalStepNumberNotIn(List values) {
      addCriterion("N_TOTAL_STEP_NUMBER not in", values, "nTotalStepNumber");
      return this;
    }

    public Criteria andNTotalStepNumberBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_TOTAL_STEP_NUMBER between", value1, value2, "nTotalStepNumber");
      return this;
    }

    public Criteria andNTotalStepNumberNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_TOTAL_STEP_NUMBER not between", value1, value2, "nTotalStepNumber");
      return this;
    }

    public Criteria andDTotalTimeIsNull() {
      addCriterion("D_TOTAL_TIME is null");
      return this;
    }

    public Criteria andDTotalTimeIsNotNull() {
      addCriterion("D_TOTAL_TIME is not null");
      return this;
    }

    public Criteria andDTotalTimeEqualTo(Date value) {
      addCriterionForJDBCDate("D_TOTAL_TIME =", value, "dTotalTime");
      return this;
    }

    public Criteria andDTotalTimeNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_TOTAL_TIME <>", value, "dTotalTime");
      return this;
    }

    public Criteria andDTotalTimeGreaterThan(Date value) {
      addCriterionForJDBCDate("D_TOTAL_TIME >", value, "dTotalTime");
      return this;
    }

    public Criteria andDTotalTimeGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_TOTAL_TIME >=", value, "dTotalTime");
      return this;
    }

    public Criteria andDTotalTimeLessThan(Date value) {
      addCriterionForJDBCDate("D_TOTAL_TIME <", value, "dTotalTime");
      return this;
    }

    public Criteria andDTotalTimeLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_TOTAL_TIME <=", value, "dTotalTime");
      return this;
    }

    public Criteria andDTotalTimeIn(List values) {
      addCriterionForJDBCDate("D_TOTAL_TIME in", values, "dTotalTime");
      return this;
    }

    public Criteria andDTotalTimeNotIn(List values) {
      addCriterionForJDBCDate("D_TOTAL_TIME not in", values, "dTotalTime");
      return this;
    }

    public Criteria andDTotalTimeBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_TOTAL_TIME between", value1, value2, "dTotalTime");
      return this;
    }

    public Criteria andDTotalTimeNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_TOTAL_TIME not between", value1, value2, "dTotalTime");
      return this;
    }

    public Criteria andd_CreateDateIsNull() {
      addCriterion("D_CREATE_DATE is null");
      return this;
    }

    public Criteria andd_CreateDateIsNotNull() {
      addCriterion("D_CREATE_DATE is not null");
      return this;
    }

    public Criteria andd_CreateDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE =", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <>", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >=", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateLessThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <=", value, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE in", values, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateNotIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE not in", values, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE between", value1, value2, "d_CreateDate");
      return this;
    }

    public Criteria andd_CreateDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE not between", value1, value2, "d_CreateDate");
      return this;
    }

    public Criteria andn_CreatedIsNull() {
      addCriterion("N_CREATED is null");
      return this;
    }

    public Criteria andn_CreatedIsNotNull() {
      addCriterion("N_CREATED is not null");
      return this;
    }

    public Criteria andn_CreatedEqualTo(BigDecimal value) {
      addCriterion("N_CREATED =", value, "n_Created");
      return this;
    }

    public Criteria andn_CreatedNotEqualTo(BigDecimal value) {
      addCriterion("N_CREATED <>", value, "n_Created");
      return this;
    }

    public Criteria andn_CreatedGreaterThan(BigDecimal value) {
      addCriterion("N_CREATED >", value, "n_Created");
      return this;
    }

    public Criteria andn_CreatedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CREATED >=", value, "n_Created");
      return this;
    }

    public Criteria andn_CreatedLessThan(BigDecimal value) {
      addCriterion("N_CREATED <", value, "n_Created");
      return this;
    }

    public Criteria andn_CreatedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CREATED <=", value, "n_Created");
      return this;
    }

    public Criteria andn_CreatedIn(List values) {
      addCriterion("N_CREATED in", values, "n_Created");
      return this;
    }

    public Criteria andn_CreatedNotIn(List values) {
      addCriterion("N_CREATED not in", values, "n_Created");
      return this;
    }

    public Criteria andn_CreatedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CREATED between", value1, value2, "n_Created");
      return this;
    }

    public Criteria andn_CreatedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CREATED not between", value1, value2, "n_Created");
      return this;
    }

    public Criteria andd_ModifyDateIsNull() {
      addCriterion("D_MODIFY_DATE is null");
      return this;
    }

    public Criteria andd_ModifyDateIsNotNull() {
      addCriterion("D_MODIFY_DATE is not null");
      return this;
    }

    public Criteria andd_ModifyDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE =", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <>", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >=", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateLessThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <=", value, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE in", values, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateNotIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE not in", values, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE between", value1, value2, "d_ModifyDate");
      return this;
    }

    public Criteria andd_ModifyDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE not between", value1, value2, "d_ModifyDate");
      return this;
    }

    public Criteria andn_ModifiedIsNull() {
      addCriterion("N_MODIFIED is null");
      return this;
    }

    public Criteria andn_ModifiedIsNotNull() {
      addCriterion("N_MODIFIED is not null");
      return this;
    }

    public Criteria andn_ModifiedEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED =", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedNotEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED <>", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedGreaterThan(BigDecimal value) {
      addCriterion("N_MODIFIED >", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED >=", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedLessThan(BigDecimal value) {
      addCriterion("N_MODIFIED <", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED <=", value, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedIn(List values) {
      addCriterion("N_MODIFIED in", values, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedNotIn(List values) {
      addCriterion("N_MODIFIED not in", values, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_MODIFIED between", value1, value2, "n_Modified");
      return this;
    }

    public Criteria andn_ModifiedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_MODIFIED not between", value1, value2, "n_Modified");
      return this;
    }
  }
}
