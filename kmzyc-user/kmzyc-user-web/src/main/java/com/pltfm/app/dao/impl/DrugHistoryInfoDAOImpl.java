package com.pltfm.app.dao.impl;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.pltfm.app.dao.DrugHistoryInfoDAO;
import com.pltfm.app.vobject.DrugHistoryInfo;
import com.pltfm.app.vobject.DrugHistoryInfoExample;

public class DrugHistoryInfoDAOImpl implements DrugHistoryInfoDAO {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  private SqlMapClient sqlMapClient;



  public SqlMapClient getSqlMapClient() {
    return sqlMapClient;
  }

  public void setSqlMapClient(SqlMapClient sqlMapClient) {
    this.sqlMapClient = sqlMapClient;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  public int countByExample(DrugHistoryInfoExample example) throws SQLException {
    Integer count = (Integer) sqlMapClient
        .queryForObject("DRUG_HISTORY_INFO.ibatorgenerated_countByExample", example);
    return count.intValue();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  public int deleteByExample(DrugHistoryInfoExample example) throws SQLException {
    int rows = sqlMapClient.delete("DRUG_HISTORY_INFO.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  public int deleteByPrimaryKey(Integer nDrugHistoryId) throws SQLException {
    DrugHistoryInfo key = new DrugHistoryInfo();
    key.setnDrugHistoryId(nDrugHistoryId);
    int rows = sqlMapClient.delete("DRUG_HISTORY_INFO.ibatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  public void insert(DrugHistoryInfo record) throws SQLException {
    sqlMapClient.insert("DRUG_HISTORY_INFO.ibatorgenerated_insert", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  public void insertSelective(DrugHistoryInfo record) throws SQLException {
    sqlMapClient.insert("DRUG_HISTORY_INFO.ibatorgenerated_insertSelective", record);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  public List selectByExample(DrugHistoryInfoExample example) throws SQLException {
    List list =
        sqlMapClient.queryForList("DRUG_HISTORY_INFO.ibatorgenerated_selectByExample", example);
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  public DrugHistoryInfo selectByPrimaryKey(Integer nDrugHistoryId) throws SQLException {
    DrugHistoryInfo key = new DrugHistoryInfo();
    key.setnDrugHistoryId(nDrugHistoryId);
    DrugHistoryInfo record = (DrugHistoryInfo) sqlMapClient
        .queryForObject("DRUG_HISTORY_INFO.ibatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  public int updateByExampleSelective(DrugHistoryInfo record, DrugHistoryInfoExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows =
        sqlMapClient.update("DRUG_HISTORY_INFO.ibatorgenerated_updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  public int updateByExample(DrugHistoryInfo record, DrugHistoryInfoExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("DRUG_HISTORY_INFO.ibatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  public int updateByPrimaryKeySelective(DrugHistoryInfo record) throws SQLException {
    int rows = sqlMapClient.update("DRUG_HISTORY_INFO.ibatorgenerated_updateByPrimaryKeySelective",
        record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  public int updateByPrimaryKey(DrugHistoryInfo record) throws SQLException {
    int rows = sqlMapClient.update("DRUG_HISTORY_INFO.ibatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * DRUG_HISTORY_INFO
   *
   * @ibatorgenerated Fri Jul 12 09:37:37 CST 2013
   */
  private static class UpdateByExampleParms extends DrugHistoryInfoExample {
    private Object record;

    public UpdateByExampleParms(Object record, DrugHistoryInfoExample example) {
      super(example);
      this.record = record;
    }

    public Object getRecord() {
      return record;
    }
  }
}
