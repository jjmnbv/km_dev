package com.pltfm.app.vobject;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class OxygenMeasureInfoExample {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * OXYGEN_MEASURE_INFO
   *
   * @ibatorgenerated Thu Jul 11 17:23:36 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * OXYGEN_MEASURE_INFO
   *
   * @ibatorgenerated Thu Jul 11 17:23:36 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table OXYGEN_MEASURE_INFO
   *
   * @ibatorgenerated Thu Jul 11 17:23:36 CST 2013
   */
  public OxygenMeasureInfoExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table OXYGEN_MEASURE_INFO
   *
   * @ibatorgenerated Thu Jul 11 17:23:36 CST 2013
   */
  protected OxygenMeasureInfoExample(OxygenMeasureInfoExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table OXYGEN_MEASURE_INFO
   *
   * @ibatorgenerated Thu Jul 11 17:23:36 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table OXYGEN_MEASURE_INFO
   *
   * @ibatorgenerated Thu Jul 11 17:23:36 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table OXYGEN_MEASURE_INFO
   *
   * @ibatorgenerated Thu Jul 11 17:23:36 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table OXYGEN_MEASURE_INFO
   *
   * @ibatorgenerated Thu Jul 11 17:23:36 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table OXYGEN_MEASURE_INFO
   *
   * @ibatorgenerated Thu Jul 11 17:23:36 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table OXYGEN_MEASURE_INFO
   *
   * @ibatorgenerated Thu Jul 11 17:23:36 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table OXYGEN_MEASURE_INFO
   *
   * @ibatorgenerated Thu Jul 11 17:23:36 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * OXYGEN_MEASURE_INFO
   *
   * @ibatorgenerated Thu Jul 11 17:23:36 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()),
          new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andNOxygenMeasureIdIsNull() {
      addCriterion("N_OXYGEN_MEASURE_ID is null");
      return this;
    }

    public Criteria andNOxygenMeasureIdIsNotNull() {
      addCriterion("N_OXYGEN_MEASURE_ID is not null");
      return this;
    }

    public Criteria andNOxygenMeasureIdEqualTo(BigDecimal value) {
      addCriterion("N_OXYGEN_MEASURE_ID =", value, "nOxygenMeasureId");
      return this;
    }

    public Criteria andNOxygenMeasureIdNotEqualTo(BigDecimal value) {
      addCriterion("N_OXYGEN_MEASURE_ID <>", value, "nOxygenMeasureId");
      return this;
    }

    public Criteria andNOxygenMeasureIdGreaterThan(BigDecimal value) {
      addCriterion("N_OXYGEN_MEASURE_ID >", value, "nOxygenMeasureId");
      return this;
    }

    public Criteria andNOxygenMeasureIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_OXYGEN_MEASURE_ID >=", value, "nOxygenMeasureId");
      return this;
    }

    public Criteria andNOxygenMeasureIdLessThan(BigDecimal value) {
      addCriterion("N_OXYGEN_MEASURE_ID <", value, "nOxygenMeasureId");
      return this;
    }

    public Criteria andNOxygenMeasureIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_OXYGEN_MEASURE_ID <=", value, "nOxygenMeasureId");
      return this;
    }

    public Criteria andNOxygenMeasureIdIn(List values) {
      addCriterion("N_OXYGEN_MEASURE_ID in", values, "nOxygenMeasureId");
      return this;
    }

    public Criteria andNOxygenMeasureIdNotIn(List values) {
      addCriterion("N_OXYGEN_MEASURE_ID not in", values, "nOxygenMeasureId");
      return this;
    }

    public Criteria andNOxygenMeasureIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_OXYGEN_MEASURE_ID between", value1, value2, "nOxygenMeasureId");
      return this;
    }

    public Criteria andNOxygenMeasureIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_OXYGEN_MEASURE_ID not between", value1, value2, "nOxygenMeasureId");
      return this;
    }

    public Criteria andNHealthYgenericIdIsNull() {
      addCriterion("N_HEALTH_YGENERIC_ID is null");
      return this;
    }

    public Criteria andNHealthYgenericIdIsNotNull() {
      addCriterion("N_HEALTH_YGENERIC_ID is not null");
      return this;
    }

    public Criteria andNHealthYgenericIdEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID =", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <>", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdGreaterThan(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID >", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID >=", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdLessThan(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_HEALTH_YGENERIC_ID <=", value, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdIn(List values) {
      addCriterion("N_HEALTH_YGENERIC_ID in", values, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotIn(List values) {
      addCriterion("N_HEALTH_YGENERIC_ID not in", values, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_HEALTH_YGENERIC_ID between", value1, value2, "nHealthYgenericId");
      return this;
    }

    public Criteria andNHealthYgenericIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_HEALTH_YGENERIC_ID not between", value1, value2, "nHealthYgenericId");
      return this;
    }

    public Criteria andDCollectionDateIsNull() {
      addCriterion("D_COLLECTION_DATE is null");
      return this;
    }

    public Criteria andDCollectionDateIsNotNull() {
      addCriterion("D_COLLECTION_DATE is not null");
      return this;
    }

    public Criteria andDCollectionDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_COLLECTION_DATE =", value, "dCollectionDate");
      return this;
    }

    public Criteria andDCollectionDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_COLLECTION_DATE <>", value, "dCollectionDate");
      return this;
    }

    public Criteria andDCollectionDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_COLLECTION_DATE >", value, "dCollectionDate");
      return this;
    }

    public Criteria andDCollectionDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_COLLECTION_DATE >=", value, "dCollectionDate");
      return this;
    }

    public Criteria andDCollectionDateLessThan(Date value) {
      addCriterionForJDBCDate("D_COLLECTION_DATE <", value, "dCollectionDate");
      return this;
    }

    public Criteria andDCollectionDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_COLLECTION_DATE <=", value, "dCollectionDate");
      return this;
    }

    public Criteria andDCollectionDateIn(List values) {
      addCriterionForJDBCDate("D_COLLECTION_DATE in", values, "dCollectionDate");
      return this;
    }

    public Criteria andDCollectionDateNotIn(List values) {
      addCriterionForJDBCDate("D_COLLECTION_DATE not in", values, "dCollectionDate");
      return this;
    }

    public Criteria andDCollectionDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_COLLECTION_DATE between", value1, value2, "dCollectionDate");
      return this;
    }

    public Criteria andDCollectionDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_COLLECTION_DATE not between", value1, value2, "dCollectionDate");
      return this;
    }

    public Criteria andNOxygenIsNull() {
      addCriterion("N_OXYGEN is null");
      return this;
    }

    public Criteria andNOxygenIsNotNull() {
      addCriterion("N_OXYGEN is not null");
      return this;
    }

    public Criteria andNOxygenEqualTo(BigDecimal value) {
      addCriterion("N_OXYGEN =", value, "nOxygen");
      return this;
    }

    public Criteria andNOxygenNotEqualTo(BigDecimal value) {
      addCriterion("N_OXYGEN <>", value, "nOxygen");
      return this;
    }

    public Criteria andNOxygenGreaterThan(BigDecimal value) {
      addCriterion("N_OXYGEN >", value, "nOxygen");
      return this;
    }

    public Criteria andNOxygenGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_OXYGEN >=", value, "nOxygen");
      return this;
    }

    public Criteria andNOxygenLessThan(BigDecimal value) {
      addCriterion("N_OXYGEN <", value, "nOxygen");
      return this;
    }

    public Criteria andNOxygenLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_OXYGEN <=", value, "nOxygen");
      return this;
    }

    public Criteria andNOxygenIn(List values) {
      addCriterion("N_OXYGEN in", values, "nOxygen");
      return this;
    }

    public Criteria andNOxygenNotIn(List values) {
      addCriterion("N_OXYGEN not in", values, "nOxygen");
      return this;
    }

    public Criteria andNOxygenBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_OXYGEN between", value1, value2, "nOxygen");
      return this;
    }

    public Criteria andNOxygenNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_OXYGEN not between", value1, value2, "nOxygen");
      return this;
    }

    public Criteria andNPulseRateIsNull() {
      addCriterion("N_PULSE_RATE is null");
      return this;
    }

    public Criteria andNPulseRateIsNotNull() {
      addCriterion("N_PULSE_RATE is not null");
      return this;
    }

    public Criteria andNPulseRateEqualTo(BigDecimal value) {
      addCriterion("N_PULSE_RATE =", value, "nPulseRate");
      return this;
    }

    public Criteria andNPulseRateNotEqualTo(BigDecimal value) {
      addCriterion("N_PULSE_RATE <>", value, "nPulseRate");
      return this;
    }

    public Criteria andNPulseRateGreaterThan(BigDecimal value) {
      addCriterion("N_PULSE_RATE >", value, "nPulseRate");
      return this;
    }

    public Criteria andNPulseRateGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_PULSE_RATE >=", value, "nPulseRate");
      return this;
    }

    public Criteria andNPulseRateLessThan(BigDecimal value) {
      addCriterion("N_PULSE_RATE <", value, "nPulseRate");
      return this;
    }

    public Criteria andNPulseRateLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_PULSE_RATE <=", value, "nPulseRate");
      return this;
    }

    public Criteria andNPulseRateIn(List values) {
      addCriterion("N_PULSE_RATE in", values, "nPulseRate");
      return this;
    }

    public Criteria andNPulseRateNotIn(List values) {
      addCriterion("N_PULSE_RATE not in", values, "nPulseRate");
      return this;
    }

    public Criteria andNPulseRateBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_PULSE_RATE between", value1, value2, "nPulseRate");
      return this;
    }

    public Criteria andNPulseRateNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_PULSE_RATE not between", value1, value2, "nPulseRate");
      return this;
    }

    public Criteria andNBulkIsNull() {
      addCriterion("N_BULK is null");
      return this;
    }

    public Criteria andNBulkIsNotNull() {
      addCriterion("N_BULK is not null");
      return this;
    }

    public Criteria andNBulkEqualTo(BigDecimal value) {
      addCriterion("N_BULK =", value, "nBulk");
      return this;
    }

    public Criteria andNBulkNotEqualTo(BigDecimal value) {
      addCriterion("N_BULK <>", value, "nBulk");
      return this;
    }

    public Criteria andNBulkGreaterThan(BigDecimal value) {
      addCriterion("N_BULK >", value, "nBulk");
      return this;
    }

    public Criteria andNBulkGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_BULK >=", value, "nBulk");
      return this;
    }

    public Criteria andNBulkLessThan(BigDecimal value) {
      addCriterion("N_BULK <", value, "nBulk");
      return this;
    }

    public Criteria andNBulkLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_BULK <=", value, "nBulk");
      return this;
    }

    public Criteria andNBulkIn(List values) {
      addCriterion("N_BULK in", values, "nBulk");
      return this;
    }

    public Criteria andNBulkNotIn(List values) {
      addCriterion("N_BULK not in", values, "nBulk");
      return this;
    }

    public Criteria andNBulkBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_BULK between", value1, value2, "nBulk");
      return this;
    }

    public Criteria andNBulkNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_BULK not between", value1, value2, "nBulk");
      return this;
    }

    public Criteria andNBarGraphIsNull() {
      addCriterion("N_BAR_GRAPH is null");
      return this;
    }

    public Criteria andNBarGraphIsNotNull() {
      addCriterion("N_BAR_GRAPH is not null");
      return this;
    }

    public Criteria andNBarGraphEqualTo(BigDecimal value) {
      addCriterion("N_BAR_GRAPH =", value, "nBarGraph");
      return this;
    }

    public Criteria andNBarGraphNotEqualTo(BigDecimal value) {
      addCriterion("N_BAR_GRAPH <>", value, "nBarGraph");
      return this;
    }

    public Criteria andNBarGraphGreaterThan(BigDecimal value) {
      addCriterion("N_BAR_GRAPH >", value, "nBarGraph");
      return this;
    }

    public Criteria andNBarGraphGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_BAR_GRAPH >=", value, "nBarGraph");
      return this;
    }

    public Criteria andNBarGraphLessThan(BigDecimal value) {
      addCriterion("N_BAR_GRAPH <", value, "nBarGraph");
      return this;
    }

    public Criteria andNBarGraphLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_BAR_GRAPH <=", value, "nBarGraph");
      return this;
    }

    public Criteria andNBarGraphIn(List values) {
      addCriterion("N_BAR_GRAPH in", values, "nBarGraph");
      return this;
    }

    public Criteria andNBarGraphNotIn(List values) {
      addCriterion("N_BAR_GRAPH not in", values, "nBarGraph");
      return this;
    }

    public Criteria andNBarGraphBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_BAR_GRAPH between", value1, value2, "nBarGraph");
      return this;
    }

    public Criteria andNBarGraphNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_BAR_GRAPH not between", value1, value2, "nBarGraph");
      return this;
    }

    public Criteria andDCreateDateIsNull() {
      addCriterion("D_CREATE_DATE is null");
      return this;
    }

    public Criteria andDCreateDateIsNotNull() {
      addCriterion("D_CREATE_DATE is not null");
      return this;
    }

    public Criteria andDCreateDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE =", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <>", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE >=", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateLessThan(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_CREATE_DATE <=", value, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE in", values, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateNotIn(List values) {
      addCriterionForJDBCDate("D_CREATE_DATE not in", values, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE between", value1, value2, "dCreateDate");
      return this;
    }

    public Criteria andDCreateDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_CREATE_DATE not between", value1, value2, "dCreateDate");
      return this;
    }

    public Criteria andNCreatedIsNull() {
      addCriterion("N_CREATED is null");
      return this;
    }

    public Criteria andNCreatedIsNotNull() {
      addCriterion("N_CREATED is not null");
      return this;
    }

    public Criteria andNCreatedEqualTo(BigDecimal value) {
      addCriterion("N_CREATED =", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedNotEqualTo(BigDecimal value) {
      addCriterion("N_CREATED <>", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedGreaterThan(BigDecimal value) {
      addCriterion("N_CREATED >", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CREATED >=", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedLessThan(BigDecimal value) {
      addCriterion("N_CREATED <", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_CREATED <=", value, "nCreated");
      return this;
    }

    public Criteria andNCreatedIn(List values) {
      addCriterion("N_CREATED in", values, "nCreated");
      return this;
    }

    public Criteria andNCreatedNotIn(List values) {
      addCriterion("N_CREATED not in", values, "nCreated");
      return this;
    }

    public Criteria andNCreatedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CREATED between", value1, value2, "nCreated");
      return this;
    }

    public Criteria andNCreatedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_CREATED not between", value1, value2, "nCreated");
      return this;
    }

    public Criteria andDModifyDateIsNull() {
      addCriterion("D_MODIFY_DATE is null");
      return this;
    }

    public Criteria andDModifyDateIsNotNull() {
      addCriterion("D_MODIFY_DATE is not null");
      return this;
    }

    public Criteria andDModifyDateEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE =", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <>", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateGreaterThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE >=", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateLessThan(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("D_MODIFY_DATE <=", value, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE in", values, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateNotIn(List values) {
      addCriterionForJDBCDate("D_MODIFY_DATE not in", values, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE between", value1, value2, "dModifyDate");
      return this;
    }

    public Criteria andDModifyDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("D_MODIFY_DATE not between", value1, value2, "dModifyDate");
      return this;
    }

    public Criteria andNModifiedIsNull() {
      addCriterion("N_MODIFIED is null");
      return this;
    }

    public Criteria andNModifiedIsNotNull() {
      addCriterion("N_MODIFIED is not null");
      return this;
    }

    public Criteria andNModifiedEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED =", value, "nModified");
      return this;
    }

    public Criteria andNModifiedNotEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED <>", value, "nModified");
      return this;
    }

    public Criteria andNModifiedGreaterThan(BigDecimal value) {
      addCriterion("N_MODIFIED >", value, "nModified");
      return this;
    }

    public Criteria andNModifiedGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED >=", value, "nModified");
      return this;
    }

    public Criteria andNModifiedLessThan(BigDecimal value) {
      addCriterion("N_MODIFIED <", value, "nModified");
      return this;
    }

    public Criteria andNModifiedLessThanOrEqualTo(BigDecimal value) {
      addCriterion("N_MODIFIED <=", value, "nModified");
      return this;
    }

    public Criteria andNModifiedIn(List values) {
      addCriterion("N_MODIFIED in", values, "nModified");
      return this;
    }

    public Criteria andNModifiedNotIn(List values) {
      addCriterion("N_MODIFIED not in", values, "nModified");
      return this;
    }

    public Criteria andNModifiedBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_MODIFIED between", value1, value2, "nModified");
      return this;
    }

    public Criteria andNModifiedNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("N_MODIFIED not between", value1, value2, "nModified");
      return this;
    }
  }
}
