<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://java.sun.com/xml/ns/javaee"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
		 id="WebApp_ID" version="3.0">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:config/spring-context-application.xml
		</param-value>
	</context-param>
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	<servlet>
		<description></description>
		<display-name>InitialServlet</display-name>
		<servlet-name>initialServlet</servlet-name>
		<servlet-class>
			com.pltfm.app.servlet.DelegatingServletProxy
		</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>initialServlet</servlet-name>
		<url-pattern>/InitialServlet</url-pattern>
	</servlet-mapping>
<!-- 	<servlet> 
		<servlet-name>hessian</servlet-name> 
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>  
            <param-name>contextConfigLocation</param-name>  
            <param-value>classpath:config/spring-hessian.xml</param-value>  
        </init-param> 
	</servlet>  
    <servlet-mapping>   
    <servlet-name>hessian</servlet-name>   
    	<url-pattern>/hessian/*</url-pattern>   
	</servlet-mapping>	 -->
	<!-- 
	<servlet>
		<servlet-name>initservlet</servlet-name>
		<servlet-class>com.pltfm.app.servlet.InitServlet</servlet-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>config/spring-context-application.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	 -->
	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
	</filter>
	
	<filter>
		<filter-name>encode</filter-name>
		<filter-class>
			com.pltfm.sys.servlet.EncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>checkLogin</filter-name>
		<filter-class>
			com.pltfm.sys.servlet.CheckLoginFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>checkLogin</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encode</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>sitemesh</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- ======================== 单点登录开始 ======================== -->
	<!-- 该过滤器用于实现单点登出功能，可选配置。 -->
	<filter>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping> 
	     <filter-name>CAS Single Sign Out Filter</filter-name> 
	     <url-pattern>*.jsp</url-pattern> 
	</filter-mapping>

	<!-- 该过滤器负责用户的认证工作，必须启用它 -->
	<filter>
		<filter-name>CASFilter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>http://kmcas.kmb2b.com/login</param-value>
			<!--这里的server是服务端的IP-->
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			  <param-value>http://kmorder.kmb2b.com</param-value>
			 <!--  <param-value>http://localhost:8080</param-value> -->
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CASFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping> 
	     <filter-name>CASFilter</filter-name> 
	     <url-pattern>*.jsp</url-pattern> 
	     
	</filter-mapping>


	<!-- 该过滤器负责对Ticket的校验工作，必须启用它 -->
	<filter>
		<filter-name>CAS Validation Filter</filter-name>
		<filter-class>
			org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>http://kmcas.kmb2b.com</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			  <param-value>http://kmorder.kmb2b.com</param-value> 
			<!--  <param-value>http://localhost:8080</param-value> -->
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping> 
	     <filter-name>CAS Validation Filter</filter-name> 
	     <url-pattern>*.jsp</url-pattern> 
	</filter-mapping>

	<!--
		该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。
		比如AssertionHolder.getAssertion().getPrincipal().getName()。
	-->
	<filter>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping> 
	     <filter-name>CAS Assertion Thread Local Filter</filter-name> 
	     <url-pattern>*.jsp</url-pattern> 
	</filter-mapping>
		<!-- ======================== 单点登录结束 ======================== -->
		
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>/static/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
		</init-param>
		<init-param>
			<param-name>principalSessionName</param-name>
			<param-value>username</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>DruidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- druid监控 -->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/jsp/public/error_pageNotFund.jsp</location>
	</error-page>
	<jsp-config>
		<taglib>
			<taglib-uri>sitemesh-page</taglib-uri>
			<taglib-location>/WEB-INF/sitemesh-page.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>sitemesh-decorator</taglib-uri>
			<taglib-location>/WEB-INF/sitemesh-decorator.tld</taglib-location>
		</taglib>
	</jsp-config>
	<servlet>
		<description></description>
		<display-name>DelegatingServletProxy</display-name>
		<servlet-name>DelegatingServletProxy</servlet-name>
		<servlet-class>com.pltfm.app.servlet.DelegatingServletProxy</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DelegatingServletProxy</servlet-name>
		<url-pattern>/DelegatingServletProxy</url-pattern>
	</servlet-mapping>
</web-app>
