package com.pltfm.app.dao.impl;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.apache.commons.collections.CollectionUtils;
import org.springframework.stereotype.Repository;

import com.pltfm.app.dao.BaseDAO;
import com.pltfm.app.dao.DiffAdjDAO;
import com.pltfm.app.entities.DiffAdj;
import com.pltfm.app.entities.DiffAdjCriteria;
import com.pltfm.app.entities.DiffAdjExample;

@SuppressWarnings("unchecked")
@Repository("diffAdjDAO")
public class DiffAdjDAOImpl extends BaseDAO implements DiffAdjDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table DIFF_ADJ
     * 
     * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
     */
    public int countByExample(DiffAdjExample example) throws SQLException {
        Integer count =
                (Integer) sqlMapClient.queryForObject("DIFF_ADJ.ibatorgenerated_countByExample",
                        example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table DIFF_ADJ
     * 
     * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
     */
    public int deleteByExample(DiffAdjExample example) throws SQLException {
        int rows = sqlMapClient.delete("DIFF_ADJ.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table DIFF_ADJ
     * 
     * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
     */
    public int deleteByPrimaryKey(Long diffAdjId) throws SQLException {
        DiffAdj key = new DiffAdj();
        key.setDiffAdjId(diffAdjId);
        int rows = sqlMapClient.delete("DIFF_ADJ.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table DIFF_ADJ
     * 
     * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
     */
    public Long insert(DiffAdj record) throws SQLException {
        Object newKey = sqlMapClient.insert("DIFF_ADJ.ibatorgenerated_insert", record);
        return (Long) newKey;
    }

    @Override
    public Long insertForPresell(Map map) throws SQLException {
        Object newKey = sqlMapClient.insert("DIFF_ADJ.ibatorgenerated_insertForPresell", map);
        return (Long) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table DIFF_ADJ
     * 
     * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
     */
    public Long insertSelective(DiffAdj record) throws SQLException {
        Object newKey = sqlMapClient.insert("DIFF_ADJ.ibatorgenerated_insertSelective", record);
        return (Long) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table DIFF_ADJ
     * 
     * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
     */
    public List selectByExample(DiffAdjExample example) throws SQLException {
        List list = sqlMapClient.queryForList("DIFF_ADJ.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table DIFF_ADJ
     * 
     * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
     */
    public DiffAdj selectByPrimaryKey(Long diffAdjId) throws SQLException {
        DiffAdj key = new DiffAdj();
        key.setDiffAdjId(diffAdjId);
        DiffAdj record =
                (DiffAdj) sqlMapClient.queryForObject(
                        "DIFF_ADJ.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table DIFF_ADJ
     * 
     * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
     */
    public int updateByExampleSelective(DiffAdj record, DiffAdjExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("DIFF_ADJ.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table DIFF_ADJ
     * 
     * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
     */
    public int updateByExample(DiffAdj record, DiffAdjExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("DIFF_ADJ.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table DIFF_ADJ
     * 
     * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
     */
    public int updateByPrimaryKeySelective(DiffAdj record) throws SQLException {
        int rows =
                sqlMapClient.update("DIFF_ADJ.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database
     * table DIFF_ADJ
     * 
     * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
     */
    public int updateByPrimaryKey(DiffAdj record) throws SQLException {
        int rows = sqlMapClient.update("DIFF_ADJ.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator. This class corresponds to the database
     * table DIFF_ADJ
     * 
     * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
     */
    private static class UpdateByExampleParms extends DiffAdjExample {
        /**
		 * 
		 */
        private static final long serialVersionUID = 1L;
        private Object record;

        public UpdateByExampleParms(Object record, DiffAdjExample example) {
            super(example);
            this.record = record;
        }

        @SuppressWarnings("unused")
        public Object getRecord() {
            return record;
        }
    }

    @Override
    public String getUserName(DiffAdj record) throws SQLException {
        return (String) sqlMapClient.queryForObject("DIFF_ADJ.getUserName", record);
    }

    @Override
    public List<DiffAdj> selectDiffAdjList(DiffAdjCriteria criteria) throws SQLException {
        return (List<DiffAdj>) sqlMapClient.queryForList("DIFF_ADJ.selectDiffAdjList", criteria);
    }

    @Override
    public int selectDiffAdjSize(DiffAdjCriteria criteria) throws SQLException {
        return (Integer) sqlMapClient.queryForObject("DIFF_ADJ.selectDiffAdjSize", criteria);
    }

    @Override
    public int updateDiffAccountAmount(DiffAdj record) throws SQLException {
        // int rows = sqlMapClient.update(
        // "DIFF_ADJ.ibatorgenerated_updateDiffAndAccountAmount", record);
        // return rows;
        return 0;
    }

    @Override
    public Map selectSumDiff(DiffAdjCriteria diffAdjCriteria) throws SQLException {
        List list = sqlMapClient.queryForList("DIFF_ADJ.selectSumDiff", diffAdjCriteria);
        return CollectionUtils.isEmpty(list) ? null : (Map) list.get(0);
    }

    @Override
    public List<Map<String, Object>> queryExportDiffAdjInfo(Map<String, String> map)
            throws SQLException {
        List<Map<String, Object>> list =
                sqlMapClient.queryForList("DIFF_ADJ.queryExportDiffAdjInfo", map);
        return list;
    }

    @Override
    public List<DiffAdj> queryDiffAdjForSellerSettlement(Map<String, Object> map)
            throws SQLException {
        return this.sqlMapClient.queryForList("DIFF_ADJ.queryDiffAdjForSellerSettlement", map);
    }


}
