package com.pltfm.app.entities;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class OrderAssessDetailExample implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.ORDER_ASSESS_DETAIL
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  protected String orderByClause;
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.ORDER_ASSESS_DETAIL
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_DETAIL
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public OrderAssessDetailExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_DETAIL
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  protected OrderAssessDetailExample(OrderAssessDetailExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_DETAIL
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_DETAIL
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_DETAIL
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_DETAIL
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_DETAIL
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_DETAIL
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_DETAIL
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * KMORDER.ORDER_ASSESS_DETAIL
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;
    protected List criteriaWithSingleValue;
    protected List criteriaWithListValue;
    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2
          .getTime()), property);
    }

    public Criteria andAssessDetailIdIsNull() {
      addCriterion("ASSESS_DETAIL_ID is null");
      return this;
    }

    public Criteria andAssessDetailIdIsNotNull() {
      addCriterion("ASSESS_DETAIL_ID is not null");
      return this;
    }

    public Criteria andAssessDetailIdEqualTo(Long value) {
      addCriterion("ASSESS_DETAIL_ID =", value, "assessDetailId");
      return this;
    }

    public Criteria andAssessDetailIdNotEqualTo(Long value) {
      addCriterion("ASSESS_DETAIL_ID <>", value, "assessDetailId");
      return this;
    }

    public Criteria andAssessDetailIdGreaterThan(Long value) {
      addCriterion("ASSESS_DETAIL_ID >", value, "assessDetailId");
      return this;
    }

    public Criteria andAssessDetailIdGreaterThanOrEqualTo(Long value) {
      addCriterion("ASSESS_DETAIL_ID >=", value, "assessDetailId");
      return this;
    }

    public Criteria andAssessDetailIdLessThan(Long value) {
      addCriterion("ASSESS_DETAIL_ID <", value, "assessDetailId");
      return this;
    }

    public Criteria andAssessDetailIdLessThanOrEqualTo(Long value) {
      addCriterion("ASSESS_DETAIL_ID <=", value, "assessDetailId");
      return this;
    }

    public Criteria andAssessDetailIdIn(List values) {
      addCriterion("ASSESS_DETAIL_ID in", values, "assessDetailId");
      return this;
    }

    public Criteria andAssessDetailIdNotIn(List values) {
      addCriterion("ASSESS_DETAIL_ID not in", values, "assessDetailId");
      return this;
    }

    public Criteria andAssessDetailIdBetween(Long value1, Long value2) {
      addCriterion("ASSESS_DETAIL_ID between", value1, value2, "assessDetailId");
      return this;
    }

    public Criteria andAssessDetailIdNotBetween(Long value1, Long value2) {
      addCriterion("ASSESS_DETAIL_ID not between", value1, value2, "assessDetailId");
      return this;
    }

    public Criteria andAssessInfoIdIsNull() {
      addCriterion("ASSESS_INFO_ID is null");
      return this;
    }

    public Criteria andAssessInfoIdIsNotNull() {
      addCriterion("ASSESS_INFO_ID is not null");
      return this;
    }

    public Criteria andAssessInfoIdEqualTo(Long value) {
      addCriterion("ASSESS_INFO_ID =", value, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdNotEqualTo(Long value) {
      addCriterion("ASSESS_INFO_ID <>", value, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdGreaterThan(Long value) {
      addCriterion("ASSESS_INFO_ID >", value, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdGreaterThanOrEqualTo(Long value) {
      addCriterion("ASSESS_INFO_ID >=", value, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdLessThan(Long value) {
      addCriterion("ASSESS_INFO_ID <", value, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdLessThanOrEqualTo(Long value) {
      addCriterion("ASSESS_INFO_ID <=", value, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdIn(List values) {
      addCriterion("ASSESS_INFO_ID in", values, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdNotIn(List values) {
      addCriterion("ASSESS_INFO_ID not in", values, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdBetween(Long value1, Long value2) {
      addCriterion("ASSESS_INFO_ID between", value1, value2, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdNotBetween(Long value1, Long value2) {
      addCriterion("ASSESS_INFO_ID not between", value1, value2, "assessInfoId");
      return this;
    }

    public Criteria andAssessScoreIsNull() {
      addCriterion("ASSESS_SCORE is null");
      return this;
    }

    public Criteria andAssessScoreIsNotNull() {
      addCriterion("ASSESS_SCORE is not null");
      return this;
    }

    public Criteria andAssessScoreEqualTo(Integer value) {
      addCriterion("ASSESS_SCORE =", value, "assessScore");
      return this;
    }

    public Criteria andAssessScoreNotEqualTo(Integer value) {
      addCriterion("ASSESS_SCORE <>", value, "assessScore");
      return this;
    }

    public Criteria andAssessScoreGreaterThan(Integer value) {
      addCriterion("ASSESS_SCORE >", value, "assessScore");
      return this;
    }

    public Criteria andAssessScoreGreaterThanOrEqualTo(Integer value) {
      addCriterion("ASSESS_SCORE >=", value, "assessScore");
      return this;
    }

    public Criteria andAssessScoreLessThan(Integer value) {
      addCriterion("ASSESS_SCORE <", value, "assessScore");
      return this;
    }

    public Criteria andAssessScoreLessThanOrEqualTo(Integer value) {
      addCriterion("ASSESS_SCORE <=", value, "assessScore");
      return this;
    }

    public Criteria andAssessScoreIn(List values) {
      addCriterion("ASSESS_SCORE in", values, "assessScore");
      return this;
    }

    public Criteria andAssessScoreNotIn(List values) {
      addCriterion("ASSESS_SCORE not in", values, "assessScore");
      return this;
    }

    public Criteria andAssessScoreBetween(Integer value1, Integer value2) {
      addCriterion("ASSESS_SCORE between", value1, value2, "assessScore");
      return this;
    }

    public Criteria andAssessScoreNotBetween(Integer value1, Integer value2) {
      addCriterion("ASSESS_SCORE not between", value1, value2, "assessScore");
      return this;
    }

    public Criteria andAssessLevelIsNull() {
      addCriterion("ASSESS_LEVEL is null");
      return this;
    }

    public Criteria andAssessLevelIsNotNull() {
      addCriterion("ASSESS_LEVEL is not null");
      return this;
    }

    public Criteria andAssessLevelEqualTo(Integer value) {
      addCriterion("ASSESS_LEVEL =", value, "assessLevel");
      return this;
    }

    public Criteria andAssessLevelNotEqualTo(Integer value) {
      addCriterion("ASSESS_LEVEL <>", value, "assessLevel");
      return this;
    }

    public Criteria andAssessLevelGreaterThan(Integer value) {
      addCriterion("ASSESS_LEVEL >", value, "assessLevel");
      return this;
    }

    public Criteria andAssessLevelGreaterThanOrEqualTo(Integer value) {
      addCriterion("ASSESS_LEVEL >=", value, "assessLevel");
      return this;
    }

    public Criteria andAssessLevelLessThan(Integer value) {
      addCriterion("ASSESS_LEVEL <", value, "assessLevel");
      return this;
    }

    public Criteria andAssessLevelLessThanOrEqualTo(Integer value) {
      addCriterion("ASSESS_LEVEL <=", value, "assessLevel");
      return this;
    }

    public Criteria andAssessLevelIn(List values) {
      addCriterion("ASSESS_LEVEL in", values, "assessLevel");
      return this;
    }

    public Criteria andAssessLevelNotIn(List values) {
      addCriterion("ASSESS_LEVEL not in", values, "assessLevel");
      return this;
    }

    public Criteria andAssessLevelBetween(Integer value1, Integer value2) {
      addCriterion("ASSESS_LEVEL between", value1, value2, "assessLevel");
      return this;
    }

    public Criteria andAssessLevelNotBetween(Integer value1, Integer value2) {
      addCriterion("ASSESS_LEVEL not between", value1, value2, "assessLevel");
      return this;
    }

    public Criteria andCreateDateIsNull() {
      addCriterion("CREATE_DATE is null");
      return this;
    }

    public Criteria andCreateDateIsNotNull() {
      addCriterion("CREATE_DATE is not null");
      return this;
    }

    public Criteria andCreateDateEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
      return this;
    }

    public Criteria andCreateDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
      return this;
    }

    public Criteria andCreateDateGreaterThan(Date value) {
      addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
      return this;
    }

    public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
      return this;
    }

    public Criteria andCreateDateLessThan(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
      return this;
    }

    public Criteria andCreateDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
      return this;
    }

    public Criteria andCreateDateIn(List values) {
      addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
      return this;
    }

    public Criteria andCreateDateNotIn(List values) {
      addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
      return this;
    }

    public Criteria andCreateDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
      return this;
    }

    public Criteria andCreateDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
      return this;
    }

    public Criteria andAssessTypeIsNull() {
      addCriterion("ASSESS_TYPE is null");
      return this;
    }

    public Criteria andAssessTypeIsNotNull() {
      addCriterion("ASSESS_TYPE is not null");
      return this;
    }

    public Criteria andAssessTypeEqualTo(String value) {
      addCriterion("ASSESS_TYPE =", value, "assessType");
      return this;
    }

    public Criteria andAssessTypeNotEqualTo(String value) {
      addCriterion("ASSESS_TYPE <>", value, "assessType");
      return this;
    }

    public Criteria andAssessTypeGreaterThan(String value) {
      addCriterion("ASSESS_TYPE >", value, "assessType");
      return this;
    }

    public Criteria andAssessTypeGreaterThanOrEqualTo(String value) {
      addCriterion("ASSESS_TYPE >=", value, "assessType");
      return this;
    }

    public Criteria andAssessTypeLessThan(String value) {
      addCriterion("ASSESS_TYPE <", value, "assessType");
      return this;
    }

    public Criteria andAssessTypeLessThanOrEqualTo(String value) {
      addCriterion("ASSESS_TYPE <=", value, "assessType");
      return this;
    }

    public Criteria andAssessTypeLike(String value) {
      addCriterion("ASSESS_TYPE like", value, "assessType");
      return this;
    }

    public Criteria andAssessTypeNotLike(String value) {
      addCriterion("ASSESS_TYPE not like", value, "assessType");
      return this;
    }

    public Criteria andAssessTypeIn(List values) {
      addCriterion("ASSESS_TYPE in", values, "assessType");
      return this;
    }

    public Criteria andAssessTypeNotIn(List values) {
      addCriterion("ASSESS_TYPE not in", values, "assessType");
      return this;
    }

    public Criteria andAssessTypeBetween(String value1, String value2) {
      addCriterion("ASSESS_TYPE between", value1, value2, "assessType");
      return this;
    }

    public Criteria andAssessTypeNotBetween(String value1, String value2) {
      addCriterion("ASSESS_TYPE not between", value1, value2, "assessType");
      return this;
    }

    public Criteria andAssessNameIsNull() {
      addCriterion("ASSESS_NAME is null");
      return this;
    }

    public Criteria andAssessNameIsNotNull() {
      addCriterion("ASSESS_NAME is not null");
      return this;
    }

    public Criteria andAssessNameEqualTo(String value) {
      addCriterion("ASSESS_NAME =", value, "assessName");
      return this;
    }

    public Criteria andAssessNameNotEqualTo(String value) {
      addCriterion("ASSESS_NAME <>", value, "assessName");
      return this;
    }

    public Criteria andAssessNameGreaterThan(String value) {
      addCriterion("ASSESS_NAME >", value, "assessName");
      return this;
    }

    public Criteria andAssessNameGreaterThanOrEqualTo(String value) {
      addCriterion("ASSESS_NAME >=", value, "assessName");
      return this;
    }

    public Criteria andAssessNameLessThan(String value) {
      addCriterion("ASSESS_NAME <", value, "assessName");
      return this;
    }

    public Criteria andAssessNameLessThanOrEqualTo(String value) {
      addCriterion("ASSESS_NAME <=", value, "assessName");
      return this;
    }

    public Criteria andAssessNameLike(String value) {
      addCriterion("ASSESS_NAME like", value, "assessName");
      return this;
    }

    public Criteria andAssessNameNotLike(String value) {
      addCriterion("ASSESS_NAME not like", value, "assessName");
      return this;
    }

    public Criteria andAssessNameIn(List values) {
      addCriterion("ASSESS_NAME in", values, "assessName");
      return this;
    }

    public Criteria andAssessNameNotIn(List values) {
      addCriterion("ASSESS_NAME not in", values, "assessName");
      return this;
    }

    public Criteria andAssessNameBetween(String value1, String value2) {
      addCriterion("ASSESS_NAME between", value1, value2, "assessName");
      return this;
    }

    public Criteria andAssessNameNotBetween(String value1, String value2) {
      addCriterion("ASSESS_NAME not between", value1, value2, "assessName");
      return this;
    }

    public Criteria andOrderCodeIsNull() {
      addCriterion("ORDER_CODE is null");
      return this;
    }

    public Criteria andOrderCodeIsNotNull() {
      addCriterion("ORDER_CODE is not null");
      return this;
    }

    public Criteria andOrderCodeEqualTo(String value) {
      addCriterion("ORDER_CODE =", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotEqualTo(String value) {
      addCriterion("ORDER_CODE <>", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeGreaterThan(String value) {
      addCriterion("ORDER_CODE >", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeGreaterThanOrEqualTo(String value) {
      addCriterion("ORDER_CODE >=", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeLessThan(String value) {
      addCriterion("ORDER_CODE <", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeLessThanOrEqualTo(String value) {
      addCriterion("ORDER_CODE <=", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeLike(String value) {
      addCriterion("ORDER_CODE like", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotLike(String value) {
      addCriterion("ORDER_CODE not like", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeIn(List values) {
      addCriterion("ORDER_CODE in", values, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotIn(List values) {
      addCriterion("ORDER_CODE not in", values, "orderCode");
      return this;
    }

    public Criteria andOrderCodeBetween(String value1, String value2) {
      addCriterion("ORDER_CODE between", value1, value2, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotBetween(String value1, String value2) {
      addCriterion("ORDER_CODE not between", value1, value2, "orderCode");
      return this;
    }
  }
}
