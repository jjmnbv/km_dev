package com.pltfm.app.dao;

import java.sql.SQLException;
import java.util.List;

import com.pltfm.app.entities.OrderOperateStatement;
import com.pltfm.app.entities.OrderOperateStatementExample;

@SuppressWarnings("unchecked")
public interface OrderOperateStatementDAO {
  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_OPERATE_STATEMENT
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  int countByExample(OrderOperateStatementExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_OPERATE_STATEMENT
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  int deleteByExample(OrderOperateStatementExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_OPERATE_STATEMENT
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  int deleteByPrimaryKey(Long statementId) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_OPERATE_STATEMENT
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  Long insert(OrderOperateStatement record) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_OPERATE_STATEMENT
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  Long insertSelective(OrderOperateStatement record) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_OPERATE_STATEMENT
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  List selectByExample(OrderOperateStatementExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_OPERATE_STATEMENT
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  OrderOperateStatement selectByPrimaryKey(Long statementId) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_OPERATE_STATEMENT
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  int updateByExampleSelective(OrderOperateStatement record, OrderOperateStatementExample example)
      throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_OPERATE_STATEMENT
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  int updateByExample(OrderOperateStatement record, OrderOperateStatementExample example)
      throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_OPERATE_STATEMENT
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  int updateByPrimaryKeySelective(OrderOperateStatement record) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_OPERATE_STATEMENT
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  int updateByPrimaryKey(OrderOperateStatement record) throws SQLException;

  OrderOperateStatement selectLatestByPrimaryKey(String orderCode) throws SQLException;

  /**
   * 通过OrderCode集合查询出操作流水集合
   * 
   * @return
   * @throws SQLException
   */
  List<OrderOperateStatement> selectByOrderCodeList(List<String> codeList) throws SQLException;

  /**
   * 根据订单号获取最新操作信息
   */
  OrderOperateStatement selectNewest(String orderCode) throws SQLException;

  void updateList(List<OrderOperateStatement> records) throws SQLException;

  void deleteList(List<OrderOperateStatement> records) throws SQLException;

  void insertList(List<OrderOperateStatement> records) throws SQLException;

  /**
   * 获取订单物流信息修改次数
   * 
   * @param orderCode
   * @return
   * @throws SQLException
   */
  public Integer queryUpdateLogisticCount(String orderCode) throws SQLException;

  /**
   * 查询待确认收货的订单编号
   * 
   * @return
   * @throws SQLException
   */
  public List<String> queryUnconfirmReceiptOrderCode() throws SQLException;

  public String getOperatorNameById(String commerceId) throws SQLException;

  /**
   * 根据订单号和订单状态查询最近的一条操作流水
   * 
   * @param orderCode
   * @param orderStatus
   * @return
   * @throws SQLException
   */
  OrderOperateStatement selectNewestWithStatus(String orderCode, long orderStatus)
      throws SQLException;


}
