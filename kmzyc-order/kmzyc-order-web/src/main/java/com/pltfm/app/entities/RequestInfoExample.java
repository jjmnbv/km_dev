package com.pltfm.app.entities;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class RequestInfoExample implements Serializable {
  private static final long serialVersionUID = 1L;
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.REQUEST_INFO
   * 
   * @ibatorgenerated Wed May 21 10:38:14 CST 2014
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.REQUEST_INFO
   * 
   * @ibatorgenerated Wed May 21 10:38:14 CST 2014
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.REQUEST_INFO
   * 
   * @ibatorgenerated Wed May 21 10:38:14 CST 2014
   */
  public RequestInfoExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.REQUEST_INFO
   * 
   * @ibatorgenerated Wed May 21 10:38:14 CST 2014
   */
  protected RequestInfoExample(RequestInfoExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.REQUEST_INFO
   * 
   * @ibatorgenerated Wed May 21 10:38:14 CST 2014
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.REQUEST_INFO
   * 
   * @ibatorgenerated Wed May 21 10:38:14 CST 2014
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.REQUEST_INFO
   * 
   * @ibatorgenerated Wed May 21 10:38:14 CST 2014
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.REQUEST_INFO
   * 
   * @ibatorgenerated Wed May 21 10:38:14 CST 2014
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.REQUEST_INFO
   * 
   * @ibatorgenerated Wed May 21 10:38:14 CST 2014
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.REQUEST_INFO
   * 
   * @ibatorgenerated Wed May 21 10:38:14 CST 2014
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.REQUEST_INFO
   * 
   * @ibatorgenerated Wed May 21 10:38:14 CST 2014
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * KMORDER.REQUEST_INFO
   * 
   * @ibatorgenerated Wed May 21 10:38:14 CST 2014
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    public Criteria andRidIsNull() {
      addCriterion("RID is null");
      return this;
    }

    public Criteria andRidIsNotNull() {
      addCriterion("RID is not null");
      return this;
    }

    public Criteria andRidEqualTo(Long value) {
      addCriterion("RID =", value, "rid");
      return this;
    }

    public Criteria andRidNotEqualTo(Long value) {
      addCriterion("RID <>", value, "rid");
      return this;
    }

    public Criteria andRidGreaterThan(Long value) {
      addCriterion("RID >", value, "rid");
      return this;
    }

    public Criteria andRidGreaterThanOrEqualTo(Long value) {
      addCriterion("RID >=", value, "rid");
      return this;
    }

    public Criteria andRidLessThan(Long value) {
      addCriterion("RID <", value, "rid");
      return this;
    }

    public Criteria andRidLessThanOrEqualTo(Long value) {
      addCriterion("RID <=", value, "rid");
      return this;
    }

    public Criteria andRidIn(List values) {
      addCriterion("RID in", values, "rid");
      return this;
    }

    public Criteria andRidNotIn(List values) {
      addCriterion("RID not in", values, "rid");
      return this;
    }

    public Criteria andRidBetween(Long value1, Long value2) {
      addCriterion("RID between", value1, value2, "rid");
      return this;
    }

    public Criteria andRidNotBetween(Long value1, Long value2) {
      addCriterion("RID not between", value1, value2, "rid");
      return this;
    }

    public Criteria andSystemCodeIsNull() {
      addCriterion("SYSTEM_CODE is null");
      return this;
    }

    public Criteria andSystemCodeIsNotNull() {
      addCriterion("SYSTEM_CODE is not null");
      return this;
    }

    public Criteria andSystemCodeEqualTo(String value) {
      addCriterion("SYSTEM_CODE =", value, "systemCode");
      return this;
    }

    public Criteria andSystemCodeNotEqualTo(String value) {
      addCriterion("SYSTEM_CODE <>", value, "systemCode");
      return this;
    }

    public Criteria andSystemCodeGreaterThan(String value) {
      addCriterion("SYSTEM_CODE >", value, "systemCode");
      return this;
    }

    public Criteria andSystemCodeGreaterThanOrEqualTo(String value) {
      addCriterion("SYSTEM_CODE >=", value, "systemCode");
      return this;
    }

    public Criteria andSystemCodeLessThan(String value) {
      addCriterion("SYSTEM_CODE <", value, "systemCode");
      return this;
    }

    public Criteria andSystemCodeLessThanOrEqualTo(String value) {
      addCriterion("SYSTEM_CODE <=", value, "systemCode");
      return this;
    }

    public Criteria andSystemCodeLike(String value) {
      addCriterion("SYSTEM_CODE like", value, "systemCode");
      return this;
    }

    public Criteria andSystemCodeNotLike(String value) {
      addCriterion("SYSTEM_CODE not like", value, "systemCode");
      return this;
    }

    public Criteria andSystemCodeIn(List values) {
      addCriterion("SYSTEM_CODE in", values, "systemCode");
      return this;
    }

    public Criteria andSystemCodeNotIn(List values) {
      addCriterion("SYSTEM_CODE not in", values, "systemCode");
      return this;
    }

    public Criteria andSystemCodeBetween(String value1, String value2) {
      addCriterion("SYSTEM_CODE between", value1, value2, "systemCode");
      return this;
    }

    public Criteria andSystemCodeNotBetween(String value1, String value2) {
      addCriterion("SYSTEM_CODE not between", value1, value2, "systemCode");
      return this;
    }

    public Criteria andServiceNameIsNull() {
      addCriterion("SERVICE_NAME is null");
      return this;
    }

    public Criteria andServiceNameIsNotNull() {
      addCriterion("SERVICE_NAME is not null");
      return this;
    }

    public Criteria andServiceNameEqualTo(String value) {
      addCriterion("SERVICE_NAME =", value, "serviceName");
      return this;
    }

    public Criteria andServiceNameNotEqualTo(String value) {
      addCriterion("SERVICE_NAME <>", value, "serviceName");
      return this;
    }

    public Criteria andServiceNameGreaterThan(String value) {
      addCriterion("SERVICE_NAME >", value, "serviceName");
      return this;
    }

    public Criteria andServiceNameGreaterThanOrEqualTo(String value) {
      addCriterion("SERVICE_NAME >=", value, "serviceName");
      return this;
    }

    public Criteria andServiceNameLessThan(String value) {
      addCriterion("SERVICE_NAME <", value, "serviceName");
      return this;
    }

    public Criteria andServiceNameLessThanOrEqualTo(String value) {
      addCriterion("SERVICE_NAME <=", value, "serviceName");
      return this;
    }

    public Criteria andServiceNameLike(String value) {
      addCriterion("SERVICE_NAME like", value, "serviceName");
      return this;
    }

    public Criteria andServiceNameNotLike(String value) {
      addCriterion("SERVICE_NAME not like", value, "serviceName");
      return this;
    }

    public Criteria andServiceNameIn(List values) {
      addCriterion("SERVICE_NAME in", values, "serviceName");
      return this;
    }

    public Criteria andServiceNameNotIn(List values) {
      addCriterion("SERVICE_NAME not in", values, "serviceName");
      return this;
    }

    public Criteria andServiceNameBetween(String value1, String value2) {
      addCriterion("SERVICE_NAME between", value1, value2, "serviceName");
      return this;
    }

    public Criteria andServiceNameNotBetween(String value1, String value2) {
      addCriterion("SERVICE_NAME not between", value1, value2, "serviceName");
      return this;
    }

    public Criteria andRequestSourceIsNull() {
      addCriterion("REQUEST_SOURCE is null");
      return this;
    }

    public Criteria andRequestSourceIsNotNull() {
      addCriterion("REQUEST_SOURCE is not null");
      return this;
    }

    public Criteria andRequestSourceEqualTo(String value) {
      addCriterion("REQUEST_SOURCE =", value, "requestSource");
      return this;
    }

    public Criteria andRequestSourceNotEqualTo(String value) {
      addCriterion("REQUEST_SOURCE <>", value, "requestSource");
      return this;
    }

    public Criteria andRequestSourceGreaterThan(String value) {
      addCriterion("REQUEST_SOURCE >", value, "requestSource");
      return this;
    }

    public Criteria andRequestSourceGreaterThanOrEqualTo(String value) {
      addCriterion("REQUEST_SOURCE >=", value, "requestSource");
      return this;
    }

    public Criteria andRequestSourceLessThan(String value) {
      addCriterion("REQUEST_SOURCE <", value, "requestSource");
      return this;
    }

    public Criteria andRequestSourceLessThanOrEqualTo(String value) {
      addCriterion("REQUEST_SOURCE <=", value, "requestSource");
      return this;
    }

    public Criteria andRequestSourceLike(String value) {
      addCriterion("REQUEST_SOURCE like", value, "requestSource");
      return this;
    }

    public Criteria andRequestSourceNotLike(String value) {
      addCriterion("REQUEST_SOURCE not like", value, "requestSource");
      return this;
    }

    public Criteria andRequestSourceIn(List values) {
      addCriterion("REQUEST_SOURCE in", values, "requestSource");
      return this;
    }

    public Criteria andRequestSourceNotIn(List values) {
      addCriterion("REQUEST_SOURCE not in", values, "requestSource");
      return this;
    }

    public Criteria andRequestSourceBetween(String value1, String value2) {
      addCriterion("REQUEST_SOURCE between", value1, value2, "requestSource");
      return this;
    }

    public Criteria andRequestSourceNotBetween(String value1, String value2) {
      addCriterion("REQUEST_SOURCE not between", value1, value2, "requestSource");
      return this;
    }

    public Criteria andRequestIpIsNull() {
      addCriterion("REQUEST_IP is null");
      return this;
    }

    public Criteria andRequestIpIsNotNull() {
      addCriterion("REQUEST_IP is not null");
      return this;
    }

    public Criteria andRequestIpEqualTo(String value) {
      addCriterion("REQUEST_IP =", value, "requestIp");
      return this;
    }

    public Criteria andRequestIpNotEqualTo(String value) {
      addCriterion("REQUEST_IP <>", value, "requestIp");
      return this;
    }

    public Criteria andRequestIpGreaterThan(String value) {
      addCriterion("REQUEST_IP >", value, "requestIp");
      return this;
    }

    public Criteria andRequestIpGreaterThanOrEqualTo(String value) {
      addCriterion("REQUEST_IP >=", value, "requestIp");
      return this;
    }

    public Criteria andRequestIpLessThan(String value) {
      addCriterion("REQUEST_IP <", value, "requestIp");
      return this;
    }

    public Criteria andRequestIpLessThanOrEqualTo(String value) {
      addCriterion("REQUEST_IP <=", value, "requestIp");
      return this;
    }

    public Criteria andRequestIpLike(String value) {
      addCriterion("REQUEST_IP like", value, "requestIp");
      return this;
    }

    public Criteria andRequestIpNotLike(String value) {
      addCriterion("REQUEST_IP not like", value, "requestIp");
      return this;
    }

    public Criteria andRequestIpIn(List values) {
      addCriterion("REQUEST_IP in", values, "requestIp");
      return this;
    }

    public Criteria andRequestIpNotIn(List values) {
      addCriterion("REQUEST_IP not in", values, "requestIp");
      return this;
    }

    public Criteria andRequestIpBetween(String value1, String value2) {
      addCriterion("REQUEST_IP between", value1, value2, "requestIp");
      return this;
    }

    public Criteria andRequestIpNotBetween(String value1, String value2) {
      addCriterion("REQUEST_IP not between", value1, value2, "requestIp");
      return this;
    }

    public Criteria andCuidIsNull() {
      addCriterion("CUID is null");
      return this;
    }

    public Criteria andCuidIsNotNull() {
      addCriterion("CUID is not null");
      return this;
    }

    public Criteria andCuidEqualTo(Long value) {
      addCriterion("CUID =", value, "cuid");
      return this;
    }

    public Criteria andCuidNotEqualTo(Long value) {
      addCriterion("CUID <>", value, "cuid");
      return this;
    }

    public Criteria andCuidGreaterThan(Long value) {
      addCriterion("CUID >", value, "cuid");
      return this;
    }

    public Criteria andCuidGreaterThanOrEqualTo(Long value) {
      addCriterion("CUID >=", value, "cuid");
      return this;
    }

    public Criteria andCuidLessThan(Long value) {
      addCriterion("CUID <", value, "cuid");
      return this;
    }

    public Criteria andCuidLessThanOrEqualTo(Long value) {
      addCriterion("CUID <=", value, "cuid");
      return this;
    }

    public Criteria andCuidIn(List values) {
      addCriterion("CUID in", values, "cuid");
      return this;
    }

    public Criteria andCuidNotIn(List values) {
      addCriterion("CUID not in", values, "cuid");
      return this;
    }

    public Criteria andCuidBetween(Long value1, Long value2) {
      addCriterion("CUID between", value1, value2, "cuid");
      return this;
    }

    public Criteria andCuidNotBetween(Long value1, Long value2) {
      addCriterion("CUID not between", value1, value2, "cuid");
      return this;
    }

    public Criteria andRequestParamsIsNull() {
      addCriterion("REQUEST_PARAMS is null");
      return this;
    }

    public Criteria andRequestParamsIsNotNull() {
      addCriterion("REQUEST_PARAMS is not null");
      return this;
    }

    public Criteria andRequestParamsEqualTo(String value) {
      addCriterion("REQUEST_PARAMS =", value, "requestParams");
      return this;
    }

    public Criteria andRequestParamsNotEqualTo(String value) {
      addCriterion("REQUEST_PARAMS <>", value, "requestParams");
      return this;
    }

    public Criteria andRequestParamsGreaterThan(String value) {
      addCriterion("REQUEST_PARAMS >", value, "requestParams");
      return this;
    }

    public Criteria andRequestParamsGreaterThanOrEqualTo(String value) {
      addCriterion("REQUEST_PARAMS >=", value, "requestParams");
      return this;
    }

    public Criteria andRequestParamsLessThan(String value) {
      addCriterion("REQUEST_PARAMS <", value, "requestParams");
      return this;
    }

    public Criteria andRequestParamsLessThanOrEqualTo(String value) {
      addCriterion("REQUEST_PARAMS <=", value, "requestParams");
      return this;
    }

    public Criteria andRequestParamsLike(String value) {
      addCriterion("REQUEST_PARAMS like", value, "requestParams");
      return this;
    }

    public Criteria andRequestParamsNotLike(String value) {
      addCriterion("REQUEST_PARAMS not like", value, "requestParams");
      return this;
    }

    public Criteria andRequestParamsIn(List values) {
      addCriterion("REQUEST_PARAMS in", values, "requestParams");
      return this;
    }

    public Criteria andRequestParamsNotIn(List values) {
      addCriterion("REQUEST_PARAMS not in", values, "requestParams");
      return this;
    }

    public Criteria andRequestParamsBetween(String value1, String value2) {
      addCriterion("REQUEST_PARAMS between", value1, value2, "requestParams");
      return this;
    }

    public Criteria andRequestParamsNotBetween(String value1, String value2) {
      addCriterion("REQUEST_PARAMS not between", value1, value2, "requestParams");
      return this;
    }

    public Criteria andRequestStatusIsNull() {
      addCriterion("REQUEST_STATUS is null");
      return this;
    }

    public Criteria andRequestStatusIsNotNull() {
      addCriterion("REQUEST_STATUS is not null");
      return this;
    }

    public Criteria andRequestStatusEqualTo(String value) {
      addCriterion("REQUEST_STATUS =", value, "requestStatus");
      return this;
    }

    public Criteria andRequestStatusNotEqualTo(String value) {
      addCriterion("REQUEST_STATUS <>", value, "requestStatus");
      return this;
    }

    public Criteria andRequestStatusGreaterThan(String value) {
      addCriterion("REQUEST_STATUS >", value, "requestStatus");
      return this;
    }

    public Criteria andRequestStatusGreaterThanOrEqualTo(String value) {
      addCriterion("REQUEST_STATUS >=", value, "requestStatus");
      return this;
    }

    public Criteria andRequestStatusLessThan(String value) {
      addCriterion("REQUEST_STATUS <", value, "requestStatus");
      return this;
    }

    public Criteria andRequestStatusLessThanOrEqualTo(String value) {
      addCriterion("REQUEST_STATUS <=", value, "requestStatus");
      return this;
    }

    public Criteria andRequestStatusLike(String value) {
      addCriterion("REQUEST_STATUS like", value, "requestStatus");
      return this;
    }

    public Criteria andRequestStatusNotLike(String value) {
      addCriterion("REQUEST_STATUS not like", value, "requestStatus");
      return this;
    }

    public Criteria andRequestStatusIn(List values) {
      addCriterion("REQUEST_STATUS in", values, "requestStatus");
      return this;
    }

    public Criteria andRequestStatusNotIn(List values) {
      addCriterion("REQUEST_STATUS not in", values, "requestStatus");
      return this;
    }

    public Criteria andRequestStatusBetween(String value1, String value2) {
      addCriterion("REQUEST_STATUS between", value1, value2, "requestStatus");
      return this;
    }

    public Criteria andRequestStatusNotBetween(String value1, String value2) {
      addCriterion("REQUEST_STATUS not between", value1, value2, "requestStatus");
      return this;
    }

    public Criteria andRequestStartDateIsNull() {
      addCriterion("REQUEST_START_DATE is null");
      return this;
    }

    public Criteria andRequestStartDateIsNotNull() {
      addCriterion("REQUEST_START_DATE is not null");
      return this;
    }

    public Criteria andRequestStartDateEqualTo(Date value) {
      addCriterion("REQUEST_START_DATE =", value, "requestStartDate");
      return this;
    }

    public Criteria andRequestStartDateNotEqualTo(Date value) {
      addCriterion("REQUEST_START_DATE <>", value, "requestStartDate");
      return this;
    }

    public Criteria andRequestStartDateGreaterThan(Date value) {
      addCriterion("REQUEST_START_DATE >", value, "requestStartDate");
      return this;
    }

    public Criteria andRequestStartDateGreaterThanOrEqualTo(Date value) {
      addCriterion("REQUEST_START_DATE >=", value, "requestStartDate");
      return this;
    }

    public Criteria andRequestStartDateLessThan(Date value) {
      addCriterion("REQUEST_START_DATE <", value, "requestStartDate");
      return this;
    }

    public Criteria andRequestStartDateLessThanOrEqualTo(Date value) {
      addCriterion("REQUEST_START_DATE <=", value, "requestStartDate");
      return this;
    }

    public Criteria andRequestStartDateIn(List values) {
      addCriterion("REQUEST_START_DATE in", values, "requestStartDate");
      return this;
    }

    public Criteria andRequestStartDateNotIn(List values) {
      addCriterion("REQUEST_START_DATE not in", values, "requestStartDate");
      return this;
    }

    public Criteria andRequestStartDateBetween(Date value1, Date value2) {
      addCriterion("REQUEST_START_DATE between", value1, value2, "requestStartDate");
      return this;
    }

    public Criteria andRequestStartDateNotBetween(Date value1, Date value2) {
      addCriterion("REQUEST_START_DATE not between", value1, value2, "requestStartDate");
      return this;
    }

    public Criteria andRequestEndDateIsNull() {
      addCriterion("REQUEST_END_DATE is null");
      return this;
    }

    public Criteria andRequestEndDateIsNotNull() {
      addCriterion("REQUEST_END_DATE is not null");
      return this;
    }

    public Criteria andRequestEndDateEqualTo(Date value) {
      addCriterion("REQUEST_END_DATE =", value, "requestEndDate");
      return this;
    }

    public Criteria andRequestEndDateNotEqualTo(Date value) {
      addCriterion("REQUEST_END_DATE <>", value, "requestEndDate");
      return this;
    }

    public Criteria andRequestEndDateGreaterThan(Date value) {
      addCriterion("REQUEST_END_DATE >", value, "requestEndDate");
      return this;
    }

    public Criteria andRequestEndDateGreaterThanOrEqualTo(Date value) {
      addCriterion("REQUEST_END_DATE >=", value, "requestEndDate");
      return this;
    }

    public Criteria andRequestEndDateLessThan(Date value) {
      addCriterion("REQUEST_END_DATE <", value, "requestEndDate");
      return this;
    }

    public Criteria andRequestEndDateLessThanOrEqualTo(Date value) {
      addCriterion("REQUEST_END_DATE <=", value, "requestEndDate");
      return this;
    }

    public Criteria andRequestEndDateIn(List values) {
      addCriterion("REQUEST_END_DATE in", values, "requestEndDate");
      return this;
    }

    public Criteria andRequestEndDateNotIn(List values) {
      addCriterion("REQUEST_END_DATE not in", values, "requestEndDate");
      return this;
    }

    public Criteria andRequestEndDateBetween(Date value1, Date value2) {
      addCriterion("REQUEST_END_DATE between", value1, value2, "requestEndDate");
      return this;
    }

    public Criteria andRequestEndDateNotBetween(Date value1, Date value2) {
      addCriterion("REQUEST_END_DATE not between", value1, value2, "requestEndDate");
      return this;
    }
  }
}
