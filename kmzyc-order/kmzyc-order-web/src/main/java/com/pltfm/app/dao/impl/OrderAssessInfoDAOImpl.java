package com.pltfm.app.dao.impl;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.apache.commons.collections.CollectionUtils;
import org.springframework.stereotype.Repository;

import com.pltfm.app.dao.BaseDAO;
import com.pltfm.app.dao.OrderAssessInfoDAO;
import com.pltfm.app.entities.OrderAssessInfo;
import com.pltfm.app.entities.OrderAssessInfoExample;

@SuppressWarnings("unchecked")
@Repository("orderAssessDAO")
public class OrderAssessInfoDAOImpl extends BaseDAO<Object> implements OrderAssessInfoDAO {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  // private SqlMapClient sqlMapClient;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  // public OrderAssessInfoDAOImpl(SqlMapClient sqlMapClient) {
  // super();
  // this.sqlMapClient = sqlMapClient;
  // }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public int countByExample(OrderAssessInfoExample example) throws SQLException {
    Integer count =
        (Integer) sqlMapClient.queryForObject(
            "KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_countByExample", example);
    return count.intValue();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public int deleteByExample(OrderAssessInfoExample example) throws SQLException {
    int rows =
        sqlMapClient.delete("KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public int deleteByPrimaryKey(Long assessInfoId) throws SQLException {
    OrderAssessInfo key = new OrderAssessInfo();
    key.setAssessInfoId(assessInfoId);
    int rows =
        sqlMapClient.delete("KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public Long insert(OrderAssessInfo record) throws SQLException {
    Object newKey = sqlMapClient.insert("KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_insert", record);
    return (Long) newKey;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public Long insertSelective(OrderAssessInfo record) throws SQLException {
    Object newKey =
        sqlMapClient.insert("KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_insertSelective", record);
    return (Long) newKey;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public List selectByExample(OrderAssessInfoExample example) throws SQLException {
    List list =
        sqlMapClient.queryForList("KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_selectByExample",
            example);
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public OrderAssessInfo selectByPrimaryKey(Long assessInfoId) throws SQLException {
    OrderAssessInfo key = new OrderAssessInfo();
    key.setAssessInfoId(assessInfoId);
    OrderAssessInfo record =
        (OrderAssessInfo) sqlMapClient.queryForObject(
            "KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public int updateByExampleSelective(OrderAssessInfo record, OrderAssessInfoExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows =
        sqlMapClient.update("KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_updateByExampleSelective",
            parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public int updateByExample(OrderAssessInfo record, OrderAssessInfoExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows =
        sqlMapClient.update("KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public int updateByPrimaryKeySelective(OrderAssessInfo record) throws SQLException {
    int rows =
        sqlMapClient.update(
            "KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_updateByPrimaryKeySelective", record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public int updateByPrimaryKey(OrderAssessInfo record) throws SQLException {
    int rows =
        sqlMapClient.update("KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  private static class UpdateByExampleParms extends OrderAssessInfoExample {
    private static final long serialVersionUID = 1L;
    private Object record;

    public UpdateByExampleParms(Object record, OrderAssessInfoExample example) {
      super(example);
      this.record = record;
    }

    @SuppressWarnings("unused")
    public Object getRecord() {
      return record;
    }
  }

  @Override
  public Integer countByMap(Map<String, String> map) throws SQLException {
    return (Integer) sqlMapClient.queryForObject("KMORDER_ORDER_ASSESS_INFO.countByMap", map);
  }

  @Override
  public List<OrderAssessInfo> selectByMap(Map<String, String> map) throws SQLException {
    return sqlMapClient.queryForList("KMORDER_ORDER_ASSESS_INFO.selectByMap", map);
  }

  @Override
  public OrderAssessInfo selectByOrderCode(String orderCode) throws SQLException {
    OrderAssessInfo key = new OrderAssessInfo();
    key.setOrderCode(orderCode);
    OrderAssessInfo oai =
        (OrderAssessInfo) sqlMapClient.queryForObject(
            "KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_selectByOrderCode", key);
    return oai;
  }

  @Override
  public void deleteByOrderCode(String orderCode) throws SQLException {

    OrderAssessInfo oi = new OrderAssessInfo();
    oi.setOrderCode(orderCode);
    sqlMapClient.delete("KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_deleteByOrderCode", oi);
  }

  @Override
  public int bathInsertOrderAssessInfo(List<OrderAssessInfo> infoList) throws SQLException {
    if (!CollectionUtils.isEmpty(infoList)) {
      sqlMapClient.startBatch();
      for (OrderAssessInfo info : infoList) {
        sqlMapClient.insert("KMORDER_ORDER_ASSESS_INFO.ibatorgenerated_insert", info);
      }
      sqlMapClient.executeBatch();
      return 1;
    }

    return 0;
  }
}
