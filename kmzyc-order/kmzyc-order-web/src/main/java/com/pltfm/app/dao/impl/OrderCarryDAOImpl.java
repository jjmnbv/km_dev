package com.pltfm.app.dao.impl;

import java.sql.SQLException;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.pltfm.app.dao.BaseDAO;
import com.pltfm.app.dao.OrderCarryDAO;
import com.pltfm.app.entities.OrderCarry;
import com.pltfm.app.entities.OrderCarryExample;

@SuppressWarnings("unchecked")
@Repository("orderCarryDAO")
public class OrderCarryDAOImpl extends BaseDAO<Object> implements OrderCarryDAO {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  // private SqlMapClient sqlMapClient;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  // public OrderCarryDAOImpl(SqlMapClient sqlMapClient) {
  // super();
  // this.sqlMapClient = sqlMapClient;
  // }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public int countByExample(OrderCarryExample example) throws SQLException {
    Integer count =
        (Integer) sqlMapClient.queryForObject("KMORDER_ORDER_CARRY.ibatorgenerated_countByExample",
            example);
    return count.intValue();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public int deleteByExample(OrderCarryExample example) throws SQLException {
    int rows = sqlMapClient.delete("KMORDER_ORDER_CARRY.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public int deleteByPrimaryKey(Long handleId) throws SQLException {
    OrderCarry key = new OrderCarry();
    key.setHandleId(handleId);
    int rows = sqlMapClient.delete("KMORDER_ORDER_CARRY.ibatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public Long insert(OrderCarry record) throws SQLException {
    Object newKey = sqlMapClient.insert("KMORDER_ORDER_CARRY.ibatorgenerated_insert", record);
    return (Long) newKey;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public Long insertSelective(OrderCarry record) throws SQLException {
    Object newKey =
        sqlMapClient.insert("KMORDER_ORDER_CARRY.ibatorgenerated_insertSelective", record);
    return (Long) newKey;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public List selectByExample(OrderCarryExample example) throws SQLException {
    List list =
        sqlMapClient.queryForList("KMORDER_ORDER_CARRY.ibatorgenerated_selectByExample", example);
    return list;
  }

  /**
   * 查询处最近的一次结转单
   * 
   * @return
   * @throws SQLException
   */
  public List selectAllByrownum() throws SQLException {
    List list = sqlMapClient.queryForList("KMORDER_ORDER_CARRY.selectAllByrumOne");
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public OrderCarry selectByPrimaryKey(Long handleId) throws SQLException {
    OrderCarry key = new OrderCarry();
    key.setHandleId(handleId);
    OrderCarry record =
        (OrderCarry) sqlMapClient.queryForObject(
            "KMORDER_ORDER_CARRY.ibatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public int updateByExampleSelective(OrderCarry record, OrderCarryExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows =
        sqlMapClient.update("KMORDER_ORDER_CARRY.ibatorgenerated_updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public int updateByExample(OrderCarry record, OrderCarryExample example) throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("KMORDER_ORDER_CARRY.ibatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public int updateByPrimaryKeySelective(OrderCarry record) throws SQLException {
    int rows =
        sqlMapClient.update("KMORDER_ORDER_CARRY.ibatorgenerated_updateByPrimaryKeySelective",
            record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public int updateByPrimaryKey(OrderCarry record) throws SQLException {
    int rows =
        sqlMapClient.update("KMORDER_ORDER_CARRY.ibatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * KMORDER.ORDER_CARRY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  private static class UpdateByExampleParms extends OrderCarryExample {
    private static final long serialVersionUID = 1L;
    private Object record;

    public UpdateByExampleParms(Object record, OrderCarryExample example) {
      super(example);
      this.record = record;
    }

    @SuppressWarnings("unused")
    public Object getRecord() {
      return record;
    }
  }

  @Override
  public Integer countByMap(Map<String, String> map) throws SQLException {
    return (Integer) sqlMapClient.queryForObject("KMORDER_ORDER_CARRY.countByMap", map);
  }

  @Override
  public List<OrderCarry> selectByMap(Map<String, String> map) throws SQLException {
    return sqlMapClient.queryForList("KMORDER_ORDER_CARRY.selectByMap", map);
  }

  /**
   * 查询结转最近的时间
   * 
   * @param operator
   * @return
   * @throws SQLException
   */
  @Override
  public Date queryMaxCreateDate(String operator) throws SQLException {
    return (Date) sqlMapClient.queryForObject("KMORDER_ORDER_CARRY.SQL_QUERY_MAX_CREATE_DATE",
        operator);
  }
}
