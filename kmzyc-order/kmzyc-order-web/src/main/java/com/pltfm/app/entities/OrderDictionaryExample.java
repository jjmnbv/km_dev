package com.pltfm.app.entities;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class OrderDictionaryExample implements Serializable {
  private static final long serialVersionUID = 1L;
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.ORDER_DICTIONARY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.ORDER_DICTIONARY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_DICTIONARY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public OrderDictionaryExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_DICTIONARY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  protected OrderDictionaryExample(OrderDictionaryExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_DICTIONARY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_DICTIONARY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_DICTIONARY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_DICTIONARY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_DICTIONARY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_DICTIONARY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_DICTIONARY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * KMORDER.ORDER_DICTIONARY
   * 
   * @ibatorgenerated Mon Jul 29 11:23:58 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    public Criteria andOrder_dictionary_idIsNull() {
      addCriterion("ORDER_DICTIONARY_ID is null");
      return this;
    }

    public Criteria andOrder_dictionary_idIsNotNull() {
      addCriterion("ORDER_DICTIONARY_ID is not null");
      return this;
    }

    public Criteria andOrder_dictionary_idEqualTo(long value) {
      addCriterion("ORDER_DICTIONARY_ID =", new Long(value), "order_dictionary_id");
      return this;
    }

    public Criteria andOrder_dictionary_idNotEqualTo(long value) {
      addCriterion("ORDER_DICTIONARY_ID <>", new Long(value), "order_dictionary_id");
      return this;
    }

    public Criteria andOrder_dictionary_idGreaterThan(long value) {
      addCriterion("ORDER_DICTIONARY_ID >", new Long(value), "order_dictionary_id");
      return this;
    }

    public Criteria andOrder_dictionary_idGreaterThanOrEqualTo(long value) {
      addCriterion("ORDER_DICTIONARY_ID >=", new Long(value), "order_dictionary_id");
      return this;
    }

    public Criteria andOrder_dictionary_idLessThan(long value) {
      addCriterion("ORDER_DICTIONARY_ID <", new Long(value), "order_dictionary_id");
      return this;
    }

    public Criteria andOrder_dictionary_idLessThanOrEqualTo(long value) {
      addCriterion("ORDER_DICTIONARY_ID <=", new Long(value), "order_dictionary_id");
      return this;
    }

    public Criteria andOrder_dictionary_idIn(List values) {
      addCriterion("ORDER_DICTIONARY_ID in", values, "order_dictionary_id");
      return this;
    }

    public Criteria andOrder_dictionary_idNotIn(List values) {
      addCriterion("ORDER_DICTIONARY_ID not in", values, "order_dictionary_id");
      return this;
    }

    public Criteria andOrder_dictionary_idBetween(long value1, long value2) {
      addCriterion("ORDER_DICTIONARY_ID between", new Long(value1), new Long(value2),
          "order_dictionary_id");
      return this;
    }

    public Criteria andOrder_dictionary_idNotBetween(long value1, long value2) {
      addCriterion("ORDER_DICTIONARY_ID not between", new Long(value1), new Long(value2),
          "order_dictionary_id");
      return this;
    }

    public Criteria andOrderDictionaryTypeIsNull() {
      addCriterion("ORDER_DICTIONARY_TYPE is null");
      return this;
    }

    public Criteria andOrderDictionaryTypeIsNotNull() {
      addCriterion("ORDER_DICTIONARY_TYPE is not null");
      return this;
    }

    public Criteria andOrderDictionaryTypeEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_TYPE =", value, "orderDictionaryType");
      return this;
    }

    public Criteria andOrderDictionaryTypeNotEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_TYPE <>", value, "orderDictionaryType");
      return this;
    }

    public Criteria andOrderDictionaryTypeGreaterThan(String value) {
      addCriterion("ORDER_DICTIONARY_TYPE >", value, "orderDictionaryType");
      return this;
    }

    public Criteria andOrderDictionaryTypeGreaterThanOrEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_TYPE >=", value, "orderDictionaryType");
      return this;
    }

    public Criteria andOrderDictionaryTypeLessThan(String value) {
      addCriterion("ORDER_DICTIONARY_TYPE <", value, "orderDictionaryType");
      return this;
    }

    public Criteria andOrderDictionaryTypeLessThanOrEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_TYPE <=", value, "orderDictionaryType");
      return this;
    }

    public Criteria andOrderDictionaryTypeIn(List values) {
      addCriterion("ORDER_DICTIONARY_TYPE in", values, "orderDictionaryType");
      return this;
    }

    public Criteria andOrderDictionaryTypeNotIn(List values) {
      addCriterion("ORDER_DICTIONARY_TYPE not in", values, "orderDictionaryType");
      return this;
    }

    public Criteria andOrderDictionaryTypeBetween(String value1, String value2) {
      addCriterion("ORDER_DICTIONARY_TYPE between", value1, value2, "orderDictionaryType");
      return this;
    }

    public Criteria andOrderDictionaryTypeNotBetween(String value1, String value2) {
      addCriterion("ORDER_DICTIONARY_TYPE not between", value1, value2, "orderDictionaryType");
      return this;
    }

    public Criteria andOrderDictionaryKeyIsNull() {
      addCriterion("ORDER_DICTIONARY_KEY is null");
      return this;
    }

    public Criteria andOrderDictionaryKeyIsNotNull() {
      addCriterion("ORDER_DICTIONARY_KEY is not null");
      return this;
    }

    public Criteria andOrderDictionaryKeyEqualTo(Long value) {
      addCriterion("ORDER_DICTIONARY_KEY =", value, "orderDictionaryKey");
      return this;
    }

    public Criteria andOrderDictionaryKeyNotEqualTo(Long value) {
      addCriterion("ORDER_DICTIONARY_KEY <>", value, "orderDictionaryKey");
      return this;
    }

    public Criteria andOrderDictionaryKeyGreaterThan(Long value) {
      addCriterion("ORDER_DICTIONARY_KEY >", value, "orderDictionaryKey");
      return this;
    }

    public Criteria andOrderDictionaryKeyGreaterThanOrEqualTo(Long value) {
      addCriterion("ORDER_DICTIONARY_KEY >=", value, "orderDictionaryKey");
      return this;
    }

    public Criteria andOrderDictionaryKeyLessThan(Long value) {
      addCriterion("ORDER_DICTIONARY_KEY <", value, "orderDictionaryKey");
      return this;
    }

    public Criteria andOrderDictionaryKeyLessThanOrEqualTo(Long value) {
      addCriterion("ORDER_DICTIONARY_KEY <=", value, "orderDictionaryKey");
      return this;
    }

    public Criteria andOrderDictionaryKeyIn(List values) {
      addCriterion("ORDER_DICTIONARY_KEY in", values, "orderDictionaryKey");
      return this;
    }

    public Criteria andOrderDictionaryKeyNotIn(List values) {
      addCriterion("ORDER_DICTIONARY_KEY not in", values, "orderDictionaryKey");
      return this;
    }

    public Criteria andOrderDictionaryKeyBetween(Long value1, Long value2) {
      addCriterion("ORDER_DICTIONARY_KEY between", value1, value2, "orderDictionaryKey");
      return this;
    }

    public Criteria andOrderDictionaryKeyNotBetween(Long value1, Long value2) {
      addCriterion("ORDER_DICTIONARY_KEY not between", value1, value2, "orderDictionaryKey");
      return this;
    }

    public Criteria andOrderDictionaryCodeIsNull() {
      addCriterion("ORDER_DICTIONARY_CODE is null");
      return this;
    }

    public Criteria andOrderDictionaryCodeIsNotNull() {
      addCriterion("ORDER_DICTIONARY_CODE is not null");
      return this;
    }

    public Criteria andOrderDictionaryCodeEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_CODE =", value, "orderDictionaryCode");
      return this;
    }

    public Criteria andOrderDictionaryCodeNotEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_CODE <>", value, "orderDictionaryCode");
      return this;
    }

    public Criteria andOrderDictionaryCodeGreaterThan(String value) {
      addCriterion("ORDER_DICTIONARY_CODE >", value, "orderDictionaryCode");
      return this;
    }

    public Criteria andOrderDictionaryCodeGreaterThanOrEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_CODE >=", value, "orderDictionaryCode");
      return this;
    }

    public Criteria andOrderDictionaryCodeLessThan(String value) {
      addCriterion("ORDER_DICTIONARY_CODE <", value, "orderDictionaryCode");
      return this;
    }

    public Criteria andOrderDictionaryCodeLessThanOrEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_CODE <=", value, "orderDictionaryCode");
      return this;
    }

    public Criteria andOrderDictionaryCodeLike(String value) {
      addCriterion("ORDER_DICTIONARY_CODE like", value, "orderDictionaryCode");
      return this;
    }

    public Criteria andOrderDictionaryCodeNotLike(String value) {
      addCriterion("ORDER_DICTIONARY_CODE not like", value, "orderDictionaryCode");
      return this;
    }

    public Criteria andOrderDictionaryCodeIn(List values) {
      addCriterion("ORDER_DICTIONARY_CODE in", values, "orderDictionaryCode");
      return this;
    }

    public Criteria andOrderDictionaryCodeNotIn(List values) {
      addCriterion("ORDER_DICTIONARY_CODE not in", values, "orderDictionaryCode");
      return this;
    }

    public Criteria andOrderDictionaryCodeBetween(String value1, String value2) {
      addCriterion("ORDER_DICTIONARY_CODE between", value1, value2, "orderDictionaryCode");
      return this;
    }

    public Criteria andOrderDictionaryCodeNotBetween(String value1, String value2) {
      addCriterion("ORDER_DICTIONARY_CODE not between", value1, value2, "orderDictionaryCode");
      return this;
    }

    public Criteria andOrderDictionaryValueIsNull() {
      addCriterion("ORDER_DICTIONARY_VALUE is null");
      return this;
    }

    public Criteria andOrderDictionaryValueIsNotNull() {
      addCriterion("ORDER_DICTIONARY_VALUE is not null");
      return this;
    }

    public Criteria andOrderDictionaryValueEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_VALUE =", value, "orderDictionaryValue");
      return this;
    }

    public Criteria andOrderDictionaryValueNotEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_VALUE <>", value, "orderDictionaryValue");
      return this;
    }

    public Criteria andOrderDictionaryValueGreaterThan(String value) {
      addCriterion("ORDER_DICTIONARY_VALUE >", value, "orderDictionaryValue");
      return this;
    }

    public Criteria andOrderDictionaryValueGreaterThanOrEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_VALUE >=", value, "orderDictionaryValue");
      return this;
    }

    public Criteria andOrderDictionaryValueLessThan(String value) {
      addCriterion("ORDER_DICTIONARY_VALUE <", value, "orderDictionaryValue");
      return this;
    }

    public Criteria andOrderDictionaryValueLessThanOrEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_VALUE <=", value, "orderDictionaryValue");
      return this;
    }

    public Criteria andOrderDictionaryValueLike(String value) {
      addCriterion("ORDER_DICTIONARY_VALUE like", value, "orderDictionaryValue");
      return this;
    }

    public Criteria andOrderDictionaryValueNotLike(String value) {
      addCriterion("ORDER_DICTIONARY_VALUE not like", value, "orderDictionaryValue");
      return this;
    }

    public Criteria andOrderDictionaryValueIn(List values) {
      addCriterion("ORDER_DICTIONARY_VALUE in", values, "orderDictionaryValue");
      return this;
    }

    public Criteria andOrderDictionaryValueNotIn(List values) {
      addCriterion("ORDER_DICTIONARY_VALUE not in", values, "orderDictionaryValue");
      return this;
    }

    public Criteria andOrderDictionaryValueBetween(String value1, String value2) {
      addCriterion("ORDER_DICTIONARY_VALUE between", value1, value2, "orderDictionaryValue");
      return this;
    }

    public Criteria andOrderDictionaryValueNotBetween(String value1, String value2) {
      addCriterion("ORDER_DICTIONARY_VALUE not between", value1, value2, "orderDictionaryValue");
      return this;
    }

    public Criteria andOrderDictionaryCommentIsNull() {
      addCriterion("ORDER_DICTIONARY_COMMENT is null");
      return this;
    }

    public Criteria andOrderDictionaryCommentIsNotNull() {
      addCriterion("ORDER_DICTIONARY_COMMENT is not null");
      return this;
    }

    public Criteria andOrderDictionaryCommentEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_COMMENT =", value, "orderDictionaryComment");
      return this;
    }

    public Criteria andOrderDictionaryCommentNotEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_COMMENT <>", value, "orderDictionaryComment");
      return this;
    }

    public Criteria andOrderDictionaryCommentGreaterThan(String value) {
      addCriterion("ORDER_DICTIONARY_COMMENT >", value, "orderDictionaryComment");
      return this;
    }

    public Criteria andOrderDictionaryCommentGreaterThanOrEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_COMMENT >=", value, "orderDictionaryComment");
      return this;
    }

    public Criteria andOrderDictionaryCommentLessThan(String value) {
      addCriterion("ORDER_DICTIONARY_COMMENT <", value, "orderDictionaryComment");
      return this;
    }

    public Criteria andOrderDictionaryCommentLessThanOrEqualTo(String value) {
      addCriterion("ORDER_DICTIONARY_COMMENT <=", value, "orderDictionaryComment");
      return this;
    }

    public Criteria andOrderDictionaryCommentLike(String value) {
      addCriterion("ORDER_DICTIONARY_COMMENT like", value, "orderDictionaryComment");
      return this;
    }

    public Criteria andOrderDictionaryCommentNotLike(String value) {
      addCriterion("ORDER_DICTIONARY_COMMENT not like", value, "orderDictionaryComment");
      return this;
    }

    public Criteria andOrderDictionaryCommentIn(List values) {
      addCriterion("ORDER_DICTIONARY_COMMENT in", values, "orderDictionaryComment");
      return this;
    }

    public Criteria andOrderDictionaryCommentNotIn(List values) {
      addCriterion("ORDER_DICTIONARY_COMMENT not in", values, "orderDictionaryComment");
      return this;
    }

    public Criteria andOrderDictionaryCommentBetween(String value1, String value2) {
      addCriterion("ORDER_DICTIONARY_COMMENT between", value1, value2, "orderDictionaryComment");
      return this;
    }

    public Criteria andOrderDictionaryCommentNotBetween(String value1, String value2) {
      addCriterion("ORDER_DICTIONARY_COMMENT not between", value1, value2, "orderDictionaryComment");
      return this;
    }
  }
}
