package com.pltfm.app.dao;

import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import com.pltfm.app.entities.OrderAlter;
import com.pltfm.app.entities.OrderAlterExample;
import com.pltfm.app.vobject.OrderAlterVo;

@SuppressWarnings("unchecked")
public interface OrderAlterDAO {
  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER
   * 
   * @ibatorgenerated Fri Nov 29 13:38:32 CST 2013
   */
  int countByExample(OrderAlterExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER
   * 
   * @ibatorgenerated Fri Nov 29 13:38:32 CST 2013
   */
  int deleteByExample(OrderAlterExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER
   * 
   * @ibatorgenerated Fri Nov 29 13:38:32 CST 2013
   */
  int deleteByPrimaryKey(Long orderAlterId) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER
   * 
   * @ibatorgenerated Fri Nov 29 13:38:32 CST 2013
   */
  Long insert(OrderAlter record) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER
   * 
   * @ibatorgenerated Fri Nov 29 13:38:32 CST 2013
   */
  Long insertSelective(OrderAlter record) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER
   * 
   * @ibatorgenerated Fri Nov 29 13:38:32 CST 2013
   */
  List selectByExample(OrderAlterExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER
   * 
   * @ibatorgenerated Fri Nov 29 13:38:32 CST 2013
   */
  OrderAlter selectByPrimaryKey(Long orderAlterId) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER
   * 
   * @ibatorgenerated Fri Nov 29 13:38:32 CST 2013
   */
  int updateByExampleSelective(OrderAlter record, OrderAlterExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER
   * 
   * @ibatorgenerated Fri Nov 29 13:38:32 CST 2013
   */
  int updateByExample(OrderAlter record, OrderAlterExample example) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER
   * 
   * @ibatorgenerated Fri Nov 29 13:38:32 CST 2013
   */
  int updateByPrimaryKeySelective(OrderAlter record) throws SQLException;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER
   * 
   * @ibatorgenerated Fri Nov 29 13:38:32 CST 2013
   */
  int updateByPrimaryKey(OrderAlter record) throws SQLException;

  /**
   * Map方式查询退换货列表
   */
  List selectByMap(Map<String, Object> map) throws SQLException;

  /**
   * Map方式查询退换货计数
   */
  Integer countByMap(Map<String, Object> map) throws SQLException;

  /**
   * 检查是否退换货中
   * 
   * @param orderId
   * @return
   * @throws SQLException
   */
  Boolean checkIsReturning(Long orderItemId) throws SQLException;

  /**
   * 获取
   */
  OrderAlter selectByAlterCode(String orderAlterCode) throws SQLException;

  void autoSure(Integer orderAutoSureTime) throws SQLException;

  void autoCancel(Integer orderAutoSureTime) throws SQLException;

  List<OrderAlterVo> selectHistory(String orderCode) throws SQLException;

  Integer selectFareAdditional(String orderAlterCode) throws SQLException;

  BigDecimal getReturnMoneySum(Map map) throws SQLException;

  /**
   * Map方式查询退换货列表
   */
  List selectOrderReturnByMap(Map<String, Object> map) throws SQLException;

  /**
   * 
   * 查询供应商所有退换货订单列表信息
   * 
   * @param map
   * @return
   * @throws SQLException
   */
  public List<Map<String, Object>> querySellerAlterOrderExportData(Map<String, Object> map)
      throws SQLException;
  
  /**
   * 取得某订单下累计退货返运费值
   * @param orderCode
   * @return
   * @throws SQLException
   */
  public BigDecimal selectReturnFare(String orderCode) throws SQLException;
  



  /**
   * 根据退换货单号
   * 
   */
  List<OrderAlter> queryAlterOrderInfoSync2Base(List<String> lstAlterCode) throws SQLException;
  /**
   * 申请退换货前判断
   * @param map
   * @return true -- 可以新增一条退换货记录
   * @throws SQLException
   */
  public Boolean checkDate(Map<String,Object> map) throws SQLException;

}
