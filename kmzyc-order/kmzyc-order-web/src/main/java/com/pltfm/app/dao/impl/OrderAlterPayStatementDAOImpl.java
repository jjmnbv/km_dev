package com.pltfm.app.dao.impl;

import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Repository;

import com.pltfm.app.dao.BaseDAO;
import com.pltfm.app.dao.OrderAlterPayStatementDAO;
import com.pltfm.app.entities.OrderAlterPayStatement;
import com.pltfm.app.entities.OrderAlterPayStatementExample;
import com.pltfm.app.entities.OrderPayStatement;

@SuppressWarnings("unchecked")
@Repository("orderAlterPayStatementDAO")
@Scope("singleton")
public class OrderAlterPayStatementDAOImpl extends BaseDAO implements OrderAlterPayStatementDAO {
  // /**
  // * This field was generated by Apache iBATIS ibator.
  // * This field corresponds to the database table
  // KMORDER.ORDER_ALTER_PAY_STATEMENT
  // *
  // * @ibatorgenerated Thu Aug 29 15:32:59 CST 2013
  // */
  // private SqlMapClient sqlMapClient;
  //
  // /**
  // * This method was generated by Apache iBATIS ibator.
  // * This method corresponds to the database table
  // KMORDER.ORDER_ALTER_PAY_STATEMENT
  // *
  // * @ibatorgenerated Thu Aug 29 15:32:59 CST 2013
  // */
  // public OrderAlterPayStatementDAOImpl(SqlMapClient sqlMapClient) {
  // super();
  // this.sqlMapClient = sqlMapClient;
  // }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER_PAY_STATEMENT
   * 
   * @ibatorgenerated Thu Sep 05 18:38:07 CST 2013
   */
  public int countByExample(OrderAlterPayStatementExample example) throws SQLException {
    Integer count =
        (Integer) sqlMapClient.queryForObject(
            "KMORDER_ORDER_ALTER_PAY_STATEMENT.ibatorgenerated_countByExample", example);
    return count.intValue();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER_PAY_STATEMENT
   * 
   * @ibatorgenerated Thu Sep 05 18:38:07 CST 2013
   */
  public int deleteByExample(OrderAlterPayStatementExample example) throws SQLException {
    int rows =
        sqlMapClient.delete("KMORDER_ORDER_ALTER_PAY_STATEMENT.ibatorgenerated_deleteByExample",
            example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER_PAY_STATEMENT
   * 
   * @ibatorgenerated Thu Sep 05 18:38:07 CST 2013
   */
  public int deleteByPrimaryKey(Long payStatementNo) throws SQLException {
    OrderAlterPayStatement key = new OrderAlterPayStatement();
    key.setPayStatementNo(payStatementNo);
    int rows =
        sqlMapClient.delete("KMORDER_ORDER_ALTER_PAY_STATEMENT.ibatorgenerated_deleteByPrimaryKey",
            key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER_PAY_STATEMENT
   * 
   * @ibatorgenerated Thu Sep 05 18:38:07 CST 2013
   */
  public Long insert(OrderAlterPayStatement record) throws SQLException {
    Object newKey =
        sqlMapClient.insert("KMORDER_ORDER_ALTER_PAY_STATEMENT.ibatorgenerated_insert", record);
    return (Long) newKey;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER_PAY_STATEMENT
   * 
   * @ibatorgenerated Thu Sep 05 18:38:07 CST 2013
   */
  public Long insertSelective(OrderAlterPayStatement record) throws SQLException {
    Object newKey =
        sqlMapClient.insert("KMORDER_ORDER_ALTER_PAY_STATEMENT.ibatorgenerated_insertSelective",
            record);
    return (Long) newKey;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER_PAY_STATEMENT
   * 
   * @ibatorgenerated Thu Sep 05 18:38:07 CST 2013
   */
  public List selectByExample(OrderAlterPayStatementExample example) throws SQLException {
    List list =
        sqlMapClient.queryForList(
            "KMORDER_ORDER_ALTER_PAY_STATEMENT.ibatorgenerated_selectByExample", example);
    return list;
  }
  
  public List selectForYs(Map map) throws SQLException {
    List list =
        sqlMapClient.queryForList(
            "KMORDER_ORDER_ALTER_PAY_STATEMENT.SQL_QUERY_ORDER_ALTER_PAY_STATEMENT2", map);
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER_PAY_STATEMENT
   * 
   * @ibatorgenerated Thu Sep 05 18:38:07 CST 2013
   */
  public OrderAlterPayStatement selectByPrimaryKey(Long payStatementNo) throws SQLException {
    OrderAlterPayStatement key = new OrderAlterPayStatement();
    key.setPayStatementNo(payStatementNo);
    OrderAlterPayStatement record =
        (OrderAlterPayStatement) sqlMapClient.queryForObject(
            "KMORDER_ORDER_ALTER_PAY_STATEMENT.ibatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER_PAY_STATEMENT
   * 
   * @ibatorgenerated Thu Sep 05 18:38:07 CST 2013
   */
  public int updateByExampleSelective(OrderAlterPayStatement record,
      OrderAlterPayStatementExample example) throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows =
        sqlMapClient.update(
            "KMORDER_ORDER_ALTER_PAY_STATEMENT.ibatorgenerated_updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER_PAY_STATEMENT
   * 
   * @ibatorgenerated Thu Sep 05 18:38:07 CST 2013
   */
  public int updateByExample(OrderAlterPayStatement record, OrderAlterPayStatementExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows =
        sqlMapClient.update("KMORDER_ORDER_ALTER_PAY_STATEMENT.ibatorgenerated_updateByExample",
            parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER_PAY_STATEMENT
   * 
   * @ibatorgenerated Thu Sep 05 18:38:07 CST 2013
   */
  public int updateByPrimaryKeySelective(OrderAlterPayStatement record) throws SQLException {
    int rows =
        sqlMapClient
            .update(
                "KMORDER_ORDER_ALTER_PAY_STATEMENT.ibatorgenerated_updateByPrimaryKeySelective",
                record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ALTER_PAY_STATEMENT
   * 
   * @ibatorgenerated Thu Sep 05 18:38:07 CST 2013
   */
  public int updateByPrimaryKey(OrderAlterPayStatement record) throws SQLException {
    int rows =
        sqlMapClient.update("KMORDER_ORDER_ALTER_PAY_STATEMENT.ibatorgenerated_updateByPrimaryKey",
            record);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * KMORDER.ORDER_ALTER_PAY_STATEMENT
   * 
   * @ibatorgenerated Thu Sep 05 18:38:07 CST 2013
   */
  private static class UpdateByExampleParms extends OrderAlterPayStatementExample {
    private static final long serialVersionUID = 1L;
    private Object record;

    public UpdateByExampleParms(Object record, OrderAlterPayStatementExample example) {
      super(example);
      this.record = record;
    }

    @SuppressWarnings("unused")
    public Object getRecord() {
      return record;
    }
  }

  @Override
  public BigDecimal getOrderAlterPay(Map map) throws SQLException {
    BigDecimal pay =
        (BigDecimal) sqlMapClient.queryForObject("KMORDER_ORDER_ALTER_PAY_STATEMENT.getOrderPay",
            map);
    return null == pay ? BigDecimal.ZERO : pay;
  }

  @Override
  public Boolean checkIsAdditional(String orderAlterCode) throws SQLException {
    Integer result =
        (Integer) sqlMapClient.queryForObject(
            "KMORDER_ORDER_ALTER_PAY_STATEMENT.checkIsAdditional", orderAlterCode);
    return null == result ? Boolean.FALSE : (0 != result.intValue());
  }

  @Override
  public BigDecimal getAlreadyRefundMoneyByPayMethod(Map map) throws SQLException {
    BigDecimal pay =
        (BigDecimal) sqlMapClient.queryForObject(
            "KMORDER_ORDER_ALTER_PAY_STATEMENT.getAlreadyRefundMoneyByPayMethod", map);
    return null == pay ? BigDecimal.ZERO : pay;
  }

  @Override
  public BigDecimal needToRefund(Map<String, Object> map) throws SQLException {
    BigDecimal reserveNeedToRefund =
        (BigDecimal) sqlMapClient.queryForObject(
            "KMORDER_ORDER_ALTER_PAY_STATEMENT.getNeedToRefundMoney", map);
    return null == reserveNeedToRefund ? BigDecimal.ZERO : reserveNeedToRefund;

  }
  
  @Override
  public List<OrderAlterPayStatement> queryOrderAlterPayStatement(Map<String, Object> params)
      throws SQLException {
    return (List<OrderAlterPayStatement>) sqlMapClient.queryForList(
        "KMORDER_ORDER_ALTER_PAY_STATEMENT.SQL_QUERY_ORDER_ALTER_PAY_STATEMENT", params);
  }
  
  @Override
  public List<OrderAlterPayStatement> queryOrderAlterPayStatementYS(Map<String, Object> params)
      throws SQLException {
    return (List<OrderAlterPayStatement>) sqlMapClient.queryForList(
        "KMORDER_ORDER_ALTER_PAY_STATEMENT.SQL_QUERY_ORDER_ALTER_PAY_STATEMENT_YS", params);
  }

}
