package com.pltfm.app.entities;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class OrderAssessInfoExample implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  protected String orderByClause;
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public OrderAssessInfoExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  protected OrderAssessInfoExample(OrderAssessInfoExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * KMORDER.ORDER_ASSESS_INFO
   * 
   * @ibatorgenerated Mon Sep 09 19:13:09 CST 2013
   */
  public static class Criteria {
    protected List criteriaWithoutValue;
    protected List criteriaWithSingleValue;
    protected List criteriaWithListValue;
    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2
          .getTime()), property);
    }

    public Criteria andAssessInfoIdIsNull() {
      addCriterion("ASSESS_INFO_ID is null");
      return this;
    }

    public Criteria andAssessInfoIdIsNotNull() {
      addCriterion("ASSESS_INFO_ID is not null");
      return this;
    }

    public Criteria andAssessInfoIdEqualTo(Long value) {
      addCriterion("ASSESS_INFO_ID =", value, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdNotEqualTo(Long value) {
      addCriterion("ASSESS_INFO_ID <>", value, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdGreaterThan(Long value) {
      addCriterion("ASSESS_INFO_ID >", value, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdGreaterThanOrEqualTo(Long value) {
      addCriterion("ASSESS_INFO_ID >=", value, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdLessThan(Long value) {
      addCriterion("ASSESS_INFO_ID <", value, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdLessThanOrEqualTo(Long value) {
      addCriterion("ASSESS_INFO_ID <=", value, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdIn(List values) {
      addCriterion("ASSESS_INFO_ID in", values, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdNotIn(List values) {
      addCriterion("ASSESS_INFO_ID not in", values, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdBetween(Long value1, Long value2) {
      addCriterion("ASSESS_INFO_ID between", value1, value2, "assessInfoId");
      return this;
    }

    public Criteria andAssessInfoIdNotBetween(Long value1, Long value2) {
      addCriterion("ASSESS_INFO_ID not between", value1, value2, "assessInfoId");
      return this;
    }

    public Criteria andAssessMarkIsNull() {
      addCriterion("ASSESS_MARK is null");
      return this;
    }

    public Criteria andAssessMarkIsNotNull() {
      addCriterion("ASSESS_MARK is not null");
      return this;
    }

    public Criteria andAssessMarkEqualTo(Long value) {
      addCriterion("ASSESS_MARK =", value, "assessMark");
      return this;
    }

    public Criteria andAssessMarkNotEqualTo(Long value) {
      addCriterion("ASSESS_MARK <>", value, "assessMark");
      return this;
    }

    public Criteria andAssessMarkGreaterThan(Long value) {
      addCriterion("ASSESS_MARK >", value, "assessMark");
      return this;
    }

    public Criteria andAssessMarkGreaterThanOrEqualTo(Long value) {
      addCriterion("ASSESS_MARK >=", value, "assessMark");
      return this;
    }

    public Criteria andAssessMarkLessThan(Long value) {
      addCriterion("ASSESS_MARK <", value, "assessMark");
      return this;
    }

    public Criteria andAssessMarkLessThanOrEqualTo(Long value) {
      addCriterion("ASSESS_MARK <=", value, "assessMark");
      return this;
    }

    public Criteria andAssessMarkIn(List values) {
      addCriterion("ASSESS_MARK in", values, "assessMark");
      return this;
    }

    public Criteria andAssessMarkNotIn(List values) {
      addCriterion("ASSESS_MARK not in", values, "assessMark");
      return this;
    }

    public Criteria andAssessMarkBetween(Long value1, Long value2) {
      addCriterion("ASSESS_MARK between", value1, value2, "assessMark");
      return this;
    }

    public Criteria andAssessMarkNotBetween(Long value1, Long value2) {
      addCriterion("ASSESS_MARK not between", value1, value2, "assessMark");
      return this;
    }

    public Criteria andGuestNumIsNull() {
      addCriterion("GUEST_NUM is null");
      return this;
    }

    public Criteria andGuestNumIsNotNull() {
      addCriterion("GUEST_NUM is not null");
      return this;
    }

    public Criteria andGuestNumEqualTo(String value) {
      addCriterion("GUEST_NUM =", value, "guestNum");
      return this;
    }

    public Criteria andGuestNumNotEqualTo(String value) {
      addCriterion("GUEST_NUM <>", value, "guestNum");
      return this;
    }

    public Criteria andGuestNumGreaterThan(String value) {
      addCriterion("GUEST_NUM >", value, "guestNum");
      return this;
    }

    public Criteria andGuestNumGreaterThanOrEqualTo(String value) {
      addCriterion("GUEST_NUM >=", value, "guestNum");
      return this;
    }

    public Criteria andGuestNumLessThan(String value) {
      addCriterion("GUEST_NUM <", value, "guestNum");
      return this;
    }

    public Criteria andGuestNumLessThanOrEqualTo(String value) {
      addCriterion("GUEST_NUM <=", value, "guestNum");
      return this;
    }

    public Criteria andGuestNumLike(String value) {
      addCriterion("GUEST_NUM like", value, "guestNum");
      return this;
    }

    public Criteria andGuestNumNotLike(String value) {
      addCriterion("GUEST_NUM not like", value, "guestNum");
      return this;
    }

    public Criteria andGuestNumIn(List values) {
      addCriterion("GUEST_NUM in", values, "guestNum");
      return this;
    }

    public Criteria andGuestNumNotIn(List values) {
      addCriterion("GUEST_NUM not in", values, "guestNum");
      return this;
    }

    public Criteria andGuestNumBetween(String value1, String value2) {
      addCriterion("GUEST_NUM between", value1, value2, "guestNum");
      return this;
    }

    public Criteria andGuestNumNotBetween(String value1, String value2) {
      addCriterion("GUEST_NUM not between", value1, value2, "guestNum");
      return this;
    }

    public Criteria andAssessContextIsNull() {
      addCriterion("ASSESS_CONTEXT is null");
      return this;
    }

    public Criteria andAssessContextIsNotNull() {
      addCriterion("ASSESS_CONTEXT is not null");
      return this;
    }

    public Criteria andAssessContextEqualTo(String value) {
      addCriterion("ASSESS_CONTEXT =", value, "assessContext");
      return this;
    }

    public Criteria andAssessContextNotEqualTo(String value) {
      addCriterion("ASSESS_CONTEXT <>", value, "assessContext");
      return this;
    }

    public Criteria andAssessContextGreaterThan(String value) {
      addCriterion("ASSESS_CONTEXT >", value, "assessContext");
      return this;
    }

    public Criteria andAssessContextGreaterThanOrEqualTo(String value) {
      addCriterion("ASSESS_CONTEXT >=", value, "assessContext");
      return this;
    }

    public Criteria andAssessContextLessThan(String value) {
      addCriterion("ASSESS_CONTEXT <", value, "assessContext");
      return this;
    }

    public Criteria andAssessContextLessThanOrEqualTo(String value) {
      addCriterion("ASSESS_CONTEXT <=", value, "assessContext");
      return this;
    }

    public Criteria andAssessContextLike(String value) {
      addCriterion("ASSESS_CONTEXT like", value, "assessContext");
      return this;
    }

    public Criteria andAssessContextNotLike(String value) {
      addCriterion("ASSESS_CONTEXT not like", value, "assessContext");
      return this;
    }

    public Criteria andAssessContextIn(List values) {
      addCriterion("ASSESS_CONTEXT in", values, "assessContext");
      return this;
    }

    public Criteria andAssessContextNotIn(List values) {
      addCriterion("ASSESS_CONTEXT not in", values, "assessContext");
      return this;
    }

    public Criteria andAssessContextBetween(String value1, String value2) {
      addCriterion("ASSESS_CONTEXT between", value1, value2, "assessContext");
      return this;
    }

    public Criteria andAssessContextNotBetween(String value1, String value2) {
      addCriterion("ASSESS_CONTEXT not between", value1, value2, "assessContext");
      return this;
    }

    public Criteria andOrderIdIsNull() {
      addCriterion("ORDER_ID is null");
      return this;
    }

    public Criteria andOrderIdIsNotNull() {
      addCriterion("ORDER_ID is not null");
      return this;
    }

    public Criteria andOrderIdEqualTo(Long value) {
      addCriterion("ORDER_ID =", value, "orderId");
      return this;
    }

    public Criteria andOrderIdNotEqualTo(Long value) {
      addCriterion("ORDER_ID <>", value, "orderId");
      return this;
    }

    public Criteria andOrderIdGreaterThan(Long value) {
      addCriterion("ORDER_ID >", value, "orderId");
      return this;
    }

    public Criteria andOrderIdGreaterThanOrEqualTo(Long value) {
      addCriterion("ORDER_ID >=", value, "orderId");
      return this;
    }

    public Criteria andOrderIdLessThan(Long value) {
      addCriterion("ORDER_ID <", value, "orderId");
      return this;
    }

    public Criteria andOrderIdLessThanOrEqualTo(Long value) {
      addCriterion("ORDER_ID <=", value, "orderId");
      return this;
    }

    public Criteria andOrderIdIn(List values) {
      addCriterion("ORDER_ID in", values, "orderId");
      return this;
    }

    public Criteria andOrderIdNotIn(List values) {
      addCriterion("ORDER_ID not in", values, "orderId");
      return this;
    }

    public Criteria andOrderIdBetween(Long value1, Long value2) {
      addCriterion("ORDER_ID between", value1, value2, "orderId");
      return this;
    }

    public Criteria andOrderIdNotBetween(Long value1, Long value2) {
      addCriterion("ORDER_ID not between", value1, value2, "orderId");
      return this;
    }

    public Criteria andCreateDateIsNull() {
      addCriterion("CREATE_DATE is null");
      return this;
    }

    public Criteria andCreateDateIsNotNull() {
      addCriterion("CREATE_DATE is not null");
      return this;
    }

    public Criteria andCreateDateEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
      return this;
    }

    public Criteria andCreateDateNotEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
      return this;
    }

    public Criteria andCreateDateGreaterThan(Date value) {
      addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
      return this;
    }

    public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
      return this;
    }

    public Criteria andCreateDateLessThan(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
      return this;
    }

    public Criteria andCreateDateLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
      return this;
    }

    public Criteria andCreateDateIn(List values) {
      addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
      return this;
    }

    public Criteria andCreateDateNotIn(List values) {
      addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
      return this;
    }

    public Criteria andCreateDateBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
      return this;
    }

    public Criteria andCreateDateNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
      return this;
    }

    public Criteria andOrderCodeIsNull() {
      addCriterion("ORDER_CODE is null");
      return this;
    }

    public Criteria andOrderCodeIsNotNull() {
      addCriterion("ORDER_CODE is not null");
      return this;
    }

    public Criteria andOrderCodeEqualTo(String value) {
      addCriterion("ORDER_CODE =", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotEqualTo(String value) {
      addCriterion("ORDER_CODE <>", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeGreaterThan(String value) {
      addCriterion("ORDER_CODE >", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeGreaterThanOrEqualTo(String value) {
      addCriterion("ORDER_CODE >=", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeLessThan(String value) {
      addCriterion("ORDER_CODE <", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeLessThanOrEqualTo(String value) {
      addCriterion("ORDER_CODE <=", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeLike(String value) {
      addCriterion("ORDER_CODE like", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotLike(String value) {
      addCriterion("ORDER_CODE not like", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeIn(List values) {
      addCriterion("ORDER_CODE in", values, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotIn(List values) {
      addCriterion("ORDER_CODE not in", values, "orderCode");
      return this;
    }

    public Criteria andOrderCodeBetween(String value1, String value2) {
      addCriterion("ORDER_CODE between", value1, value2, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotBetween(String value1, String value2) {
      addCriterion("ORDER_CODE not between", value1, value2, "orderCode");
      return this;
    }
  }
}
