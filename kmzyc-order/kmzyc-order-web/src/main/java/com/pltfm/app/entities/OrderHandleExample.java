package com.pltfm.app.entities;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class OrderHandleExample implements Serializable {
  private static final long serialVersionUID = 1L;
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.ORDER_HANDLE
   * 
   * @ibatorgenerated Mon Feb 17 13:43:09 CST 2014
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.ORDER_HANDLE
   * 
   * @ibatorgenerated Mon Feb 17 13:43:09 CST 2014
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_HANDLE
   * 
   * @ibatorgenerated Mon Feb 17 13:43:09 CST 2014
   */
  public OrderHandleExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_HANDLE
   * 
   * @ibatorgenerated Mon Feb 17 13:43:09 CST 2014
   */
  protected OrderHandleExample(OrderHandleExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_HANDLE
   * 
   * @ibatorgenerated Mon Feb 17 13:43:09 CST 2014
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_HANDLE
   * 
   * @ibatorgenerated Mon Feb 17 13:43:09 CST 2014
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_HANDLE
   * 
   * @ibatorgenerated Mon Feb 17 13:43:09 CST 2014
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_HANDLE
   * 
   * @ibatorgenerated Mon Feb 17 13:43:09 CST 2014
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_HANDLE
   * 
   * @ibatorgenerated Mon Feb 17 13:43:09 CST 2014
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_HANDLE
   * 
   * @ibatorgenerated Mon Feb 17 13:43:09 CST 2014
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.ORDER_HANDLE
   * 
   * @ibatorgenerated Mon Feb 17 13:43:09 CST 2014
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * KMORDER.ORDER_HANDLE
   * 
   * @ibatorgenerated Mon Feb 17 13:43:09 CST 2014
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List dateList = new ArrayList();
      Iterator iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
        String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2
          .getTime()), property);
    }

    public Criteria andHandleNoIsNull() {
      addCriterion("HANDLE_NO is null");
      return this;
    }

    public Criteria andHandleNoIsNotNull() {
      addCriterion("HANDLE_NO is not null");
      return this;
    }

    public Criteria andHandleNoEqualTo(Long value) {
      addCriterion("HANDLE_NO =", value, "handleNo");
      return this;
    }

    public Criteria andHandleNoNotEqualTo(Long value) {
      addCriterion("HANDLE_NO <>", value, "handleNo");
      return this;
    }

    public Criteria andHandleNoGreaterThan(Long value) {
      addCriterion("HANDLE_NO >", value, "handleNo");
      return this;
    }

    public Criteria andHandleNoGreaterThanOrEqualTo(Long value) {
      addCriterion("HANDLE_NO >=", value, "handleNo");
      return this;
    }

    public Criteria andHandleNoLessThan(Long value) {
      addCriterion("HANDLE_NO <", value, "handleNo");
      return this;
    }

    public Criteria andHandleNoLessThanOrEqualTo(Long value) {
      addCriterion("HANDLE_NO <=", value, "handleNo");
      return this;
    }

    public Criteria andHandleNoIn(List values) {
      addCriterion("HANDLE_NO in", values, "handleNo");
      return this;
    }

    public Criteria andHandleNoNotIn(List values) {
      addCriterion("HANDLE_NO not in", values, "handleNo");
      return this;
    }

    public Criteria andHandleNoBetween(Long value1, Long value2) {
      addCriterion("HANDLE_NO between", value1, value2, "handleNo");
      return this;
    }

    public Criteria andHandleNoNotBetween(Long value1, Long value2) {
      addCriterion("HANDLE_NO not between", value1, value2, "handleNo");
      return this;
    }

    public Criteria andOrderCodeIsNull() {
      addCriterion("ORDER_CODE is null");
      return this;
    }

    public Criteria andOrderCodeIsNotNull() {
      addCriterion("ORDER_CODE is not null");
      return this;
    }

    public Criteria andOrderCodeEqualTo(String value) {
      addCriterion("ORDER_CODE =", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotEqualTo(String value) {
      addCriterion("ORDER_CODE <>", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeGreaterThan(String value) {
      addCriterion("ORDER_CODE >", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeGreaterThanOrEqualTo(String value) {
      addCriterion("ORDER_CODE >=", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeLessThan(String value) {
      addCriterion("ORDER_CODE <", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeLessThanOrEqualTo(String value) {
      addCriterion("ORDER_CODE <=", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeLike(String value) {
      addCriterion("ORDER_CODE like", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotLike(String value) {
      addCriterion("ORDER_CODE not like", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeIn(List values) {
      addCriterion("ORDER_CODE in", values, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotIn(List values) {
      addCriterion("ORDER_CODE not in", values, "orderCode");
      return this;
    }

    public Criteria andOrderCodeBetween(String value1, String value2) {
      addCriterion("ORDER_CODE between", value1, value2, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotBetween(String value1, String value2) {
      addCriterion("ORDER_CODE not between", value1, value2, "orderCode");
      return this;
    }

    public Criteria andHandleStateIsNull() {
      addCriterion("HANDLE_STATE is null");
      return this;
    }

    public Criteria andHandleStateIsNotNull() {
      addCriterion("HANDLE_STATE is not null");
      return this;
    }

    public Criteria andHandleStateEqualTo(Short value) {
      addCriterion("HANDLE_STATE =", value, "handleState");
      return this;
    }

    public Criteria andHandleStateNotEqualTo(Short value) {
      addCriterion("HANDLE_STATE <>", value, "handleState");
      return this;
    }

    public Criteria andHandleStateGreaterThan(Short value) {
      addCriterion("HANDLE_STATE >", value, "handleState");
      return this;
    }

    public Criteria andHandleStateGreaterThanOrEqualTo(Short value) {
      addCriterion("HANDLE_STATE >=", value, "handleState");
      return this;
    }

    public Criteria andHandleStateLessThan(Short value) {
      addCriterion("HANDLE_STATE <", value, "handleState");
      return this;
    }

    public Criteria andHandleStateLessThanOrEqualTo(Short value) {
      addCriterion("HANDLE_STATE <=", value, "handleState");
      return this;
    }

    public Criteria andHandleStateIn(List values) {
      addCriterion("HANDLE_STATE in", values, "handleState");
      return this;
    }

    public Criteria andHandleStateNotIn(List values) {
      addCriterion("HANDLE_STATE not in", values, "handleState");
      return this;
    }

    public Criteria andHandleStateBetween(Short value1, Short value2) {
      addCriterion("HANDLE_STATE between", value1, value2, "handleState");
      return this;
    }

    public Criteria andHandleStateNotBetween(Short value1, Short value2) {
      addCriterion("HANDLE_STATE not between", value1, value2, "handleState");
      return this;
    }

    public Criteria andHandleAccountIsNull() {
      addCriterion("HANDLE_ACCOUNT is null");
      return this;
    }

    public Criteria andHandleAccountIsNotNull() {
      addCriterion("HANDLE_ACCOUNT is not null");
      return this;
    }

    public Criteria andHandleAccountEqualTo(String value) {
      addCriterion("HANDLE_ACCOUNT =", value, "handleAccount");
      return this;
    }

    public Criteria andHandleAccountNotEqualTo(String value) {
      addCriterion("HANDLE_ACCOUNT <>", value, "handleAccount");
      return this;
    }

    public Criteria andHandleAccountGreaterThan(String value) {
      addCriterion("HANDLE_ACCOUNT >", value, "handleAccount");
      return this;
    }

    public Criteria andHandleAccountGreaterThanOrEqualTo(String value) {
      addCriterion("HANDLE_ACCOUNT >=", value, "handleAccount");
      return this;
    }

    public Criteria andHandleAccountLessThan(String value) {
      addCriterion("HANDLE_ACCOUNT <", value, "handleAccount");
      return this;
    }

    public Criteria andHandleAccountLessThanOrEqualTo(String value) {
      addCriterion("HANDLE_ACCOUNT <=", value, "handleAccount");
      return this;
    }

    public Criteria andHandleAccountLike(String value) {
      addCriterion("HANDLE_ACCOUNT like", value, "handleAccount");
      return this;
    }

    public Criteria andHandleAccountNotLike(String value) {
      addCriterion("HANDLE_ACCOUNT not like", value, "handleAccount");
      return this;
    }

    public Criteria andHandleAccountIn(List values) {
      addCriterion("HANDLE_ACCOUNT in", values, "handleAccount");
      return this;
    }

    public Criteria andHandleAccountNotIn(List values) {
      addCriterion("HANDLE_ACCOUNT not in", values, "handleAccount");
      return this;
    }

    public Criteria andHandleAccountBetween(String value1, String value2) {
      addCriterion("HANDLE_ACCOUNT between", value1, value2, "handleAccount");
      return this;
    }

    public Criteria andHandleAccountNotBetween(String value1, String value2) {
      addCriterion("HANDLE_ACCOUNT not between", value1, value2, "handleAccount");
      return this;
    }

    public Criteria andHandleTimeIsNull() {
      addCriterion("HANDLE_TIME is null");
      return this;
    }

    public Criteria andHandleTimeIsNotNull() {
      addCriterion("HANDLE_TIME is not null");
      return this;
    }

    public Criteria andHandleTimeEqualTo(Date value) {
      addCriterionForJDBCDate("HANDLE_TIME =", value, "handleTime");
      return this;
    }

    public Criteria andHandleTimeNotEqualTo(Date value) {
      addCriterionForJDBCDate("HANDLE_TIME <>", value, "handleTime");
      return this;
    }

    public Criteria andHandleTimeGreaterThan(Date value) {
      addCriterionForJDBCDate("HANDLE_TIME >", value, "handleTime");
      return this;
    }

    public Criteria andHandleTimeGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("HANDLE_TIME >=", value, "handleTime");
      return this;
    }

    public Criteria andHandleTimeLessThan(Date value) {
      addCriterionForJDBCDate("HANDLE_TIME <", value, "handleTime");
      return this;
    }

    public Criteria andHandleTimeLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("HANDLE_TIME <=", value, "handleTime");
      return this;
    }

    public Criteria andHandleTimeIn(List values) {
      addCriterionForJDBCDate("HANDLE_TIME in", values, "handleTime");
      return this;
    }

    public Criteria andHandleTimeNotIn(List values) {
      addCriterionForJDBCDate("HANDLE_TIME not in", values, "handleTime");
      return this;
    }

    public Criteria andHandleTimeBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("HANDLE_TIME between", value1, value2, "handleTime");
      return this;
    }

    public Criteria andHandleTimeNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("HANDLE_TIME not between", value1, value2, "handleTime");
      return this;
    }
  }
}
