package com.pltfm.app.entities;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@SuppressWarnings("unchecked")
public class CouponStatementExample implements Serializable {
  private static final long serialVersionUID = 1L;
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.COUPON_STATEMENT
   * 
   * @ibatorgenerated Wed Jan 08 15:27:02 CST 2014
   */
  protected String orderByClause;

  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * KMORDER.COUPON_STATEMENT
   * 
   * @ibatorgenerated Wed Jan 08 15:27:02 CST 2014
   */
  protected List oredCriteria;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.COUPON_STATEMENT
   * 
   * @ibatorgenerated Wed Jan 08 15:27:02 CST 2014
   */
  public CouponStatementExample() {
    oredCriteria = new ArrayList();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.COUPON_STATEMENT
   * 
   * @ibatorgenerated Wed Jan 08 15:27:02 CST 2014
   */
  protected CouponStatementExample(CouponStatementExample example) {
    this.orderByClause = example.orderByClause;
    this.oredCriteria = example.oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.COUPON_STATEMENT
   * 
   * @ibatorgenerated Wed Jan 08 15:27:02 CST 2014
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.COUPON_STATEMENT
   * 
   * @ibatorgenerated Wed Jan 08 15:27:02 CST 2014
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.COUPON_STATEMENT
   * 
   * @ibatorgenerated Wed Jan 08 15:27:02 CST 2014
   */
  public List getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.COUPON_STATEMENT
   * 
   * @ibatorgenerated Wed Jan 08 15:27:02 CST 2014
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.COUPON_STATEMENT
   * 
   * @ibatorgenerated Wed Jan 08 15:27:02 CST 2014
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.COUPON_STATEMENT
   * 
   * @ibatorgenerated Wed Jan 08 15:27:02 CST 2014
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table KMORDER.COUPON_STATEMENT
   * 
   * @ibatorgenerated Wed Jan 08 15:27:02 CST 2014
   */
  public void clear() {
    oredCriteria.clear();
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * KMORDER.COUPON_STATEMENT
   * 
   * @ibatorgenerated Wed Jan 08 15:27:02 CST 2014
   */
  public static class Criteria {
    protected List criteriaWithoutValue;

    protected List criteriaWithSingleValue;

    protected List criteriaWithListValue;

    protected List criteriaWithBetweenValue;

    protected Criteria() {
      super();
      criteriaWithoutValue = new ArrayList();
      criteriaWithSingleValue = new ArrayList();
      criteriaWithListValue = new ArrayList();
      criteriaWithBetweenValue = new ArrayList();
    }

    public boolean isValid() {
      return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
          || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
    }

    public List getCriteriaWithoutValue() {
      return criteriaWithoutValue;
    }

    public List getCriteriaWithSingleValue() {
      return criteriaWithSingleValue;
    }

    public List getCriteriaWithListValue() {
      return criteriaWithListValue;
    }

    public List getCriteriaWithBetweenValue() {
      return criteriaWithBetweenValue;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteriaWithoutValue.add(condition);
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("value", value);
      criteriaWithSingleValue.add(map);
    }

    protected void addCriterion(String condition, List values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", values);
      criteriaWithListValue.add(map);
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      List list = new ArrayList();
      list.add(value1);
      list.add(value2);
      Map map = new HashMap();
      map.put("condition", condition);
      map.put("values", list);
      criteriaWithBetweenValue.add(map);
    }

    public Criteria andStatementNoIsNull() {
      addCriterion("STATEMENT_NO is null");
      return this;
    }

    public Criteria andStatementNoIsNotNull() {
      addCriterion("STATEMENT_NO is not null");
      return this;
    }

    public Criteria andStatementNoEqualTo(Long value) {
      addCriterion("STATEMENT_NO =", value, "statementNo");
      return this;
    }

    public Criteria andStatementNoNotEqualTo(Long value) {
      addCriterion("STATEMENT_NO <>", value, "statementNo");
      return this;
    }

    public Criteria andStatementNoGreaterThan(Long value) {
      addCriterion("STATEMENT_NO >", value, "statementNo");
      return this;
    }

    public Criteria andStatementNoGreaterThanOrEqualTo(Long value) {
      addCriterion("STATEMENT_NO >=", value, "statementNo");
      return this;
    }

    public Criteria andStatementNoLessThan(Long value) {
      addCriterion("STATEMENT_NO <", value, "statementNo");
      return this;
    }

    public Criteria andStatementNoLessThanOrEqualTo(Long value) {
      addCriterion("STATEMENT_NO <=", value, "statementNo");
      return this;
    }

    public Criteria andStatementNoIn(List values) {
      addCriterion("STATEMENT_NO in", values, "statementNo");
      return this;
    }

    public Criteria andStatementNoNotIn(List values) {
      addCriterion("STATEMENT_NO not in", values, "statementNo");
      return this;
    }

    public Criteria andStatementNoBetween(Long value1, Long value2) {
      addCriterion("STATEMENT_NO between", value1, value2, "statementNo");
      return this;
    }

    public Criteria andStatementNoNotBetween(Long value1, Long value2) {
      addCriterion("STATEMENT_NO not between", value1, value2, "statementNo");
      return this;
    }

    public Criteria andOrderCodeIsNull() {
      addCriterion("ORDER_CODE is null");
      return this;
    }

    public Criteria andOrderCodeIsNotNull() {
      addCriterion("ORDER_CODE is not null");
      return this;
    }

    public Criteria andOrderCodeEqualTo(String value) {
      addCriterion("ORDER_CODE =", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotEqualTo(String value) {
      addCriterion("ORDER_CODE <>", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeGreaterThan(String value) {
      addCriterion("ORDER_CODE >", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeGreaterThanOrEqualTo(String value) {
      addCriterion("ORDER_CODE >=", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeLessThan(String value) {
      addCriterion("ORDER_CODE <", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeLessThanOrEqualTo(String value) {
      addCriterion("ORDER_CODE <=", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeLike(String value) {
      addCriterion("ORDER_CODE like", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotLike(String value) {
      addCriterion("ORDER_CODE not like", value, "orderCode");
      return this;
    }

    public Criteria andOrderCodeIn(List values) {
      addCriterion("ORDER_CODE in", values, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotIn(List values) {
      addCriterion("ORDER_CODE not in", values, "orderCode");
      return this;
    }

    public Criteria andOrderCodeBetween(String value1, String value2) {
      addCriterion("ORDER_CODE between", value1, value2, "orderCode");
      return this;
    }

    public Criteria andOrderCodeNotBetween(String value1, String value2) {
      addCriterion("ORDER_CODE not between", value1, value2, "orderCode");
      return this;
    }

    public Criteria andOrderAlterCodeIsNull() {
      addCriterion("ORDER_ALTER_CODE is null");
      return this;
    }

    public Criteria andOrderAlterCodeIsNotNull() {
      addCriterion("ORDER_ALTER_CODE is not null");
      return this;
    }

    public Criteria andOrderAlterCodeEqualTo(String value) {
      addCriterion("ORDER_ALTER_CODE =", value, "orderAlterCode");
      return this;
    }

    public Criteria andOrderAlterCodeNotEqualTo(String value) {
      addCriterion("ORDER_ALTER_CODE <>", value, "orderAlterCode");
      return this;
    }

    public Criteria andOrderAlterCodeGreaterThan(String value) {
      addCriterion("ORDER_ALTER_CODE >", value, "orderAlterCode");
      return this;
    }

    public Criteria andOrderAlterCodeGreaterThanOrEqualTo(String value) {
      addCriterion("ORDER_ALTER_CODE >=", value, "orderAlterCode");
      return this;
    }

    public Criteria andOrderAlterCodeLessThan(String value) {
      addCriterion("ORDER_ALTER_CODE <", value, "orderAlterCode");
      return this;
    }

    public Criteria andOrderAlterCodeLessThanOrEqualTo(String value) {
      addCriterion("ORDER_ALTER_CODE <=", value, "orderAlterCode");
      return this;
    }

    public Criteria andOrderAlterCodeLike(String value) {
      addCriterion("ORDER_ALTER_CODE like", value, "orderAlterCode");
      return this;
    }

    public Criteria andOrderAlterCodeNotLike(String value) {
      addCriterion("ORDER_ALTER_CODE not like", value, "orderAlterCode");
      return this;
    }

    public Criteria andOrderAlterCodeIn(List values) {
      addCriterion("ORDER_ALTER_CODE in", values, "orderAlterCode");
      return this;
    }

    public Criteria andOrderAlterCodeNotIn(List values) {
      addCriterion("ORDER_ALTER_CODE not in", values, "orderAlterCode");
      return this;
    }

    public Criteria andOrderAlterCodeBetween(String value1, String value2) {
      addCriterion("ORDER_ALTER_CODE between", value1, value2, "orderAlterCode");
      return this;
    }

    public Criteria andOrderAlterCodeNotBetween(String value1, String value2) {
      addCriterion("ORDER_ALTER_CODE not between", value1, value2, "orderAlterCode");
      return this;
    }

    public Criteria andCouponIdIsNull() {
      addCriterion("COUPON_ID is null");
      return this;
    }

    public Criteria andCouponIdIsNotNull() {
      addCriterion("COUPON_ID is not null");
      return this;
    }

    public Criteria andCouponIdEqualTo(String value) {
      addCriterion("COUPON_ID =", value, "couponId");
      return this;
    }

    public Criteria andCouponIdNotEqualTo(String value) {
      addCriterion("COUPON_ID <>", value, "couponId");
      return this;
    }

    public Criteria andCouponIdGreaterThan(String value) {
      addCriterion("COUPON_ID >", value, "couponId");
      return this;
    }

    public Criteria andCouponIdGreaterThanOrEqualTo(String value) {
      addCriterion("COUPON_ID >=", value, "couponId");
      return this;
    }

    public Criteria andCouponIdLessThan(String value) {
      addCriterion("COUPON_ID <", value, "couponId");
      return this;
    }

    public Criteria andCouponIdLessThanOrEqualTo(String value) {
      addCriterion("COUPON_ID <=", value, "couponId");
      return this;
    }

    public Criteria andCouponIdLike(String value) {
      addCriterion("COUPON_ID like", value, "couponId");
      return this;
    }

    public Criteria andCouponIdNotLike(String value) {
      addCriterion("COUPON_ID not like", value, "couponId");
      return this;
    }

    public Criteria andCouponIdIn(List values) {
      addCriterion("COUPON_ID in", values, "couponId");
      return this;
    }

    public Criteria andCouponIdNotIn(List values) {
      addCriterion("COUPON_ID not in", values, "couponId");
      return this;
    }

    public Criteria andCouponIdBetween(String value1, String value2) {
      addCriterion("COUPON_ID between", value1, value2, "couponId");
      return this;
    }

    public Criteria andCouponIdNotBetween(String value1, String value2) {
      addCriterion("COUPON_ID not between", value1, value2, "couponId");
      return this;
    }

    public Criteria andGrantIdIsNull() {
      addCriterion("GRANT_ID is null");
      return this;
    }

    public Criteria andGrantIdIsNotNull() {
      addCriterion("GRANT_ID is not null");
      return this;
    }

    public Criteria andGrantIdEqualTo(BigDecimal value) {
      addCriterion("GRANT_ID =", value, "grantId");
      return this;
    }

    public Criteria andGrantIdNotEqualTo(BigDecimal value) {
      addCriterion("GRANT_ID <>", value, "grantId");
      return this;
    }

    public Criteria andGrantIdGreaterThan(BigDecimal value) {
      addCriterion("GRANT_ID >", value, "grantId");
      return this;
    }

    public Criteria andGrantIdGreaterThanOrEqualTo(BigDecimal value) {
      addCriterion("GRANT_ID >=", value, "grantId");
      return this;
    }

    public Criteria andGrantIdLessThan(BigDecimal value) {
      addCriterion("GRANT_ID <", value, "grantId");
      return this;
    }

    public Criteria andGrantIdLessThanOrEqualTo(BigDecimal value) {
      addCriterion("GRANT_ID <=", value, "grantId");
      return this;
    }

    public Criteria andGrantIdIn(List values) {
      addCriterion("GRANT_ID in", values, "grantId");
      return this;
    }

    public Criteria andGrantIdNotIn(List values) {
      addCriterion("GRANT_ID not in", values, "grantId");
      return this;
    }

    public Criteria andGrantIdBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("GRANT_ID between", value1, value2, "grantId");
      return this;
    }

    public Criteria andGrantIdNotBetween(BigDecimal value1, BigDecimal value2) {
      addCriterion("GRANT_ID not between", value1, value2, "grantId");
      return this;
    }

    public Criteria andStatusIsNull() {
      addCriterion("STATUS is null");
      return this;
    }

    public Criteria andStatusIsNotNull() {
      addCriterion("STATUS is not null");
      return this;
    }

    public Criteria andStatusEqualTo(Short value) {
      addCriterion("STATUS =", value, "status");
      return this;
    }

    public Criteria andStatusNotEqualTo(Short value) {
      addCriterion("STATUS <>", value, "status");
      return this;
    }

    public Criteria andStatusGreaterThan(Short value) {
      addCriterion("STATUS >", value, "status");
      return this;
    }

    public Criteria andStatusGreaterThanOrEqualTo(Short value) {
      addCriterion("STATUS >=", value, "status");
      return this;
    }

    public Criteria andStatusLessThan(Short value) {
      addCriterion("STATUS <", value, "status");
      return this;
    }

    public Criteria andStatusLessThanOrEqualTo(Short value) {
      addCriterion("STATUS <=", value, "status");
      return this;
    }

    public Criteria andStatusIn(List values) {
      addCriterion("STATUS in", values, "status");
      return this;
    }

    public Criteria andStatusNotIn(List values) {
      addCriterion("STATUS not in", values, "status");
      return this;
    }

    public Criteria andStatusBetween(Short value1, Short value2) {
      addCriterion("STATUS between", value1, value2, "status");
      return this;
    }

    public Criteria andStatusNotBetween(Short value1, Short value2) {
      addCriterion("STATUS not between", value1, value2, "status");
      return this;
    }
  }
}
