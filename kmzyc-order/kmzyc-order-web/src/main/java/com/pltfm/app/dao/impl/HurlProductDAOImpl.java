package com.pltfm.app.dao.impl;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.apache.commons.collections.CollectionUtils;
import org.springframework.stereotype.Repository;

import com.pltfm.app.dao.BaseDAO;
import com.pltfm.app.dao.HurlProductDAO;
import com.pltfm.app.entities.HurlProduct;
import com.pltfm.app.entities.HurlProductCriteria;
import com.pltfm.app.entities.HurlProductExample;

@SuppressWarnings("unchecked")
@Repository("hurlProductDAO")
public class HurlProductDAOImpl extends BaseDAO implements HurlProductDAO {

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table HURL_PRODUCT
   * 
   * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
   */
  public int countByExample(HurlProductExample example) throws SQLException {
    Integer count =
        (Integer) sqlMapClient.queryForObject("HURL_PRODUCT.ibatorgenerated_countByExample",
            example);
    return count.intValue();
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table HURL_PRODUCT
   * 
   * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
   */
  public int deleteByExample(HurlProductExample example) throws SQLException {
    int rows = sqlMapClient.delete("HURL_PRODUCT.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table HURL_PRODUCT
   * 
   * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
   */
  public int deleteByPrimaryKey(Long settlementHurlId) throws SQLException {
    HurlProduct key = new HurlProduct();
    key.setSettlementHurlId(settlementHurlId);
    int rows = sqlMapClient.delete("HURL_PRODUCT.ibatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table HURL_PRODUCT
   * 
   * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
   */
  public Long insert(HurlProduct record) throws SQLException {
    Object newKey = sqlMapClient.insert("HURL_PRODUCT.ibatorgenerated_insert", record);
    return (Long) newKey;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table HURL_PRODUCT
   * 
   * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
   */
  public Long insertSelective(HurlProduct record) throws SQLException {
    Object newKey = sqlMapClient.insert("HURL_PRODUCT.ibatorgenerated_insertSelective", record);
    return (Long) newKey;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table HURL_PRODUCT
   * 
   * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
   */
  public List selectByExample(HurlProductExample example) throws SQLException {
    if (null == example) {
      example = new HurlProductExample();
    }
    List list = sqlMapClient.queryForList("HURL_PRODUCT.ibatorgenerated_selectByExample", example);
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table HURL_PRODUCT
   * 
   * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
   */
  public HurlProduct selectByPrimaryKey(Long settlementHurlId) throws SQLException {
    HurlProduct key = new HurlProduct();
    key.setSettlementHurlId(settlementHurlId);
    HurlProduct record =
        (HurlProduct) sqlMapClient.queryForObject(
            "HURL_PRODUCT.ibatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table HURL_PRODUCT
   * 
   * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
   */
  public int updateByExampleSelective(HurlProduct record, HurlProductExample example)
      throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("HURL_PRODUCT.ibatorgenerated_updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table HURL_PRODUCT
   * 
   * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
   */
  public int updateByExample(HurlProduct record, HurlProductExample example) throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("HURL_PRODUCT.ibatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table HURL_PRODUCT
   * 
   * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
   */
  public int updateByPrimaryKeySelective(HurlProduct record) throws SQLException {
    int rows =
        sqlMapClient.update("HURL_PRODUCT.ibatorgenerated_updateByPrimaryKeySelective", record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table HURL_PRODUCT
   * 
   * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
   */
  public int updateByPrimaryKey(HurlProduct record) throws SQLException {
    int rows = sqlMapClient.update("HURL_PRODUCT.ibatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * HURL_PRODUCT
   * 
   * @ibatorgenerated Wed Apr 15 10:27:20 CST 2015
   */
  private static class UpdateByExampleParms extends HurlProductExample {
    /**
		 * 
		 */
    private static final long serialVersionUID = 1L;
    private Object record;

    public UpdateByExampleParms(Object record, HurlProductExample example) {
      super(example);
      this.record = record;
    }

    @SuppressWarnings("unused")
    public Object getRecord() {
      return record;
    }
  }

  @Override
  public Map selectHurlSum(HurlProductCriteria hurlProductCriteria) throws SQLException {
    List list = sqlMapClient.queryForList("HURL_PRODUCT.selectHurlSum", hurlProductCriteria);
    return (CollectionUtils.isEmpty(list) ? null : (Map) list.get(0));
  }

  @Override
  public List<Map<String, Object>> queryExportHurlInfo(Map<String, String> map) throws SQLException {
    List<Map<String, Object>> list =
        sqlMapClient.queryForList("HURL_PRODUCT.queryExportHurlInfo", map);
    return list;
  }
}
