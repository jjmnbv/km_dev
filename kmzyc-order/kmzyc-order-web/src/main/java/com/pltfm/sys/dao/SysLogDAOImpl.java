package com.pltfm.sys.dao;

import java.sql.SQLException;
import java.util.List;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.kmzyc.commons.page.Page;
import com.pltfm.sys.model.SysLog;
import com.pltfm.sys.model.SysLogExample;
import com.pltfm.sys.model.SysModelUtil;

@SuppressWarnings("unchecked")
public class SysLogDAOImpl implements SysLogDAO {
  /**
   * This field was generated by Apache iBATIS ibator. This field corresponds to the database table
   * SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  private SqlMapClient sqlMapClient;

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  public SysLogDAOImpl(SqlMapClient sqlMapClient) {
    super();
    this.sqlMapClient = sqlMapClient;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  @Override
public int countByExample(SysLogExample example) throws SQLException {
    Integer count =
        (Integer) sqlMapClient.queryForObject("SYS_LOG.ibatorgenerated_countByExample", example);
    return count;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  @Override
public int deleteByExample(SysLogExample example) throws SQLException {
    int rows = sqlMapClient.delete("SYS_LOG.ibatorgenerated_deleteByExample", example);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  @Override
public int deleteByPrimaryKey(Integer syslogId) throws SQLException {
    SysLog key = new SysLog();
    key.setSyslogId(syslogId);
    int rows = sqlMapClient.delete("SYS_LOG.ibatorgenerated_deleteByPrimaryKey", key);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  @Override
public Integer insert(SysLog record) throws SQLException {
    Object newKey = sqlMapClient.insert("SYS_LOG.ibatorgenerated_insert", record);
    return (Integer) newKey;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  @Override
public Integer insertSelective(SysLog record) throws SQLException {
    Object newKey = sqlMapClient.insert("SYS_LOG.ibatorgenerated_insertSelective", record);
    return (Integer) newKey;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  @Override
public List<SysLog> selectByExample(SysLogExample example) throws SQLException {
    List<SysLog> list =
        sqlMapClient.queryForList("SYS_LOG.ibatorgenerated_selectByExample", example);
    return list;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  @Override
public SysLog selectByPrimaryKey(Integer syslogId) throws SQLException {
    SysLog key = new SysLog();
    key.setSyslogId(syslogId);
    SysLog record =
        (SysLog) sqlMapClient.queryForObject("SYS_LOG.ibatorgenerated_selectByPrimaryKey", key);
    return record;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  @Override
public int updateByExampleSelective(SysLog record, SysLogExample example) throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("SYS_LOG.ibatorgenerated_updateByExampleSelective", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  @Override
public int updateByExample(SysLog record, SysLogExample example) throws SQLException {
    UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
    int rows = sqlMapClient.update("SYS_LOG.ibatorgenerated_updateByExample", parms);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  @Override
public int updateByPrimaryKeySelective(SysLog record) throws SQLException {
    int rows = sqlMapClient.update("SYS_LOG.ibatorgenerated_updateByPrimaryKeySelective", record);
    return rows;
  }

  /**
   * This method was generated by Apache iBATIS ibator. This method corresponds to the database
   * table SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  @Override
public int updateByPrimaryKey(SysLog record) throws SQLException {
    int rows = sqlMapClient.update("SYS_LOG.ibatorgenerated_updateByPrimaryKey", record);
    return rows;
  }

  /**
   * This class was generated by Apache iBATIS ibator. This class corresponds to the database table
   * SYS_LOG
   * 
   * @ibatorgenerated Thu Nov 24 14:28:04 CST 2011
   */
  private static class UpdateByExampleParms extends SysLogExample {
    private Object record;

    public UpdateByExampleParms(Object record, SysLogExample example) {
      super(example);
      this.record = record;
    }

    @SuppressWarnings("unused")
    public Object getRecord() {
      return record;
    }
  }

  /******************************************************/
  @Override
public Page selectPageByVo(Page page, SysLog vo) throws SQLException {
    SysModelUtil countResult =
        (SysModelUtil) sqlMapClient.queryForObject("SYS_LOG.getSysLogCount", vo);
    int recs = countResult.getTheCount().intValue();
    int pagecount = 1;
    if (recs > 1) pagecount = (recs - 1) / page.getPageSize() + 1;
    page.setRecordCount(recs);
    page.setPageCount(pagecount);
    List pageList = sqlMapClient.queryForList("SYS_LOG.searchPageByVo", vo);
    page.setDataList(pageList);
    return page;
  }

  /******************************************************/
  @Override
public List selectLogUsersList(Integer loguser) throws SQLException {
    SysLog key = new SysLog();
    key.setSyslogUser(loguser);
    List list = sqlMapClient.queryForList("SYS_LOG.selectLogUsersList", key);
    return list;
  }
}
